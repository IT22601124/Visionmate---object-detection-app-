{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NativeEventsManager = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _utils = require(\"./utils\");\nvar _WorkletEventHandler = require(\"../WorkletEventHandler\");\nvar _reactNative = require(\"react-native\");\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\nfunction _classPrivateFieldGet(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _classPrivateFieldSet(s, a, r) {\n  return s.set(_assertClassBrand(s, a), r), r;\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nvar _managedComponent = new WeakMap();\nvar _componentOptions = new WeakMap();\nvar _eventViewTag = new WeakMap();\nvar NativeEventsManager = exports.NativeEventsManager = function () {\n  function NativeEventsManager(component, options) {\n    (0, _classCallCheck2.default)(this, NativeEventsManager);\n    _classPrivateFieldInitSpec(this, _managedComponent, void 0);\n    _classPrivateFieldInitSpec(this, _componentOptions, void 0);\n    _classPrivateFieldInitSpec(this, _eventViewTag, -1);\n    _classPrivateFieldSet(_managedComponent, this, component);\n    _classPrivateFieldSet(_componentOptions, this, options);\n    _classPrivateFieldSet(_eventViewTag, this, this.getEventViewTag());\n  }\n  return (0, _createClass2.default)(NativeEventsManager, [{\n    key: \"attachEvents\",\n    value: function attachEvents() {\n      var _this = this;\n      executeForEachEventHandler(_classPrivateFieldGet(_managedComponent, this).props, function (key, handler) {\n        handler.registerForEvents(_classPrivateFieldGet(_eventViewTag, _this), key);\n      });\n    }\n  }, {\n    key: \"detachEvents\",\n    value: function detachEvents() {\n      var _this2 = this;\n      executeForEachEventHandler(_classPrivateFieldGet(_managedComponent, this).props, function (_key, handler) {\n        handler.unregisterFromEvents(_classPrivateFieldGet(_eventViewTag, _this2));\n      });\n    }\n  }, {\n    key: \"updateEvents\",\n    value: function updateEvents(prevProps) {\n      var _this3 = this;\n      var computedEventTag = this.getEventViewTag();\n      if (_classPrivateFieldGet(_eventViewTag, this) !== computedEventTag) {\n        executeForEachEventHandler(prevProps, function (_key, handler) {\n          handler.unregisterFromEvents(_classPrivateFieldGet(_eventViewTag, _this3));\n        });\n        _classPrivateFieldSet(_eventViewTag, this, computedEventTag);\n        this.attachEvents();\n        return;\n      }\n      executeForEachEventHandler(prevProps, function (key, prevHandler) {\n        var newProp = _classPrivateFieldGet(_managedComponent, _this3).props[key];\n        if (!newProp) {\n          prevHandler.unregisterFromEvents(_classPrivateFieldGet(_eventViewTag, _this3));\n        } else if (isWorkletEventHandler(newProp) && newProp.workletEventHandler !== prevHandler) {\n          prevHandler.unregisterFromEvents(_classPrivateFieldGet(_eventViewTag, _this3));\n          newProp.workletEventHandler.registerForEvents(_classPrivateFieldGet(_eventViewTag, _this3));\n        }\n      });\n      executeForEachEventHandler(_classPrivateFieldGet(_managedComponent, this).props, function (key, handler) {\n        if (!prevProps[key]) {\n          handler.registerForEvents(_classPrivateFieldGet(_eventViewTag, _this3));\n        }\n      });\n    }\n  }, {\n    key: \"getEventViewTag\",\n    value: function getEventViewTag() {\n      var componentAnimatedRef = _classPrivateFieldGet(_managedComponent, this)._component;\n      var newTag;\n      if (componentAnimatedRef.getScrollableNode) {\n        var _findNodeHandle;\n        var scrollableNode = componentAnimatedRef.getScrollableNode();\n        newTag = (_findNodeHandle = (0, _reactNative.findNodeHandle)(scrollableNode)) != null ? _findNodeHandle : -1;\n      } else {\n        var _findNodeHandle2;\n        var _classPrivateFieldGet2;\n        newTag = (_findNodeHandle2 = (0, _reactNative.findNodeHandle)((_classPrivateFieldGet2 = _classPrivateFieldGet(_componentOptions, this)) !== null && _classPrivateFieldGet2 !== void 0 && _classPrivateFieldGet2.setNativeProps ? _classPrivateFieldGet(_managedComponent, this) : componentAnimatedRef)) != null ? _findNodeHandle2 : -1;\n      }\n      return newTag;\n    }\n  }]);\n}();\nfunction isWorkletEventHandler(prop) {\n  return (0, _utils.has)('workletEventHandler', prop) && prop.workletEventHandler instanceof _WorkletEventHandler.WorkletEventHandler;\n}\nfunction executeForEachEventHandler(props, callback) {\n  for (var key in props) {\n    var prop = props[key];\n    if (isWorkletEventHandler(prop)) {\n      callback(key, prop.workletEventHandler);\n    }\n  }\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","NativeEventsManager","_classCallCheck2","_createClass2","_utils","_WorkletEventHandler","_reactNative","_classPrivateFieldInitSpec","obj","privateMap","_checkPrivateRedeclaration","set","privateCollection","has","TypeError","_classPrivateFieldGet","s","a","get","_assertClassBrand","_classPrivateFieldSet","r","e","t","n","arguments","length","_managedComponent","WeakMap","_componentOptions","_eventViewTag","component","options","default","getEventViewTag","key","attachEvents","_this","executeForEachEventHandler","props","handler","registerForEvents","detachEvents","_this2","_key","unregisterFromEvents","updateEvents","prevProps","_this3","computedEventTag","prevHandler","newProp","isWorkletEventHandler","workletEventHandler","componentAnimatedRef","_component","newTag","getScrollableNode","_findNodeHandle","scrollableNode","findNodeHandle","_findNodeHandle2","_classPrivateFieldGet2","setNativeProps","prop","WorkletEventHandler","callback"],"sources":["F:\\node\\vision\\node_modules\\react-native-reanimated\\lib\\module\\createAnimatedComponent\\NativeEventsManager.ts"],"sourcesContent":["'use strict';\nimport type {\n  INativeEventsManager,\n  IAnimatedComponentInternal,\n  AnimatedComponentProps,\n  InitialComponentProps,\n  AnimatedComponentRef,\n} from './commonTypes';\nimport { has } from './utils';\nimport { WorkletEventHandler } from '../WorkletEventHandler';\nimport { findNodeHandle } from 'react-native';\n\nexport class NativeEventsManager implements INativeEventsManager {\n  readonly #managedComponent: ManagedAnimatedComponent;\n  readonly #componentOptions?: ComponentOptions;\n  #eventViewTag = -1;\n\n  constructor(component: ManagedAnimatedComponent, options?: ComponentOptions) {\n    this.#managedComponent = component;\n    this.#componentOptions = options;\n    this.#eventViewTag = this.getEventViewTag();\n  }\n\n  public attachEvents() {\n    executeForEachEventHandler(this.#managedComponent.props, (key, handler) => {\n      handler.registerForEvents(this.#eventViewTag, key);\n    });\n  }\n\n  public detachEvents() {\n    executeForEachEventHandler(\n      this.#managedComponent.props,\n      (_key, handler) => {\n        handler.unregisterFromEvents(this.#eventViewTag);\n      }\n    );\n  }\n\n  public updateEvents(\n    prevProps: AnimatedComponentProps<InitialComponentProps>\n  ) {\n    const computedEventTag = this.getEventViewTag();\n    // If the event view tag changes, we need to completely re-mount all events\n    if (this.#eventViewTag !== computedEventTag) {\n      // Remove all bindings from previous props that ran on the old viewTag\n      executeForEachEventHandler(prevProps, (_key, handler) => {\n        handler.unregisterFromEvents(this.#eventViewTag);\n      });\n      // We don't need to unregister from current (new) props, because their events weren't registered yet\n      // Replace the view tag\n      this.#eventViewTag = computedEventTag;\n      // Attach the events with a new viewTag\n      this.attachEvents();\n      return;\n    }\n\n    executeForEachEventHandler(prevProps, (key, prevHandler) => {\n      const newProp = this.#managedComponent.props[key];\n      if (!newProp) {\n        // Prop got deleted\n        prevHandler.unregisterFromEvents(this.#eventViewTag);\n      } else if (\n        isWorkletEventHandler(newProp) &&\n        newProp.workletEventHandler !== prevHandler\n      ) {\n        // Prop got changed\n        prevHandler.unregisterFromEvents(this.#eventViewTag);\n        newProp.workletEventHandler.registerForEvents(this.#eventViewTag);\n      }\n    });\n\n    executeForEachEventHandler(this.#managedComponent.props, (key, handler) => {\n      if (!prevProps[key]) {\n        // Prop got added\n        handler.registerForEvents(this.#eventViewTag);\n      }\n    });\n  }\n\n  private getEventViewTag() {\n    // Get the tag for registering events - since the event emitting view can be nested inside the main component\n    const componentAnimatedRef = this.#managedComponent\n      ._component as AnimatedComponentRef;\n    let newTag: number;\n    if (componentAnimatedRef.getScrollableNode) {\n      const scrollableNode = componentAnimatedRef.getScrollableNode();\n      newTag = findNodeHandle(scrollableNode) ?? -1;\n    } else {\n      newTag =\n        findNodeHandle(\n          this.#componentOptions?.setNativeProps\n            ? this.#managedComponent\n            : componentAnimatedRef\n        ) ?? -1;\n    }\n    return newTag;\n  }\n}\n\nfunction isWorkletEventHandler(\n  prop: unknown\n): prop is WorkletEventHandlerHolder {\n  return (\n    has('workletEventHandler', prop) &&\n    prop.workletEventHandler instanceof WorkletEventHandler\n  );\n}\n\nfunction executeForEachEventHandler(\n  props: AnimatedComponentProps<InitialComponentProps>,\n  callback: (\n    key: string,\n    handler: InstanceType<typeof WorkletEventHandler>\n  ) => void\n) {\n  for (const key in props) {\n    const prop = props[key];\n    if (isWorkletEventHandler(prop)) {\n      callback(key, prop.workletEventHandler);\n    }\n  }\n}\n\ntype ManagedAnimatedComponent = React.Component<\n  AnimatedComponentProps<InitialComponentProps>\n> &\n  IAnimatedComponentInternal;\n\ntype ComponentOptions = {\n  setNativeProps: (\n    ref: AnimatedComponentRef,\n    props: InitialComponentProps\n  ) => void;\n};\n\ntype WorkletEventHandlerHolder = {\n  workletEventHandler: InstanceType<typeof WorkletEventHandler>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}