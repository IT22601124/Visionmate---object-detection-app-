{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _ExponentAV = _interopRequireDefault(require(\"./ExponentAV\"));\nvar _FullscreenUtils = require(\"./FullscreenUtils.web\");\nvar _default = exports.default = {\n  get ScaleNone() {\n    return 'none';\n  },\n  get ScaleToFill() {\n    return 'fill';\n  },\n  get ScaleAspectFit() {\n    return 'contain';\n  },\n  get ScaleAspectFill() {\n    return 'cover';\n  },\n  setFullscreen: function () {\n    var _setFullscreen = (0, _asyncToGenerator2.default)(function* (element, isFullScreenEnabled) {\n      if (isFullScreenEnabled) {\n        yield (0, _FullscreenUtils.requestFullscreen)(element);\n      } else {\n        yield (0, _FullscreenUtils.exitFullscreen)(element);\n      }\n      return _ExponentAV.default.getStatusForVideo(element);\n    });\n    function setFullscreen(_x, _x2) {\n      return _setFullscreen.apply(this, arguments);\n    }\n    return setFullscreen;\n  }()\n};","map":{"version":3,"names":["_ExponentAV","_interopRequireDefault","require","_FullscreenUtils","_default","exports","default","ScaleNone","ScaleToFill","ScaleAspectFit","ScaleAspectFill","setFullscreen","_setFullscreen","_asyncToGenerator2","element","isFullScreenEnabled","requestFullscreen","exitFullscreen","ExponentAV","getStatusForVideo","_x","_x2","apply","arguments"],"sources":["F:\\node\\vision\\node_modules\\expo-av\\src\\ExpoVideoManager.web.ts"],"sourcesContent":["import { AVPlaybackStatus } from './AV';\nimport ExponentAV from './ExponentAV';\nimport { requestFullscreen, exitFullscreen } from './FullscreenUtils.web';\n\nexport default {\n  get ScaleNone(): string {\n    return 'none';\n  },\n  get ScaleToFill(): string {\n    return 'fill';\n  },\n  get ScaleAspectFit(): string {\n    return 'contain';\n  },\n  get ScaleAspectFill(): string {\n    return 'cover';\n  },\n\n  async setFullscreen(\n    element: HTMLMediaElement,\n    isFullScreenEnabled: boolean\n  ): Promise<AVPlaybackStatus> {\n    if (isFullScreenEnabled) {\n      await requestFullscreen(element);\n    } else {\n      await exitFullscreen(element);\n    }\n    return ExponentAV.getStatusForVideo(element);\n  },\n};\n"],"mappings":";;;;;;AACA,IAAAA,WAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,gBAAA,GAAAD,OAAA;AAA0E,IAAAE,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAE3D;EACb,IAAIC,SAASA,CAAA;IACX,OAAO,MAAM;EACf,CAAC;EACD,IAAIC,WAAWA,CAAA;IACb,OAAO,MAAM;EACf,CAAC;EACD,IAAIC,cAAcA,CAAA;IAChB,OAAO,SAAS;EAClB,CAAC;EACD,IAAIC,eAAeA,CAAA;IACjB,OAAO,OAAO;EAChB,CAAC;EAEKC,aAAa;IAAA,IAAAC,cAAA,OAAAC,kBAAA,CAAAP,OAAA,aACjBQ,OAAyB,EACzBC,mBAA4B;MAE5B,IAAIA,mBAAmB,EAAE;QACvB,MAAM,IAAAC,kCAAiB,EAACF,OAAO,CAAC;OACjC,MAAM;QACL,MAAM,IAAAG,+BAAc,EAACH,OAAO,CAAC;;MAE/B,OAAOI,mBAAU,CAACC,iBAAiB,CAACL,OAAO,CAAC;IAC9C,CAAC;IAAA,SAVKH,aAAaA,CAAAS,EAAA,EAAAC,GAAA;MAAA,OAAAT,cAAA,CAAAU,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAbZ,aAAa;EAAA;CAWpB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}