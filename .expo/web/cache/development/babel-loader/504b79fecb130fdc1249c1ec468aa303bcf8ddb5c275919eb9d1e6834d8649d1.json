{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkletEventHandler = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _core = require(\"./core\");\nvar _PlatformChecker = require(\"./PlatformChecker\");\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _classPrivateFieldGet(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _classPrivateFieldSet(s, a, r) {\n  return s.set(_assertClassBrand(s, a), r), r;\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nvar SHOULD_BE_USE_WEB = (0, _PlatformChecker.shouldBeUseWeb)();\nfunction jsListener(eventName, handler) {\n  return function (evt) {\n    handler(Object.assign({}, evt.nativeEvent, {\n      eventName: eventName\n    }));\n  };\n}\nvar _viewTags = new WeakMap();\nvar _registrations = new WeakMap();\nvar WorkletEventHandlerNative = function () {\n  function WorkletEventHandlerNative(worklet, eventNames) {\n    (0, _classCallCheck2.default)(this, WorkletEventHandlerNative);\n    _defineProperty(this, \"eventNames\", void 0);\n    _defineProperty(this, \"worklet\", void 0);\n    _classPrivateFieldInitSpec(this, _viewTags, void 0);\n    _classPrivateFieldInitSpec(this, _registrations, void 0);\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    _classPrivateFieldSet(_viewTags, this, new Set());\n    _classPrivateFieldSet(_registrations, this, new Map());\n  }\n  return (0, _createClass2.default)(WorkletEventHandlerNative, [{\n    key: \"updateEventHandler\",\n    value: function updateEventHandler(newWorklet, newEvents) {\n      var _this = this;\n      this.worklet = newWorklet;\n      this.eventNames = newEvents;\n      _classPrivateFieldGet(_registrations, this).forEach(function (registrationIDs) {\n        registrationIDs.forEach(function (id) {\n          return (0, _core.unregisterEventHandler)(id);\n        });\n      });\n      Array.from(_classPrivateFieldGet(_viewTags, this)).forEach(function (tag) {\n        var newRegistrations = _this.eventNames.map(function (eventName) {\n          return (0, _core.registerEventHandler)(_this.worklet, eventName, tag);\n        });\n        _classPrivateFieldGet(_registrations, _this).set(tag, newRegistrations);\n      });\n    }\n  }, {\n    key: \"registerForEvents\",\n    value: function registerForEvents(viewTag, fallbackEventName) {\n      var _this2 = this;\n      _classPrivateFieldGet(_viewTags, this).add(viewTag);\n      var newRegistrations = this.eventNames.map(function (eventName) {\n        return (0, _core.registerEventHandler)(_this2.worklet, eventName, viewTag);\n      });\n      _classPrivateFieldGet(_registrations, this).set(viewTag, newRegistrations);\n      if (this.eventNames.length === 0 && fallbackEventName) {\n        var newRegistration = (0, _core.registerEventHandler)(this.worklet, fallbackEventName, viewTag);\n        _classPrivateFieldGet(_registrations, this).set(viewTag, [newRegistration]);\n      }\n    }\n  }, {\n    key: \"unregisterFromEvents\",\n    value: function unregisterFromEvents(viewTag) {\n      var _classPrivateFieldGet2;\n      _classPrivateFieldGet(_viewTags, this).delete(viewTag);\n      (_classPrivateFieldGet2 = _classPrivateFieldGet(_registrations, this).get(viewTag)) === null || _classPrivateFieldGet2 === void 0 || _classPrivateFieldGet2.forEach(function (id) {\n        (0, _core.unregisterEventHandler)(id);\n      });\n      _classPrivateFieldGet(_registrations, this).delete(viewTag);\n    }\n  }]);\n}();\nvar WorkletEventHandlerWeb = function () {\n  function WorkletEventHandlerWeb(worklet) {\n    var eventNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    (0, _classCallCheck2.default)(this, WorkletEventHandlerWeb);\n    _defineProperty(this, \"eventNames\", void 0);\n    _defineProperty(this, \"listeners\", void 0);\n    _defineProperty(this, \"worklet\", void 0);\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    this.listeners = {};\n    this.setupWebListeners();\n  }\n  return (0, _createClass2.default)(WorkletEventHandlerWeb, [{\n    key: \"setupWebListeners\",\n    value: function setupWebListeners() {\n      var _this3 = this;\n      this.listeners = {};\n      this.eventNames.forEach(function (eventName) {\n        _this3.listeners[eventName] = jsListener(eventName, _this3.worklet);\n      });\n    }\n  }, {\n    key: \"updateEventHandler\",\n    value: function updateEventHandler(newWorklet, newEvents) {\n      this.worklet = newWorklet;\n      this.eventNames = newEvents;\n      this.setupWebListeners();\n    }\n  }, {\n    key: \"registerForEvents\",\n    value: function registerForEvents(_viewTag, _fallbackEventName) {}\n  }, {\n    key: \"unregisterFromEvents\",\n    value: function unregisterFromEvents(_viewTag) {}\n  }]);\n}();\nvar WorkletEventHandler = exports.WorkletEventHandler = SHOULD_BE_USE_WEB ? WorkletEventHandlerWeb : WorkletEventHandlerNative;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","WorkletEventHandler","_classCallCheck2","_createClass2","_core","_PlatformChecker","_classPrivateFieldInitSpec","obj","privateMap","_checkPrivateRedeclaration","set","privateCollection","has","TypeError","_defineProperty","key","_toPropertyKey","enumerable","configurable","writable","t","i","_toPrimitive","r","e","Symbol","toPrimitive","call","String","Number","_classPrivateFieldGet","s","a","get","_assertClassBrand","_classPrivateFieldSet","n","arguments","length","SHOULD_BE_USE_WEB","shouldBeUseWeb","jsListener","eventName","handler","evt","assign","nativeEvent","_viewTags","WeakMap","_registrations","WorkletEventHandlerNative","worklet","eventNames","default","Set","Map","updateEventHandler","newWorklet","newEvents","_this","forEach","registrationIDs","id","unregisterEventHandler","Array","from","tag","newRegistrations","map","registerEventHandler","registerForEvents","viewTag","fallbackEventName","_this2","add","newRegistration","unregisterFromEvents","_classPrivateFieldGet2","delete","WorkletEventHandlerWeb","undefined","listeners","setupWebListeners","_this3","_viewTag","_fallbackEventName"],"sources":["F:\\node\\vision\\node_modules\\react-native-reanimated\\lib\\module\\WorkletEventHandler.ts"],"sourcesContent":["'use strict';\nimport type { NativeSyntheticEvent } from 'react-native';\nimport { registerEventHandler, unregisterEventHandler } from './core';\nimport type {\n  EventPayload,\n  ReanimatedEvent,\n  IWorkletEventHandler,\n} from './hook/commonTypes';\nimport { shouldBeUseWeb } from './PlatformChecker';\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\ntype JSEvent<Event extends object> = NativeSyntheticEvent<EventPayload<Event>>;\n\n// In JS implementation (e.g. for web) we don't use Reanimated's\n// event emitter, therefore we have to handle here\n// the event that came from React Native and convert it.\nfunction jsListener<Event extends object>(\n  eventName: string,\n  handler: (event: ReanimatedEvent<Event>) => void\n) {\n  return (evt: JSEvent<Event>) => {\n    handler({ ...evt.nativeEvent, eventName } as ReanimatedEvent<Event>);\n  };\n}\n\nclass WorkletEventHandlerNative<Event extends object>\n  implements IWorkletEventHandler<Event>\n{\n  eventNames: string[];\n  worklet: (event: ReanimatedEvent<Event>) => void;\n  #viewTags: Set<number>;\n  #registrations: Map<number, number[]>; // keys are viewTags, values are arrays of registration ID's for each viewTag\n  constructor(\n    worklet: (event: ReanimatedEvent<Event>) => void,\n    eventNames: string[]\n  ) {\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    this.#viewTags = new Set<number>();\n    this.#registrations = new Map<number, number[]>();\n  }\n\n  updateEventHandler(\n    newWorklet: (event: ReanimatedEvent<Event>) => void,\n    newEvents: string[]\n  ): void {\n    // Update worklet and event names\n    this.worklet = newWorklet;\n    this.eventNames = newEvents;\n\n    // Detach all events\n    this.#registrations.forEach((registrationIDs) => {\n      registrationIDs.forEach((id) => unregisterEventHandler(id));\n      // No need to remove registrationIDs from map, since it gets overwritten when attaching\n    });\n\n    // Attach new events with new worklet\n    Array.from(this.#viewTags).forEach((tag) => {\n      const newRegistrations = this.eventNames.map((eventName) =>\n        registerEventHandler(this.worklet, eventName, tag)\n      );\n      this.#registrations.set(tag, newRegistrations);\n    });\n  }\n\n  registerForEvents(viewTag: number, fallbackEventName?: string): void {\n    this.#viewTags.add(viewTag);\n\n    const newRegistrations = this.eventNames.map((eventName) =>\n      registerEventHandler(this.worklet, eventName, viewTag)\n    );\n    this.#registrations.set(viewTag, newRegistrations);\n\n    if (this.eventNames.length === 0 && fallbackEventName) {\n      const newRegistration = registerEventHandler(\n        this.worklet,\n        fallbackEventName,\n        viewTag\n      );\n      this.#registrations.set(viewTag, [newRegistration]);\n    }\n  }\n\n  unregisterFromEvents(viewTag: number): void {\n    this.#viewTags.delete(viewTag);\n    this.#registrations.get(viewTag)?.forEach((id) => {\n      unregisterEventHandler(id);\n    });\n    this.#registrations.delete(viewTag);\n  }\n}\n\nclass WorkletEventHandlerWeb<Event extends object>\n  implements IWorkletEventHandler<Event>\n{\n  eventNames: string[];\n  listeners:\n    | Record<string, (event: ReanimatedEvent<ReanimatedEvent<Event>>) => void>\n    | Record<string, (event: JSEvent<Event>) => void>;\n\n  worklet: (event: ReanimatedEvent<Event>) => void;\n\n  constructor(\n    worklet: (event: ReanimatedEvent<Event>) => void,\n    eventNames: string[] = []\n  ) {\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    this.listeners = {};\n    this.setupWebListeners();\n  }\n\n  setupWebListeners() {\n    this.listeners = {};\n    this.eventNames.forEach((eventName) => {\n      this.listeners[eventName] = jsListener(eventName, this.worklet);\n    });\n  }\n\n  updateEventHandler(\n    newWorklet: (event: ReanimatedEvent<Event>) => void,\n    newEvents: string[]\n  ): void {\n    // Update worklet and event names\n    this.worklet = newWorklet;\n    this.eventNames = newEvents;\n    this.setupWebListeners();\n  }\n\n  registerForEvents(_viewTag: number, _fallbackEventName?: string): void {\n    // noop\n  }\n\n  unregisterFromEvents(_viewTag: number): void {\n    // noop\n  }\n}\n\nexport const WorkletEventHandler = SHOULD_BE_USE_WEB\n  ? WorkletEventHandlerWeb\n  : WorkletEventHandlerNative;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}