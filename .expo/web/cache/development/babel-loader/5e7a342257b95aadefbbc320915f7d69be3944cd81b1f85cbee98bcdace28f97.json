{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.configureLayoutAnimationBatch = configureLayoutAnimationBatch;\nObject.defineProperty(exports, \"createWorkletRuntime\", {\n  enumerable: true,\n  get: function get() {\n    return _runtimes.createWorkletRuntime;\n  }\n});\nexports.enableLayoutAnimations = enableLayoutAnimations;\nObject.defineProperty(exports, \"executeOnUIRuntimeSync\", {\n  enumerable: true,\n  get: function get() {\n    return _threads.executeOnUIRuntimeSync;\n  }\n});\nexports.getViewProp = getViewProp;\nexports.initializeSensor = initializeSensor;\nexports.isReanimated3 = exports.isConfigured = void 0;\nexports.jsiConfigureProps = jsiConfigureProps;\nObject.defineProperty(exports, \"makeMutable\", {\n  enumerable: true,\n  get: function get() {\n    return _mutables.makeMutable;\n  }\n});\nObject.defineProperty(exports, \"makeShareable\", {\n  enumerable: true,\n  get: function get() {\n    return _shareables.makeShareable;\n  }\n});\nObject.defineProperty(exports, \"makeShareableCloneRecursive\", {\n  enumerable: true,\n  get: function get() {\n    return _shareables.makeShareableCloneRecursive;\n  }\n});\nexports.registerEventHandler = registerEventHandler;\nexports.registerSensor = registerSensor;\nObject.defineProperty(exports, \"runOnJS\", {\n  enumerable: true,\n  get: function get() {\n    return _threads.runOnJS;\n  }\n});\nObject.defineProperty(exports, \"runOnRuntime\", {\n  enumerable: true,\n  get: function get() {\n    return _runtimes.runOnRuntime;\n  }\n});\nObject.defineProperty(exports, \"runOnUI\", {\n  enumerable: true,\n  get: function get() {\n    return _threads.runOnUI;\n  }\n});\nexports.setShouldAnimateExitingForTag = setShouldAnimateExitingForTag;\nObject.defineProperty(exports, \"startMapper\", {\n  enumerable: true,\n  get: function get() {\n    return _mappers.startMapper;\n  }\n});\nObject.defineProperty(exports, \"stopMapper\", {\n  enumerable: true,\n  get: function get() {\n    return _mappers.stopMapper;\n  }\n});\nexports.subscribeForKeyboardEvents = subscribeForKeyboardEvents;\nexports.unregisterEventHandler = unregisterEventHandler;\nexports.unregisterSensor = unregisterSensor;\nexports.unsubscribeFromKeyboardEvents = unsubscribeFromKeyboardEvents;\nvar _NativeReanimated = _interopRequireDefault(require(\"./NativeReanimated\"));\nvar _PlatformChecker = require(\"./PlatformChecker\");\nvar _shareables = require(\"./shareables\");\nvar _initializers = require(\"./initializers\");\nvar _SensorContainer = require(\"./SensorContainer\");\nvar _mappers = require(\"./mappers\");\nvar _threads = require(\"./threads\");\nvar _runtimes = require(\"./runtimes\");\nvar _mutables = require(\"./mutables\");\nvar SHOULD_BE_USE_WEB = (0, _PlatformChecker.shouldBeUseWeb)();\nvar isReanimated3 = exports.isReanimated3 = function isReanimated3() {\n  return true;\n};\nvar isConfigured = exports.isConfigured = isReanimated3;\nif (SHOULD_BE_USE_WEB) {\n  global._WORKLET = false;\n  global._log = console.log;\n  global._getAnimationTimestamp = function () {\n    return performance.now();\n  };\n}\nfunction getViewProp(viewTag, propName, component) {\n  if ((0, _PlatformChecker.isFabric)() && !component) {\n    throw new Error('[Reanimated] Function `getViewProp` requires a component to be passed as an argument on Fabric.');\n  }\n  return new Promise(function (resolve, reject) {\n    return _NativeReanimated.default.getViewProp(viewTag, propName, component, function (result) {\n      if (typeof result === 'string' && result.substr(0, 6) === 'error:') {\n        reject(result);\n      } else {\n        resolve(result);\n      }\n    });\n  });\n}\nfunction getSensorContainer() {\n  if (!global.__sensorContainer) {\n    global.__sensorContainer = new _SensorContainer.SensorContainer();\n  }\n  return global.__sensorContainer;\n}\nvar _worklet_14078480401762_init_data = {\n  code: \"function handleAndFlushAnimationFrame_coreJs1(eventTimestamp,event){const{eventHandler}=this.__closure;global.__frameTimestamp=eventTimestamp;eventHandler(event);global.__flushAnimationFrame(eventTimestamp);global.__frameTimestamp=undefined;}\",\n  location: \"F:\\\\node\\\\vision\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\core.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"handleAndFlushAnimationFrame_coreJs1\\\",\\\"eventTimestamp\\\",\\\"event\\\",\\\"eventHandler\\\",\\\"__closure\\\",\\\"global\\\",\\\"__frameTimestamp\\\",\\\"__flushAnimationFrame\\\",\\\"undefined\\\"],\\\"sources\\\":[\\\"F:/node/vision/node_modules/react-native-reanimated/lib/module/core.js\\\"],\\\"mappings\\\":\\\"AA2DE,SAAAA,oCAAsCA,CAAAC,cAAqB,CAAEC,KAAA,QAAAC,YAAA,OAAAC,SAAA,CAG3DC,MAAM,CAACC,gBAAgB,CAAGL,cAAc,CACxCE,YAAY,CAACD,KAAK,CAAC,CACnBG,MAAM,CAACE,qBAAqB,CAACN,cAAc,CAAC,CAC5CI,MAAM,CAACC,gBAAgB,CAAGE,SAAS,CACrC\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nfunction registerEventHandler(eventHandler, eventName) {\n  var emitterReactTag = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n  var handleAndFlushAnimationFrame = function () {\n    var _e = [new global.Error(), -2, -27];\n    var handleAndFlushAnimationFrame = function handleAndFlushAnimationFrame(eventTimestamp, event) {\n      global.__frameTimestamp = eventTimestamp;\n      eventHandler(event);\n      global.__flushAnimationFrame(eventTimestamp);\n      global.__frameTimestamp = undefined;\n    };\n    handleAndFlushAnimationFrame.__closure = {\n      eventHandler: eventHandler\n    };\n    handleAndFlushAnimationFrame.__workletHash = 14078480401762;\n    handleAndFlushAnimationFrame.__initData = _worklet_14078480401762_init_data;\n    handleAndFlushAnimationFrame.__stackDetails = _e;\n    return handleAndFlushAnimationFrame;\n  }();\n  return _NativeReanimated.default.registerEventHandler((0, _shareables.makeShareableCloneRecursive)(handleAndFlushAnimationFrame), eventName, emitterReactTag);\n}\nfunction unregisterEventHandler(id) {\n  return _NativeReanimated.default.unregisterEventHandler(id);\n}\nvar _worklet_11659138359183_init_data = {\n  code: \"function handleAndFlushAnimationFrame_coreJs2(state,height){const{eventHandler}=this.__closure;const now=global._getAnimationTimestamp();global.__frameTimestamp=now;eventHandler(state,height);global.__flushAnimationFrame(now);global.__frameTimestamp=undefined;}\",\n  location: \"F:\\\\node\\\\vision\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\core.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"handleAndFlushAnimationFrame_coreJs2\\\",\\\"state\\\",\\\"height\\\",\\\"eventHandler\\\",\\\"__closure\\\",\\\"now\\\",\\\"global\\\",\\\"_getAnimationTimestamp\\\",\\\"__frameTimestamp\\\",\\\"__flushAnimationFrame\\\",\\\"undefined\\\"],\\\"sources\\\":[\\\"F:/node/vision/node_modules/react-native-reanimated/lib/module/core.js\\\"],\\\"mappings\\\":\\\"AAyEE,SAAAA,qCAAAC,KAAA,CAAAC,MAAA,QAAAC,YAAA,OAAAC,SAAA,OAAAC,GAAA,CAAAC,MAAA,CAAAC,sBAAA,GACAD,MAAA,CAAAE,gBAAA,CAAAH,GAAA,CACAF,YAAS,CAAAF,KAAA,CAAAC,MAAA,EAGPI,MAAM,CAAAG,qBAAa,CAAAJ,GAAA,EACnBC,MAAM,CAACE,gBAAgB,CAAGE,SAAG,C\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nfunction subscribeForKeyboardEvents(eventHandler, options) {\n  var _options$isStatusBarT;\n  var handleAndFlushAnimationFrame = function () {\n    var _e = [new global.Error(), -2, -27];\n    var handleAndFlushAnimationFrame = function handleAndFlushAnimationFrame(state, height) {\n      var now = global._getAnimationTimestamp();\n      global.__frameTimestamp = now;\n      eventHandler(state, height);\n      global.__flushAnimationFrame(now);\n      global.__frameTimestamp = undefined;\n    };\n    handleAndFlushAnimationFrame.__closure = {\n      eventHandler: eventHandler\n    };\n    handleAndFlushAnimationFrame.__workletHash = 11659138359183;\n    handleAndFlushAnimationFrame.__initData = _worklet_11659138359183_init_data;\n    handleAndFlushAnimationFrame.__stackDetails = _e;\n    return handleAndFlushAnimationFrame;\n  }();\n  return _NativeReanimated.default.subscribeForKeyboardEvents((0, _shareables.makeShareableCloneRecursive)(handleAndFlushAnimationFrame), (_options$isStatusBarT = options.isStatusBarTranslucentAndroid) != null ? _options$isStatusBarT : false);\n}\nfunction unsubscribeFromKeyboardEvents(listenerId) {\n  return _NativeReanimated.default.unsubscribeFromKeyboardEvents(listenerId);\n}\nfunction registerSensor(sensorType, config, eventHandler) {\n  var sensorContainer = getSensorContainer();\n  return sensorContainer.registerSensor(sensorType, config, (0, _shareables.makeShareableCloneRecursive)(eventHandler));\n}\nfunction initializeSensor(sensorType, config) {\n  var sensorContainer = getSensorContainer();\n  return sensorContainer.initializeSensor(sensorType, config);\n}\nfunction unregisterSensor(sensorId) {\n  var sensorContainer = getSensorContainer();\n  return sensorContainer.unregisterSensor(sensorId);\n}\nif (!(0, _PlatformChecker.isWeb)()) {\n  (0, _initializers.initializeUIRuntime)();\n}\nvar featuresConfig = {\n  enableLayoutAnimations: false,\n  setByUser: false\n};\nfunction enableLayoutAnimations(flag) {\n  var isCallByUser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (isCallByUser) {\n    featuresConfig = {\n      enableLayoutAnimations: flag,\n      setByUser: true\n    };\n    _NativeReanimated.default.enableLayoutAnimations(flag);\n  } else if (!featuresConfig.setByUser && featuresConfig.enableLayoutAnimations !== flag) {\n    featuresConfig.enableLayoutAnimations = flag;\n    _NativeReanimated.default.enableLayoutAnimations(flag);\n  }\n}\nfunction configureLayoutAnimationBatch(layoutAnimationsBatch) {\n  _NativeReanimated.default.configureLayoutAnimationBatch(layoutAnimationsBatch);\n}\nfunction setShouldAnimateExitingForTag(viewTag, shouldAnimate) {\n  _NativeReanimated.default.setShouldAnimateExitingForTag(viewTag, shouldAnimate);\n}\nfunction jsiConfigureProps(uiProps, nativeProps) {\n  if (!SHOULD_BE_USE_WEB) {\n    _NativeReanimated.default.configureProps(uiProps, nativeProps);\n  }\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","configureLayoutAnimationBatch","enumerable","get","_runtimes","createWorkletRuntime","enableLayoutAnimations","_threads","executeOnUIRuntimeSync","getViewProp","initializeSensor","isReanimated3","isConfigured","jsiConfigureProps","_mutables","makeMutable","_shareables","makeShareable","makeShareableCloneRecursive","registerEventHandler","registerSensor","runOnJS","runOnRuntime","runOnUI","setShouldAnimateExitingForTag","_mappers","startMapper","stopMapper","subscribeForKeyboardEvents","unregisterEventHandler","unregisterSensor","unsubscribeFromKeyboardEvents","_NativeReanimated","_PlatformChecker","_initializers","_SensorContainer","SHOULD_BE_USE_WEB","shouldBeUseWeb","global","_WORKLET","_log","console","log","_getAnimationTimestamp","performance","now","viewTag","propName","component","isFabric","Error","Promise","resolve","reject","NativeReanimatedModule","result","substr","getSensorContainer","__sensorContainer","SensorContainer","_worklet_14078480401762_init_data","code","location","sourceMap","version","eventHandler","eventName","emitterReactTag","arguments","length","undefined","handleAndFlushAnimationFrame","_e","eventTimestamp","event","__frameTimestamp","__flushAnimationFrame","__closure","__workletHash","__initData","__stackDetails","id","_worklet_11659138359183_init_data","options","_options$isStatusBarT","state","height","isStatusBarTranslucentAndroid","listenerId","sensorType","config","sensorContainer","sensorId","isWeb","initializeUIRuntime","featuresConfig","setByUser","flag","isCallByUser","layoutAnimationsBatch","shouldAnimate","uiProps","nativeProps","configureProps"],"sources":["F:\\node\\vision\\node_modules\\react-native-reanimated\\lib\\module\\core.ts"],"sourcesContent":["'use strict';\nimport NativeReanimatedModule from './NativeReanimated';\nimport { isWeb, shouldBeUseWeb, isFabric } from './PlatformChecker';\nimport type {\n  AnimatedKeyboardOptions,\n  SensorConfig,\n  SensorType,\n  SharedValue,\n  Value3D,\n  ValueRotation,\n} from './commonTypes';\nimport { makeShareableCloneRecursive } from './shareables';\nimport { initializeUIRuntime } from './initializers';\nimport type { LayoutAnimationBatchItem } from './layoutReanimation/animationBuilder/commonTypes';\nimport { SensorContainer } from './SensorContainer';\n\nexport { startMapper, stopMapper } from './mappers';\nexport { runOnJS, runOnUI, executeOnUIRuntimeSync } from './threads';\nexport { createWorkletRuntime, runOnRuntime } from './runtimes';\nexport type { WorkletRuntime } from './runtimes';\nexport { makeShareable, makeShareableCloneRecursive } from './shareables';\nexport { makeMutable } from './mutables';\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\n/**\n * @returns `true` in Reanimated 3, doesn't exist in Reanimated 2 or 1\n */\nexport const isReanimated3 = () => true;\n\n// Superseded by check in `/src/threads.ts`.\n// Used by `react-navigation` to detect if using Reanimated 2 or 3.\n/**\n * @deprecated This function was superseded by other checks.\n * We keep it here for backward compatibility reasons.\n * If you need to check if you are using Reanimated 3 or Reanimated 2\n * please use `isReanimated3` function instead.\n * @returns `true` in Reanimated 3, doesn't exist in Reanimated 2\n */\nexport const isConfigured = isReanimated3;\n\n// this is for web implementation\nif (SHOULD_BE_USE_WEB) {\n  global._WORKLET = false;\n  global._log = console.log;\n  global._getAnimationTimestamp = () => performance.now();\n}\n\nexport function getViewProp<T>(\n  viewTag: number,\n  propName: string,\n  component?: React.Component // required on Fabric\n): Promise<T> {\n  if (isFabric() && !component) {\n    throw new Error(\n      '[Reanimated] Function `getViewProp` requires a component to be passed as an argument on Fabric.'\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  return new Promise((resolve, reject) => {\n    return NativeReanimatedModule.getViewProp(\n      viewTag,\n      propName,\n      component,\n      (result: T) => {\n        if (typeof result === 'string' && result.substr(0, 6) === 'error:') {\n          reject(result);\n        } else {\n          resolve(result);\n        }\n      }\n    );\n  });\n}\n\nfunction getSensorContainer(): SensorContainer {\n  if (!global.__sensorContainer) {\n    global.__sensorContainer = new SensorContainer();\n  }\n  return global.__sensorContainer;\n}\n\nexport function registerEventHandler<T>(\n  eventHandler: (event: T) => void,\n  eventName: string,\n  emitterReactTag = -1\n): number {\n  function handleAndFlushAnimationFrame(eventTimestamp: number, event: T) {\n    'worklet';\n    global.__frameTimestamp = eventTimestamp;\n    eventHandler(event);\n    global.__flushAnimationFrame(eventTimestamp);\n    global.__frameTimestamp = undefined;\n  }\n  return NativeReanimatedModule.registerEventHandler(\n    makeShareableCloneRecursive(handleAndFlushAnimationFrame),\n    eventName,\n    emitterReactTag\n  );\n}\n\nexport function unregisterEventHandler(id: number): void {\n  return NativeReanimatedModule.unregisterEventHandler(id);\n}\n\nexport function subscribeForKeyboardEvents(\n  eventHandler: (state: number, height: number) => void,\n  options: AnimatedKeyboardOptions\n): number {\n  // TODO: this should really go with the same code path as other events, that is\n  // via registerEventHandler. For now we are copying the code from there.\n  function handleAndFlushAnimationFrame(state: number, height: number) {\n    'worklet';\n    const now = global._getAnimationTimestamp();\n    global.__frameTimestamp = now;\n    eventHandler(state, height);\n    global.__flushAnimationFrame(now);\n    global.__frameTimestamp = undefined;\n  }\n  return NativeReanimatedModule.subscribeForKeyboardEvents(\n    makeShareableCloneRecursive(handleAndFlushAnimationFrame),\n    options.isStatusBarTranslucentAndroid ?? false\n  );\n}\n\nexport function unsubscribeFromKeyboardEvents(listenerId: number): void {\n  return NativeReanimatedModule.unsubscribeFromKeyboardEvents(listenerId);\n}\n\nexport function registerSensor(\n  sensorType: SensorType,\n  config: SensorConfig,\n  eventHandler: (\n    data: Value3D | ValueRotation,\n    orientationDegrees: number\n  ) => void\n): number {\n  const sensorContainer = getSensorContainer();\n  return sensorContainer.registerSensor(\n    sensorType,\n    config,\n    makeShareableCloneRecursive(eventHandler)\n  );\n}\n\nexport function initializeSensor(\n  sensorType: SensorType,\n  config: SensorConfig\n): SharedValue<Value3D | ValueRotation> {\n  const sensorContainer = getSensorContainer();\n  return sensorContainer.initializeSensor(sensorType, config);\n}\n\nexport function unregisterSensor(sensorId: number): void {\n  const sensorContainer = getSensorContainer();\n  return sensorContainer.unregisterSensor(sensorId);\n}\n\nif (!isWeb()) {\n  initializeUIRuntime();\n}\n\ntype FeaturesConfig = {\n  enableLayoutAnimations: boolean;\n  setByUser: boolean;\n};\n\nlet featuresConfig: FeaturesConfig = {\n  enableLayoutAnimations: false,\n  setByUser: false,\n};\n\nexport function enableLayoutAnimations(\n  flag: boolean,\n  isCallByUser = true\n): void {\n  if (isCallByUser) {\n    featuresConfig = {\n      enableLayoutAnimations: flag,\n      setByUser: true,\n    };\n    NativeReanimatedModule.enableLayoutAnimations(flag);\n  } else if (\n    !featuresConfig.setByUser &&\n    featuresConfig.enableLayoutAnimations !== flag\n  ) {\n    featuresConfig.enableLayoutAnimations = flag;\n    NativeReanimatedModule.enableLayoutAnimations(flag);\n  }\n}\n\nexport function configureLayoutAnimationBatch(\n  layoutAnimationsBatch: LayoutAnimationBatchItem[]\n): void {\n  NativeReanimatedModule.configureLayoutAnimationBatch(layoutAnimationsBatch);\n}\n\nexport function setShouldAnimateExitingForTag(\n  viewTag: number | HTMLElement,\n  shouldAnimate: boolean\n) {\n  NativeReanimatedModule.setShouldAnimateExitingForTag(\n    viewTag as number,\n    shouldAnimate\n  );\n}\n\nexport function jsiConfigureProps(\n  uiProps: string[],\n  nativeProps: string[]\n): void {\n  if (!SHOULD_BE_USE_WEB) {\n    NativeReanimatedModule.configureProps(uiProps, nativeProps);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}