{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _EnableNewWebImplementation = require(\"./EnableNewWebImplementation\");\nvar _Gestures = require(\"./web/Gestures\");\nvar _InteractionManager = _interopRequireDefault(require(\"./web/tools/InteractionManager\"));\nvar _NodeManager = _interopRequireDefault(require(\"./web/tools/NodeManager\"));\nvar HammerNodeManager = _interopRequireWildcard(require(\"./web_hammer/NodeManager\"));\nvar _GestureHandlerWebDelegate = require(\"./web/tools/GestureHandlerWebDelegate\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar _default = exports.default = {\n  handleSetJSResponder: function handleSetJSResponder(tag, blockNativeResponder) {\n    console.warn('handleSetJSResponder: ', tag, blockNativeResponder);\n  },\n  handleClearJSResponder: function handleClearJSResponder() {\n    console.warn('handleClearJSResponder: ');\n  },\n  createGestureHandler: function createGestureHandler(handlerName, handlerTag, config) {\n    if ((0, _EnableNewWebImplementation.isNewWebImplementationEnabled)()) {\n      if (!(handlerName in _Gestures.Gestures)) {\n        throw new Error(`react-native-gesture-handler: ${handlerName} is not supported on web.`);\n      }\n      var GestureClass = _Gestures.Gestures[handlerName];\n      _NodeManager.default.createGestureHandler(handlerTag, new GestureClass(new _GestureHandlerWebDelegate.GestureHandlerWebDelegate()));\n      _InteractionManager.default.getInstance().configureInteractions(_NodeManager.default.getHandler(handlerTag), config);\n    } else {\n      if (!(handlerName in _Gestures.HammerGestures)) {\n        throw new Error(`react-native-gesture-handler: ${handlerName} is not supported on web.`);\n      }\n      var _GestureClass = _Gestures.HammerGestures[handlerName];\n      HammerNodeManager.createGestureHandler(handlerTag, new _GestureClass());\n    }\n    this.updateGestureHandler(handlerTag, config);\n  },\n  attachGestureHandler: function attachGestureHandler(handlerTag, newView, _actionType, propsRef) {\n    if (!(newView instanceof HTMLElement || newView instanceof _react.default.Component)) {\n      return;\n    }\n    if ((0, _EnableNewWebImplementation.isNewWebImplementationEnabled)()) {\n      _NodeManager.default.getHandler(handlerTag).init(newView, propsRef);\n    } else {\n      HammerNodeManager.getHandler(handlerTag).setView(newView, propsRef);\n    }\n  },\n  updateGestureHandler: function updateGestureHandler(handlerTag, newConfig) {\n    if ((0, _EnableNewWebImplementation.isNewWebImplementationEnabled)()) {\n      _NodeManager.default.getHandler(handlerTag).updateGestureConfig(newConfig);\n      _InteractionManager.default.getInstance().configureInteractions(_NodeManager.default.getHandler(handlerTag), newConfig);\n    } else {\n      HammerNodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);\n    }\n  },\n  getGestureHandlerNode: function getGestureHandlerNode(handlerTag) {\n    if ((0, _EnableNewWebImplementation.isNewWebImplementationEnabled)()) {\n      return _NodeManager.default.getHandler(handlerTag);\n    } else {\n      return HammerNodeManager.getHandler(handlerTag);\n    }\n  },\n  dropGestureHandler: function dropGestureHandler(handlerTag) {\n    if ((0, _EnableNewWebImplementation.isNewWebImplementationEnabled)()) {\n      _NodeManager.default.dropGestureHandler(handlerTag);\n    } else {\n      HammerNodeManager.dropGestureHandler(handlerTag);\n    }\n  },\n  flushOperations: function flushOperations() {}\n};","map":{"version":3,"names":["_react","_interopRequireDefault","require","_EnableNewWebImplementation","_Gestures","_InteractionManager","_NodeManager","HammerNodeManager","_interopRequireWildcard","_GestureHandlerWebDelegate","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_default","exports","handleSetJSResponder","tag","blockNativeResponder","console","warn","handleClearJSResponder","createGestureHandler","handlerName","handlerTag","config","isNewWebImplementationEnabled","Gestures","Error","GestureClass","NodeManager","GestureHandlerWebDelegate","InteractionManager","getInstance","configureInteractions","getHandler","HammerGestures","updateGestureHandler","attachGestureHandler","newView","_actionType","propsRef","HTMLElement","React","Component","init","setView","newConfig","updateGestureConfig","getGestureHandlerNode","dropGestureHandler","flushOperations"],"sources":["F:\\node\\vision\\node_modules\\react-native-gesture-handler\\lib\\module\\RNGestureHandlerModule.web.ts"],"sourcesContent":["import React from 'react';\n\nimport type { ActionType } from './ActionType';\nimport { isNewWebImplementationEnabled } from './EnableNewWebImplementation';\nimport { Gestures, HammerGestures } from './web/Gestures';\nimport type { Config } from './web/interfaces';\nimport InteractionManager from './web/tools/InteractionManager';\nimport NodeManager from './web/tools/NodeManager';\nimport * as HammerNodeManager from './web_hammer/NodeManager';\nimport { GestureHandlerWebDelegate } from './web/tools/GestureHandlerWebDelegate';\n\nexport default {\n  handleSetJSResponder(tag: number, blockNativeResponder: boolean) {\n    console.warn('handleSetJSResponder: ', tag, blockNativeResponder);\n  },\n  handleClearJSResponder() {\n    console.warn('handleClearJSResponder: ');\n  },\n  createGestureHandler<T>(\n    handlerName: keyof typeof Gestures,\n    handlerTag: number,\n    config: T\n  ) {\n    if (isNewWebImplementationEnabled()) {\n      if (!(handlerName in Gestures)) {\n        throw new Error(\n          `react-native-gesture-handler: ${handlerName} is not supported on web.`\n        );\n      }\n\n      const GestureClass = Gestures[handlerName];\n      NodeManager.createGestureHandler(\n        handlerTag,\n        new GestureClass(new GestureHandlerWebDelegate())\n      );\n      InteractionManager.getInstance().configureInteractions(\n        NodeManager.getHandler(handlerTag),\n        config as unknown as Config\n      );\n    } else {\n      if (!(handlerName in HammerGestures)) {\n        throw new Error(\n          `react-native-gesture-handler: ${handlerName} is not supported on web.`\n        );\n      }\n\n      // @ts-ignore If it doesn't exist, the error is thrown\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      const GestureClass = HammerGestures[handlerName];\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      HammerNodeManager.createGestureHandler(handlerTag, new GestureClass());\n    }\n\n    this.updateGestureHandler(handlerTag, config as unknown as Config);\n  },\n  attachGestureHandler(\n    handlerTag: number,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    newView: any,\n    _actionType: ActionType,\n    propsRef: React.RefObject<unknown>\n  ) {\n    if (\n      !(newView instanceof HTMLElement || newView instanceof React.Component)\n    ) {\n      return;\n    }\n\n    if (isNewWebImplementationEnabled()) {\n      // @ts-ignore Types should be HTMLElement or React.Component\n      NodeManager.getHandler(handlerTag).init(newView, propsRef);\n    } else {\n      // @ts-ignore Types should be HTMLElement or React.Component\n      HammerNodeManager.getHandler(handlerTag).setView(newView, propsRef);\n    }\n  },\n  updateGestureHandler(handlerTag: number, newConfig: Config) {\n    if (isNewWebImplementationEnabled()) {\n      NodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);\n\n      InteractionManager.getInstance().configureInteractions(\n        NodeManager.getHandler(handlerTag),\n        newConfig\n      );\n    } else {\n      HammerNodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);\n    }\n  },\n  getGestureHandlerNode(handlerTag: number) {\n    if (isNewWebImplementationEnabled()) {\n      return NodeManager.getHandler(handlerTag);\n    } else {\n      return HammerNodeManager.getHandler(handlerTag);\n    }\n  },\n  dropGestureHandler(handlerTag: number) {\n    if (isNewWebImplementationEnabled()) {\n      NodeManager.dropGestureHandler(handlerTag);\n    } else {\n      HammerNodeManager.dropGestureHandler(handlerTag);\n    }\n  },\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  flushOperations() {},\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}