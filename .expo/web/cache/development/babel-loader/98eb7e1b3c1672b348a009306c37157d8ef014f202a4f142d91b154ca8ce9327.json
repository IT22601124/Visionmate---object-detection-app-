{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useReleasingSharedObject = useReleasingSharedObject;\nvar _react = require(\"react\");\nfunction useReleasingSharedObject(factory, dependencies) {\n  var objectRef = (0, _react.useRef)(null);\n  var isFastRefresh = (0, _react.useRef)(false);\n  var previousDependencies = (0, _react.useRef)(dependencies);\n  if (objectRef.current == null) {\n    objectRef.current = factory();\n  }\n  var object = (0, _react.useMemo)(function () {\n    var _previousDependencies;\n    var newObject = objectRef.current;\n    var dependenciesAreEqual = ((_previousDependencies = previousDependencies.current) == null ? void 0 : _previousDependencies.length) === dependencies.length && dependencies.every(function (value, index) {\n      return value === previousDependencies.current[index];\n    });\n    if (!newObject || !dependenciesAreEqual) {\n      var _objectRef$current;\n      (_objectRef$current = objectRef.current) == null || _objectRef$current.release();\n      newObject = factory();\n      objectRef.current = newObject;\n      previousDependencies.current = dependencies;\n    } else {\n      isFastRefresh.current = true;\n    }\n    return newObject;\n  }, dependencies);\n  (0, _react.useEffect)(function () {\n    isFastRefresh.current = false;\n    return function () {\n      if (!isFastRefresh.current && objectRef.current) {\n        objectRef.current.release();\n      }\n    };\n  }, []);\n  return object;\n}","map":{"version":3,"names":["_react","require","useReleasingSharedObject","factory","dependencies","objectRef","useRef","isFastRefresh","previousDependencies","current","object","useMemo","_previousDependencies","newObject","dependenciesAreEqual","length","every","value","index","_objectRef$current","release","useEffect"],"sources":["F:\\node\\vision\\node_modules\\expo-modules-core\\src\\hooks\\useReleasingSharedObject.ts"],"sourcesContent":["import { DependencyList, useRef, useMemo, useEffect } from 'react';\n\nimport type { SharedObject } from '../ts-declarations/SharedObject';\n\n/**\n * Returns a shared object, which is automatically cleaned up when the component is unmounted.\n */\nexport function useReleasingSharedObject<TSharedObject extends SharedObject>(\n  factory: () => TSharedObject,\n  dependencies: DependencyList\n): TSharedObject {\n  const objectRef = useRef<TSharedObject | null>(null);\n  const isFastRefresh = useRef(false);\n  const previousDependencies = useRef<DependencyList>(dependencies);\n\n  if (objectRef.current == null) {\n    objectRef.current = factory();\n  }\n\n  const object = useMemo(() => {\n    let newObject = objectRef.current;\n    const dependenciesAreEqual =\n      previousDependencies.current?.length === dependencies.length &&\n      dependencies.every((value, index) => value === previousDependencies.current[index]);\n\n    // If the dependencies have changed, release the previous object and create a new one, otherwise this has been called\n    // because of a fast refresh, and we don't want to release the object.\n    if (!newObject || !dependenciesAreEqual) {\n      objectRef.current?.release();\n      newObject = factory();\n      objectRef.current = newObject;\n      previousDependencies.current = dependencies;\n    } else {\n      isFastRefresh.current = true;\n    }\n    return newObject;\n  }, dependencies);\n\n  useEffect(() => {\n    isFastRefresh.current = false;\n\n    return () => {\n      // This will be called on every fast refresh and on unmount, but we only want to release the object on unmount.\n      if (!isFastRefresh.current && objectRef.current) {\n        objectRef.current.release();\n      }\n    };\n  }, []);\n\n  return object;\n}\n"],"mappings":";;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAOM,SAAUC,wBAAwBA,CACtCC,OAA4B,EAC5BC,YAA4B;EAE5B,IAAMC,SAAS,GAAG,IAAAC,aAAM,EAAuB,IAAI,CAAC;EACpD,IAAMC,aAAa,GAAG,IAAAD,aAAM,EAAC,KAAK,CAAC;EACnC,IAAME,oBAAoB,GAAG,IAAAF,aAAM,EAAiBF,YAAY,CAAC;EAEjE,IAAIC,SAAS,CAACI,OAAO,IAAI,IAAI,EAAE;IAC7BJ,SAAS,CAACI,OAAO,GAAGN,OAAO,EAAE;;EAG/B,IAAMO,MAAM,GAAG,IAAAC,cAAO,EAAC,YAAK;IAAA,IAAAC,qBAAA;IAC1B,IAAIC,SAAS,GAAGR,SAAS,CAACI,OAAO;IACjC,IAAMK,oBAAoB,GACxB,EAAAF,qBAAA,GAAAJ,oBAAoB,CAACC,OAAO,qBAA5BG,qBAAA,CAA8BG,MAAM,MAAKX,YAAY,CAACW,MAAM,IAC5DX,YAAY,CAACY,KAAK,CAAC,UAACC,KAAK,EAAEC,KAAK;MAAA,OAAKD,KAAK,KAAKT,oBAAoB,CAACC,OAAO,CAACS,KAAK,CAAC;IAAA,EAAC;IAIrF,IAAI,CAACL,SAAS,IAAI,CAACC,oBAAoB,EAAE;MAAA,IAAAK,kBAAA;MACvC,CAAAA,kBAAA,GAAAd,SAAS,CAACI,OAAO,aAAjBU,kBAAA,CAAmBC,OAAO,EAAE;MAC5BP,SAAS,GAAGV,OAAO,EAAE;MACrBE,SAAS,CAACI,OAAO,GAAGI,SAAS;MAC7BL,oBAAoB,CAACC,OAAO,GAAGL,YAAY;KAC5C,MAAM;MACLG,aAAa,CAACE,OAAO,GAAG,IAAI;;IAE9B,OAAOI,SAAS;EAClB,CAAC,EAAET,YAAY,CAAC;EAEhB,IAAAiB,gBAAS,EAAC,YAAK;IACbd,aAAa,CAACE,OAAO,GAAG,KAAK;IAE7B,OAAO,YAAK;MAEV,IAAI,CAACF,aAAa,CAACE,OAAO,IAAIJ,SAAS,CAACI,OAAO,EAAE;QAC/CJ,SAAS,CAACI,OAAO,CAACW,OAAO,EAAE;;IAE/B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOV,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}