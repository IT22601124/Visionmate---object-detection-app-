{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _interfaces = require(\"../interfaces\");\nvar _EventManager2 = _interopRequireDefault(require(\"./EventManager\"));\nvar _utils = require(\"../utils\");\nvar _PointerType = require(\"../../PointerType\");\nfunction _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar TouchEventManager = exports.default = function (_EventManager) {\n  function TouchEventManager() {\n    var _this;\n    (0, _classCallCheck2.default)(this, TouchEventManager);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, TouchEventManager, [].concat(args));\n    _defineProperty(_this, \"touchStartCallback\", function (event) {\n      for (var i = 0; i < event.changedTouches.length; ++i) {\n        var adaptedEvent = _this.mapEvent(event, _interfaces.EventTypes.DOWN, i, _interfaces.TouchEventType.DOWN);\n        if (!(0, _utils.isPointerInBounds)(_this.view, {\n          x: adaptedEvent.x,\n          y: adaptedEvent.y\n        }) || event.changedTouches[i].touchType === 'stylus') {\n          continue;\n        }\n        _this.markAsInBounds(adaptedEvent.pointerId);\n        if (++_this.activePointersCounter > 1) {\n          adaptedEvent.eventType = _interfaces.EventTypes.ADDITIONAL_POINTER_DOWN;\n          _this.onPointerAdd(adaptedEvent);\n        } else {\n          _this.onPointerDown(adaptedEvent);\n        }\n      }\n    });\n    _defineProperty(_this, \"touchMoveCallback\", function (event) {\n      for (var i = 0; i < event.changedTouches.length; ++i) {\n        var adaptedEvent = _this.mapEvent(event, _interfaces.EventTypes.MOVE, i, _interfaces.TouchEventType.MOVE);\n        if (event.changedTouches[i].touchType === 'stylus') {\n          continue;\n        }\n        var inBounds = (0, _utils.isPointerInBounds)(_this.view, {\n          x: adaptedEvent.x,\n          y: adaptedEvent.y\n        });\n        var pointerIndex = _this.pointersInBounds.indexOf(adaptedEvent.pointerId);\n        if (inBounds) {\n          if (pointerIndex < 0) {\n            adaptedEvent.eventType = _interfaces.EventTypes.ENTER;\n            _this.onPointerEnter(adaptedEvent);\n            _this.markAsInBounds(adaptedEvent.pointerId);\n          } else {\n            _this.onPointerMove(adaptedEvent);\n          }\n        } else {\n          if (pointerIndex >= 0) {\n            adaptedEvent.eventType = _interfaces.EventTypes.LEAVE;\n            _this.onPointerLeave(adaptedEvent);\n            _this.markAsOutOfBounds(adaptedEvent.pointerId);\n          } else {\n            _this.onPointerOutOfBounds(adaptedEvent);\n          }\n        }\n      }\n    });\n    _defineProperty(_this, \"touchEndCallback\", function (event) {\n      for (var i = 0; i < event.changedTouches.length; ++i) {\n        if (_this.activePointersCounter === 0) {\n          break;\n        }\n        if (event.changedTouches[i].touchType === 'stylus') {\n          continue;\n        }\n        var adaptedEvent = _this.mapEvent(event, _interfaces.EventTypes.UP, i, _interfaces.TouchEventType.UP);\n        _this.markAsOutOfBounds(adaptedEvent.pointerId);\n        if (--_this.activePointersCounter > 0) {\n          adaptedEvent.eventType = _interfaces.EventTypes.ADDITIONAL_POINTER_UP;\n          _this.onPointerRemove(adaptedEvent);\n        } else {\n          _this.onPointerUp(adaptedEvent);\n        }\n      }\n    });\n    _defineProperty(_this, \"touchCancelCallback\", function (event) {\n      for (var i = 0; i < event.changedTouches.length; ++i) {\n        var adaptedEvent = _this.mapEvent(event, _interfaces.EventTypes.CANCEL, i, _interfaces.TouchEventType.CANCELLED);\n        if (event.changedTouches[i].touchType === 'stylus') {\n          continue;\n        }\n        _this.onPointerCancel(adaptedEvent);\n        _this.markAsOutOfBounds(adaptedEvent.pointerId);\n        _this.activePointersCounter = 0;\n      }\n    });\n    return _this;\n  }\n  (0, _inherits2.default)(TouchEventManager, _EventManager);\n  return (0, _createClass2.default)(TouchEventManager, [{\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      this.view.addEventListener('touchstart', this.touchStartCallback);\n      this.view.addEventListener('touchmove', this.touchMoveCallback);\n      this.view.addEventListener('touchend', this.touchEndCallback);\n      this.view.addEventListener('touchcancel', this.touchCancelCallback);\n    }\n  }, {\n    key: \"unregisterListeners\",\n    value: function unregisterListeners() {\n      this.view.removeEventListener('touchstart', this.touchStartCallback);\n      this.view.removeEventListener('touchmove', this.touchMoveCallback);\n      this.view.removeEventListener('touchend', this.touchEndCallback);\n      this.view.removeEventListener('touchcancel', this.touchCancelCallback);\n    }\n  }, {\n    key: \"mapEvent\",\n    value: function mapEvent(event, eventType, index, touchEventType) {\n      var rect = this.view.getBoundingClientRect();\n      var clientX = event.changedTouches[index].clientX;\n      var clientY = event.changedTouches[index].clientY;\n      var _calculateViewScale = (0, _utils.calculateViewScale)(this.view),\n        scaleX = _calculateViewScale.scaleX,\n        scaleY = _calculateViewScale.scaleY;\n      return {\n        x: clientX,\n        y: clientY,\n        offsetX: (clientX - rect.left) / scaleX,\n        offsetY: (clientY - rect.top) / scaleY,\n        pointerId: event.changedTouches[index].identifier,\n        eventType: eventType,\n        pointerType: _PointerType.PointerType.TOUCH,\n        time: event.timeStamp,\n        allTouches: event.touches,\n        changedTouches: event.changedTouches,\n        touchEventType: touchEventType\n      };\n    }\n  }]);\n}(_EventManager2.default);","map":{"version":3,"names":["_interfaces","require","_EventManager2","_interopRequireDefault","_utils","_PointerType","_callSuper","t","o","e","_getPrototypeOf2","default","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","TouchEventManager","exports","_EventManager","_this","_classCallCheck2","_len","arguments","length","args","Array","_key","concat","_defineProperty","event","i","changedTouches","adaptedEvent","mapEvent","EventTypes","DOWN","TouchEventType","isPointerInBounds","view","x","y","touchType","markAsInBounds","pointerId","activePointersCounter","eventType","ADDITIONAL_POINTER_DOWN","onPointerAdd","onPointerDown","MOVE","inBounds","pointerIndex","pointersInBounds","indexOf","ENTER","onPointerEnter","onPointerMove","LEAVE","onPointerLeave","markAsOutOfBounds","onPointerOutOfBounds","UP","ADDITIONAL_POINTER_UP","onPointerRemove","onPointerUp","CANCEL","CANCELLED","onPointerCancel","_inherits2","_createClass2","key","value","registerListeners","addEventListener","touchStartCallback","touchMoveCallback","touchEndCallback","touchCancelCallback","unregisterListeners","removeEventListener","index","touchEventType","rect","getBoundingClientRect","clientX","clientY","_calculateViewScale","calculateViewScale","scaleX","scaleY","offsetX","left","offsetY","top","identifier","pointerType","PointerType","TOUCH","time","timeStamp","allTouches","touches","EventManager"],"sources":["F:\\node\\vision\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\tools\\TouchEventManager.ts"],"sourcesContent":["import { AdaptedEvent, EventTypes, TouchEventType } from '../interfaces';\nimport EventManager from './EventManager';\nimport { calculateViewScale, isPointerInBounds } from '../utils';\nimport { PointerType } from '../../PointerType';\n\nexport default class TouchEventManager extends EventManager<HTMLElement> {\n  private touchStartCallback = (event: TouchEvent): void => {\n    for (let i = 0; i < event.changedTouches.length; ++i) {\n      const adaptedEvent: AdaptedEvent = this.mapEvent(\n        event,\n        EventTypes.DOWN,\n        i,\n        TouchEventType.DOWN\n      );\n\n      // Here we skip stylus, because in case of anything different than touch we want to handle it by using PointerEvents\n      // If we leave stylus to send touch events, handlers will receive every action twice\n      if (\n        !isPointerInBounds(this.view, {\n          x: adaptedEvent.x,\n          y: adaptedEvent.y,\n        }) ||\n        // @ts-ignore touchType field does exist\n        event.changedTouches[i].touchType === 'stylus'\n      ) {\n        continue;\n      }\n\n      this.markAsInBounds(adaptedEvent.pointerId);\n\n      if (++this.activePointersCounter > 1) {\n        adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_DOWN;\n        this.onPointerAdd(adaptedEvent);\n      } else {\n        this.onPointerDown(adaptedEvent);\n      }\n    }\n  };\n\n  private touchMoveCallback = (event: TouchEvent): void => {\n    for (let i = 0; i < event.changedTouches.length; ++i) {\n      const adaptedEvent: AdaptedEvent = this.mapEvent(\n        event,\n        EventTypes.MOVE,\n        i,\n        TouchEventType.MOVE\n      );\n      // @ts-ignore touchType field does exist\n      if (event.changedTouches[i].touchType === 'stylus') {\n        continue;\n      }\n\n      const inBounds: boolean = isPointerInBounds(this.view, {\n        x: adaptedEvent.x,\n        y: adaptedEvent.y,\n      });\n\n      const pointerIndex: number = this.pointersInBounds.indexOf(\n        adaptedEvent.pointerId\n      );\n\n      if (inBounds) {\n        if (pointerIndex < 0) {\n          adaptedEvent.eventType = EventTypes.ENTER;\n          this.onPointerEnter(adaptedEvent);\n          this.markAsInBounds(adaptedEvent.pointerId);\n        } else {\n          this.onPointerMove(adaptedEvent);\n        }\n      } else {\n        if (pointerIndex >= 0) {\n          adaptedEvent.eventType = EventTypes.LEAVE;\n          this.onPointerLeave(adaptedEvent);\n          this.markAsOutOfBounds(adaptedEvent.pointerId);\n        } else {\n          this.onPointerOutOfBounds(adaptedEvent);\n        }\n      }\n    }\n  };\n\n  private touchEndCallback = (event: TouchEvent): void => {\n    for (let i = 0; i < event.changedTouches.length; ++i) {\n      // When we call reset on gesture handlers, it also resets their event managers\n      // In some handlers (like RotationGestureHandler) reset is called before all pointers leave view\n      // This means, that activePointersCounter will be set to 0, while there are still remaining pointers on view\n      // Removing them will end in activePointersCounter going below 0, therefore handlers won't behave properly\n      if (this.activePointersCounter === 0) {\n        break;\n      }\n\n      // @ts-ignore touchType field does exist\n      if (event.changedTouches[i].touchType === 'stylus') {\n        continue;\n      }\n\n      const adaptedEvent: AdaptedEvent = this.mapEvent(\n        event,\n        EventTypes.UP,\n        i,\n        TouchEventType.UP\n      );\n\n      this.markAsOutOfBounds(adaptedEvent.pointerId);\n\n      if (--this.activePointersCounter > 0) {\n        adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_UP;\n        this.onPointerRemove(adaptedEvent);\n      } else {\n        this.onPointerUp(adaptedEvent);\n      }\n    }\n  };\n\n  private touchCancelCallback = (event: TouchEvent): void => {\n    for (let i = 0; i < event.changedTouches.length; ++i) {\n      const adaptedEvent: AdaptedEvent = this.mapEvent(\n        event,\n        EventTypes.CANCEL,\n        i,\n        TouchEventType.CANCELLED\n      );\n\n      // @ts-ignore touchType field does exist\n      if (event.changedTouches[i].touchType === 'stylus') {\n        continue;\n      }\n\n      this.onPointerCancel(adaptedEvent);\n      this.markAsOutOfBounds(adaptedEvent.pointerId);\n      this.activePointersCounter = 0;\n    }\n  };\n\n  public registerListeners(): void {\n    this.view.addEventListener('touchstart', this.touchStartCallback);\n    this.view.addEventListener('touchmove', this.touchMoveCallback);\n    this.view.addEventListener('touchend', this.touchEndCallback);\n    this.view.addEventListener('touchcancel', this.touchCancelCallback);\n  }\n\n  public unregisterListeners(): void {\n    this.view.removeEventListener('touchstart', this.touchStartCallback);\n    this.view.removeEventListener('touchmove', this.touchMoveCallback);\n    this.view.removeEventListener('touchend', this.touchEndCallback);\n    this.view.removeEventListener('touchcancel', this.touchCancelCallback);\n  }\n\n  protected mapEvent(\n    event: TouchEvent,\n    eventType: EventTypes,\n    index: number,\n    touchEventType: TouchEventType\n  ): AdaptedEvent {\n    const rect = this.view.getBoundingClientRect();\n    const clientX = event.changedTouches[index].clientX;\n    const clientY = event.changedTouches[index].clientY;\n\n    const { scaleX, scaleY } = calculateViewScale(this.view);\n\n    return {\n      x: clientX,\n      y: clientY,\n      offsetX: (clientX - rect.left) / scaleX,\n      offsetY: (clientY - rect.top) / scaleY,\n      pointerId: event.changedTouches[index].identifier,\n      eventType: eventType,\n      pointerType: PointerType.TOUCH,\n      time: event.timeStamp,\n      allTouches: event.touches,\n      changedTouches: event.changedTouches,\n      touchEventType: touchEventType,\n    };\n  }\n}\n"],"mappings":";;;;;;;;;;AAAA,IAAAA,WAAA,GAAAC,OAAA;AACA,IAAAC,cAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,MAAA,GAAAH,OAAA;AACA,IAAAI,YAAA,GAAAJ,OAAA;AAAA,SAAAK,WAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,WAAAD,CAAA,OAAAE,gBAAA,CAAAC,OAAA,EAAAH,CAAA,OAAAI,2BAAA,CAAAD,OAAA,EAAAJ,CAAA,EAAAM,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAP,CAAA,EAAAC,CAAA,YAAAC,gBAAA,CAAAC,OAAA,EAAAJ,CAAA,EAAAS,WAAA,IAAAR,CAAA,CAAAS,KAAA,CAAAV,CAAA,EAAAE,CAAA;AAAA,SAAAI,0BAAA,cAAAN,CAAA,IAAAW,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAP,OAAA,CAAAC,SAAA,CAAAG,OAAA,iCAAAX,CAAA,aAAAM,yBAAA,YAAAA,0BAAA,aAAAN,CAAA;;;;;;;;;;;;;;IAEqBe,iBAAN,GAAAC,OAAA,CAAAZ,OAAA,aAAAa,aAAA;EAA0D,SAAAF,kBAAA;IAAA,IAAAG,KAAA;IAAA,IAAAC,gBAAA,CAAAf,OAAA,QAAAW,iBAAA;IAAA,SAAAK,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAAAP,KAAA,GAAAnB,UAAA,OAAAgB,iBAAA,KAAAW,MAAA,CAAAH,IAAA;IAAAI,eAAA,CAAAT,KAAA,wBACzC,UAAAU,KAAD,EAA6B;MACxD,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,cAAN,CAAqBR,MAAzC,EAAiD,EAAEO,CAAnD,EAAsD;QACpD,IAAME,YAA0B,GAAGb,KAAA,CAAKc,QAAL,CACjCJ,KADiC,EAEjCK,sBAAU,CAACC,IAFsB,EAGjCL,CAHiC,EAIjCM,0BAAc,CAACD,IAJkB,CAAnC;QASA,IACE,CAAC,IAAAE,wBAAiB,EAAClB,KAAA,CAAKmB,IAAN,EAAY;UAC5BC,CAAC,EAAEP,YAAY,CAACO,CADY;UAE5BC,CAAC,EAAER,YAAY,CAACQ;QAFY,CAAZ,CAAlB,IAKAX,KAAK,CAACE,cAAN,CAAqBD,CAArB,EAAwBW,SAAxB,KAAsC,QANxC,EAOE;UACA;QACD;QAEDtB,KAAA,CAAKuB,cAAL,CAAoBV,YAAY,CAACW,SAAjC;QAEA,IAAI,EAAExB,KAAA,CAAKyB,qBAAP,GAA+B,CAAnC,EAAsC;UACpCZ,YAAY,CAACa,SAAb,GAAyBX,sBAAU,CAACY,uBAApC;UACA3B,KAAA,CAAK4B,YAAL,CAAkBf,YAAlB;QACD,CAHD,MAGO;UACLb,KAAA,CAAK6B,aAAL,CAAmBhB,YAAnB;QACD;MACF;IACF,CAhCsE;IAAAJ,eAAA,CAAAT,KAAA,uBAkC1C,UAAAU,KAAD,EAA6B;MACvD,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,cAAN,CAAqBR,MAAzC,EAAiD,EAAEO,CAAnD,EAAsD;QACpD,IAAME,YAA0B,GAAGb,KAAA,CAAKc,QAAL,CACjCJ,KADiC,EAEjCK,sBAAU,CAACe,IAFsB,EAGjCnB,CAHiC,EAIjCM,0BAAc,CAACa,IAJkB,CAAnC;QAOA,IAAIpB,KAAK,CAACE,cAAN,CAAqBD,CAArB,EAAwBW,SAAxB,KAAsC,QAA1C,EAAoD;UAClD;QACD;QAED,IAAMS,QAAiB,GAAG,IAAAb,wBAAiB,EAAClB,KAAA,CAAKmB,IAAN,EAAY;UACrDC,CAAC,EAAEP,YAAY,CAACO,CADqC;UAErDC,CAAC,EAAER,YAAY,CAACQ;QAFqC,CAAZ,CAA3C;QAKA,IAAMW,YAAoB,GAAGhC,KAAA,CAAKiC,gBAAL,CAAsBC,OAAtB,CAC3BrB,YAAY,CAACW,SADc,CAA7B;QAIA,IAAIO,QAAJ,EAAc;UACZ,IAAIC,YAAY,GAAG,CAAnB,EAAsB;YACpBnB,YAAY,CAACa,SAAb,GAAyBX,sBAAU,CAACoB,KAApC;YACAnC,KAAA,CAAKoC,cAAL,CAAoBvB,YAApB;YACAb,KAAA,CAAKuB,cAAL,CAAoBV,YAAY,CAACW,SAAjC;UACD,CAJD,MAIO;YACLxB,KAAA,CAAKqC,aAAL,CAAmBxB,YAAnB;UACD;QACF,CARD,MAQO;UACL,IAAImB,YAAY,IAAI,CAApB,EAAuB;YACrBnB,YAAY,CAACa,SAAb,GAAyBX,sBAAU,CAACuB,KAApC;YACAtC,KAAA,CAAKuC,cAAL,CAAoB1B,YAApB;YACAb,KAAA,CAAKwC,iBAAL,CAAuB3B,YAAY,CAACW,SAApC;UACD,CAJD,MAIO;YACLxB,KAAA,CAAKyC,oBAAL,CAA0B5B,YAA1B;UACD;QACF;MACF;IACF,CA1EsE;IAAAJ,eAAA,CAAAT,KAAA,sBA4E3C,UAAAU,KAAD,EAA6B;MACtD,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,cAAN,CAAqBR,MAAzC,EAAiD,EAAEO,CAAnD,EAAsD;QAKpD,IAAIX,KAAA,CAAKyB,qBAAL,KAA+B,CAAnC,EAAsC;UACpC;QACD;QAGD,IAAIf,KAAK,CAACE,cAAN,CAAqBD,CAArB,EAAwBW,SAAxB,KAAsC,QAA1C,EAAoD;UAClD;QACD;QAED,IAAMT,YAA0B,GAAGb,KAAA,CAAKc,QAAL,CACjCJ,KADiC,EAEjCK,sBAAU,CAAC2B,EAFsB,EAGjC/B,CAHiC,EAIjCM,0BAAc,CAACyB,EAJkB,CAAnC;QAOA1C,KAAA,CAAKwC,iBAAL,CAAuB3B,YAAY,CAACW,SAApC;QAEA,IAAI,EAAExB,KAAA,CAAKyB,qBAAP,GAA+B,CAAnC,EAAsC;UACpCZ,YAAY,CAACa,SAAb,GAAyBX,sBAAU,CAAC4B,qBAApC;UACA3C,KAAA,CAAK4C,eAAL,CAAqB/B,YAArB;QACD,CAHD,MAGO;UACLb,KAAA,CAAK6C,WAAL,CAAiBhC,YAAjB;QACD;MACF;IACF,CA3GsE;IAAAJ,eAAA,CAAAT,KAAA,yBA6GxC,UAAAU,KAAD,EAA6B;MACzD,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,cAAN,CAAqBR,MAAzC,EAAiD,EAAEO,CAAnD,EAAsD;QACpD,IAAME,YAA0B,GAAGb,KAAA,CAAKc,QAAL,CACjCJ,KADiC,EAEjCK,sBAAU,CAAC+B,MAFsB,EAGjCnC,CAHiC,EAIjCM,0BAAc,CAAC8B,SAJkB,CAAnC;QAQA,IAAIrC,KAAK,CAACE,cAAN,CAAqBD,CAArB,EAAwBW,SAAxB,KAAsC,QAA1C,EAAoD;UAClD;QACD;QAEDtB,KAAA,CAAKgD,eAAL,CAAqBnC,YAArB;QACAb,KAAA,CAAKwC,iBAAL,CAAuB3B,YAAY,CAACW,SAApC;QACAxB,KAAA,CAAKyB,qBAAL,GAA6B,CAA7B;MACD;IACF,CA/HsE;IAAA,OAAAzB,KAAA;EAAA;EAAA,IAAAiD,UAAA,CAAA/D,OAAA,EAAAW,iBAAA,EAAAE,aAAA;EAAA,WAAAmD,aAAA,CAAAhE,OAAA,EAAAW,iBAAA;IAAAsD,GAAA;IAAAC,KAAA,EAiIhE,SAAAC,iBAAiBA,CAAA,EAAS;MAC/B,KAAKlC,IAAL,CAAUmC,gBAAV,CAA2B,YAA3B,EAAyC,KAAKC,kBAA9C;MACA,KAAKpC,IAAL,CAAUmC,gBAAV,CAA2B,WAA3B,EAAwC,KAAKE,iBAA7C;MACA,KAAKrC,IAAL,CAAUmC,gBAAV,CAA2B,UAA3B,EAAuC,KAAKG,gBAA5C;MACA,KAAKtC,IAAL,CAAUmC,gBAAV,CAA2B,aAA3B,EAA0C,KAAKI,mBAA/C;IACD;EAAA;IAAAP,GAAA;IAAAC,KAAA,EAEM,SAAAO,mBAAmBA,CAAA,EAAS;MACjC,KAAKxC,IAAL,CAAUyC,mBAAV,CAA8B,YAA9B,EAA4C,KAAKL,kBAAjD;MACA,KAAKpC,IAAL,CAAUyC,mBAAV,CAA8B,WAA9B,EAA2C,KAAKJ,iBAAhD;MACA,KAAKrC,IAAL,CAAUyC,mBAAV,CAA8B,UAA9B,EAA0C,KAAKH,gBAA/C;MACA,KAAKtC,IAAL,CAAUyC,mBAAV,CAA8B,aAA9B,EAA6C,KAAKF,mBAAlD;IACD;EAAA;IAAAP,GAAA;IAAAC,KAAA,EAES,SAAAtC,QAAQA,CAChBJ,KADgB,EAEhBgB,SAFgB,EAGhBmC,KAHgB,EAIhBC,cAJgB,EAKF;MACd,IAAMC,IAAI,GAAG,KAAK5C,IAAL,CAAU6C,qBAAV,EAAb;MACA,IAAMC,OAAO,GAAGvD,KAAK,CAACE,cAAN,CAAqBiD,KAArB,EAA4BI,OAA5C;MACA,IAAMC,OAAO,GAAGxD,KAAK,CAACE,cAAN,CAAqBiD,KAArB,EAA4BK,OAA5C;MAEA,IAAAC,mBAAA,GAA2B,IAAAC,yBAAkB,EAAC,KAAKjD,IAAN,CAA7C;QAAQkD,MAAF,GAAAF,mBAAA,CAAEE,MAAF;QAAUC,MAAA,GAAAH,mBAAA,CAAAG,MAAA;MAEhB,OAAO;QACLlD,CAAC,EAAE6C,OADE;QAEL5C,CAAC,EAAE6C,OAFE;QAGLK,OAAO,EAAE,CAACN,OAAO,GAAGF,IAAI,CAACS,IAAhB,IAAwBH,MAH5B;QAILI,OAAO,EAAE,CAACP,OAAO,GAAGH,IAAI,CAACW,GAAhB,IAAuBJ,MAJ3B;QAKL9C,SAAS,EAAEd,KAAK,CAACE,cAAN,CAAqBiD,KAArB,EAA4Bc,UALlC;QAMLjD,SAAS,EAAEA,SANN;QAOLkD,WAAW,EAAEC,wBAAW,CAACC,KAPpB;QAQLC,IAAI,EAAErE,KAAK,CAACsE,SARP;QASLC,UAAU,EAAEvE,KAAK,CAACwE,OATb;QAULtE,cAAc,EAAEF,KAAK,CAACE,cAVjB;QAWLkD,cAAc,EAAEA;MAXX,CAAP;IAaD;EAAA;AAAA,EAxK4CqB,sBAAhC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}