{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAnimatedComponent = createAnimatedComponent;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nrequire(\"../layoutReanimation/animationsManager\");\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\nvar _ConfigHelper = require(\"../ConfigHelper\");\nvar _RNRenderer = require(\"../platform-specific/RNRenderer\");\nvar _core = require(\"../core\");\nvar _layoutReanimation = require(\"../layoutReanimation\");\nvar _fabricUtils = require(\"../fabricUtils\");\nvar _PropsRegistry = require(\"../PropsRegistry\");\nvar _util = require(\"../animation/util\");\nvar _animationBuilder = require(\"../animationBuilder\");\nvar _LayoutAnimationConfig = require(\"../component/LayoutAnimationConfig\");\nvar _JSPropsUpdater = _interopRequireDefault(require(\"./JSPropsUpdater\"));\nvar _utils = require(\"./utils\");\nvar _setAndForwardRef = _interopRequireDefault(require(\"./setAndForwardRef\"));\nvar _PlatformChecker = require(\"../PlatformChecker\");\nvar _InlinePropManager = require(\"./InlinePropManager\");\nvar _PropsFilter = require(\"./PropsFilter\");\nvar _web = require(\"../layoutReanimation/web\");\nvar _UpdateLayoutAnimations = require(\"../UpdateLayoutAnimations\");\nvar _domUtils = require(\"../layoutReanimation/web/domUtils\");\nvar _getViewInfo2 = require(\"./getViewInfo\");\nvar _NativeEventsManager = require(\"./NativeEventsManager\");\nfunction _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nvar IS_WEB = (0, _PlatformChecker.isWeb)();\nif (IS_WEB) {\n  (0, _web.configureWebLayoutAnimations)();\n}\nfunction onlyAnimatedStyles(styles) {\n  return styles.filter(function (style) {\n    return style === null || style === void 0 ? void 0 : style.viewDescriptors;\n  });\n}\nvar id = 0;\nfunction createAnimatedComponent(Component, options) {\n  (0, _invariant.default)(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`);\n  var AnimatedComponent = function (_React$Component) {\n    function AnimatedComponent(props) {\n      var _this;\n      (0, _classCallCheck2.default)(this, AnimatedComponent);\n      _this = _callSuper(this, AnimatedComponent, [props]);\n      _defineProperty(_this, \"_styles\", null);\n      _defineProperty(_this, \"_animatedProps\", void 0);\n      _defineProperty(_this, \"_componentViewTag\", -1);\n      _defineProperty(_this, \"_isFirstRender\", true);\n      _defineProperty(_this, \"jestAnimatedStyle\", {\n        value: {}\n      });\n      _defineProperty(_this, \"_component\", null);\n      _defineProperty(_this, \"_sharedElementTransition\", null);\n      _defineProperty(_this, \"_jsPropsUpdater\", new _JSPropsUpdater.default());\n      _defineProperty(_this, \"_InlinePropManager\", new _InlinePropManager.InlinePropManager());\n      _defineProperty(_this, \"_PropsFilter\", new _PropsFilter.PropsFilter());\n      _defineProperty(_this, \"_NativeEventsManager\", void 0);\n      _defineProperty(_this, \"_viewInfo\", void 0);\n      _defineProperty(_this, \"context\", void 0);\n      _defineProperty(_this, \"reanimatedID\", id++);\n      _defineProperty(_this, \"_setComponentRef\", (0, _setAndForwardRef.default)({\n        getForwardedRef: function getForwardedRef() {\n          return _this.props.forwardedRef;\n        },\n        setLocalRef: function setLocalRef(ref) {\n          var tag = IS_WEB ? ref : (0, _reactNative.findNodeHandle)(ref);\n          _this._componentViewTag = tag;\n          var _this$props5 = _this.props,\n            layout = _this$props5.layout,\n            entering = _this$props5.entering,\n            exiting = _this$props5.exiting,\n            sharedTransitionTag = _this$props5.sharedTransitionTag;\n          if ((layout || entering || exiting || sharedTransitionTag) && tag != null) {\n            var _this$context;\n            if (!(0, _PlatformChecker.shouldBeUseWeb)()) {\n              (0, _core.enableLayoutAnimations)(true, false);\n            }\n            if (sharedTransitionTag) {\n              _this._configureSharedTransition();\n            }\n            if (exiting && (0, _PlatformChecker.isFabric)()) {\n              var reduceMotionInExiting = 'getReduceMotion' in exiting && typeof exiting.getReduceMotion === 'function' ? (0, _util.getReduceMotionFromConfig)(exiting.getReduceMotion()) : (0, _util.getReduceMotionFromConfig)();\n              if (!reduceMotionInExiting) {\n                var _this$props;\n                (0, _UpdateLayoutAnimations.updateLayoutAnimations)(tag, _layoutReanimation.LayoutAnimationType.EXITING, (0, _animationBuilder.maybeBuild)(exiting, (_this$props = _this.props) === null || _this$props === void 0 ? void 0 : _this$props.style, AnimatedComponent.displayName));\n              }\n            }\n            var skipEntering = (_this$context = _this.context) === null || _this$context === void 0 ? void 0 : _this$context.current;\n            if (entering && !skipEntering && !IS_WEB) {\n              var _this$props2;\n              (0, _UpdateLayoutAnimations.updateLayoutAnimations)(tag, _layoutReanimation.LayoutAnimationType.ENTERING, (0, _animationBuilder.maybeBuild)(entering, (_this$props2 = _this.props) === null || _this$props2 === void 0 ? void 0 : _this$props2.style, AnimatedComponent.displayName));\n            }\n          }\n          if (ref !== _this._component) {\n            _this._component = ref;\n          }\n        }\n      }));\n      if ((0, _PlatformChecker.isJest)()) {\n        _this.jestAnimatedStyle = {\n          value: {}\n        };\n      }\n      var _entering = _this.props.entering;\n      if (_entering && (0, _PlatformChecker.isFabric)()) {\n        var _this$props3;\n        (0, _UpdateLayoutAnimations.updateLayoutAnimations)(_this.reanimatedID, _layoutReanimation.LayoutAnimationType.ENTERING, (0, _animationBuilder.maybeBuild)(_entering, (_this$props3 = _this.props) === null || _this$props3 === void 0 ? void 0 : _this$props3.style, AnimatedComponent.displayName));\n      }\n      return _this;\n    }\n    (0, _inherits2.default)(AnimatedComponent, _React$Component);\n    return (0, _createClass2.default)(AnimatedComponent, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this$_NativeEventsMa;\n        this._componentViewTag = this._getComponentViewTag();\n        if (!IS_WEB) {\n          this._NativeEventsManager = new _NativeEventsManager.NativeEventsManager(this, options);\n        }\n        (_this$_NativeEventsMa = this._NativeEventsManager) === null || _this$_NativeEventsMa === void 0 || _this$_NativeEventsMa.attachEvents();\n        this._jsPropsUpdater.addOnJSPropsChangeListener(this);\n        this._attachAnimatedStyles();\n        this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n        var layout = this.props.layout;\n        if (layout) {\n          this._configureLayoutTransition();\n        }\n        if (IS_WEB) {\n          if (this.props.exiting) {\n            (0, _web.saveSnapshot)(this._component);\n          }\n          if (!this.props.entering || (0, _web.getReducedMotionFromConfig)(this.props.entering)) {\n            this._isFirstRender = false;\n            return;\n          }\n          (0, _web.startWebLayoutAnimation)(this.props, this._component, _layoutReanimation.LayoutAnimationType.ENTERING);\n        }\n        this._isFirstRender = false;\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        var _this$_NativeEventsMa2, _this$_sharedElementT;\n        (_this$_NativeEventsMa2 = this._NativeEventsManager) === null || _this$_NativeEventsMa2 === void 0 || _this$_NativeEventsMa2.detachEvents();\n        this._jsPropsUpdater.removeOnJSPropsChangeListener(this);\n        this._detachStyles();\n        this._InlinePropManager.detachInlineProps();\n        if (this.props.sharedTransitionTag) {\n          this._configureSharedTransition(true);\n        }\n        (_this$_sharedElementT = this._sharedElementTransition) === null || _this$_sharedElementT === void 0 || _this$_sharedElementT.unregisterTransition(this._componentViewTag, true);\n        var exiting = this.props.exiting;\n        if (IS_WEB && this._component && exiting && !(0, _web.getReducedMotionFromConfig)(exiting)) {\n          (0, _domUtils.addHTMLMutationObserver)();\n          (0, _web.startWebLayoutAnimation)(this.props, this._component, _layoutReanimation.LayoutAnimationType.EXITING);\n        } else if (exiting && !IS_WEB && !(0, _PlatformChecker.isFabric)()) {\n          var reduceMotionInExiting = 'getReduceMotion' in exiting && typeof exiting.getReduceMotion === 'function' ? (0, _util.getReduceMotionFromConfig)(exiting.getReduceMotion()) : (0, _util.getReduceMotionFromConfig)();\n          if (!reduceMotionInExiting) {\n            var _this$props4;\n            (0, _UpdateLayoutAnimations.updateLayoutAnimations)(this._componentViewTag, _layoutReanimation.LayoutAnimationType.EXITING, (0, _animationBuilder.maybeBuild)(exiting, (_this$props4 = this.props) === null || _this$props4 === void 0 ? void 0 : _this$props4.style, AnimatedComponent.displayName));\n          }\n        }\n      }\n    }, {\n      key: \"_getComponentViewTag\",\n      value: function _getComponentViewTag() {\n        return this._getViewInfo().viewTag;\n      }\n    }, {\n      key: \"_detachStyles\",\n      value: function _detachStyles() {\n        if (this._componentViewTag !== -1 && this._styles !== null) {\n          var _this$props$animatedP;\n          for (var style of this._styles) {\n            style.viewDescriptors.remove(this._componentViewTag);\n          }\n          if ((_this$props$animatedP = this.props.animatedProps) !== null && _this$props$animatedP !== void 0 && _this$props$animatedP.viewDescriptors) {\n            this.props.animatedProps.viewDescriptors.remove(this._componentViewTag);\n          }\n          if ((0, _PlatformChecker.isFabric)()) {\n            (0, _PropsRegistry.removeFromPropsRegistry)(this._componentViewTag);\n          }\n        }\n      }\n    }, {\n      key: \"_updateFromNative\",\n      value: function _updateFromNative(props) {\n        if (options !== null && options !== void 0 && options.setNativeProps) {\n          options.setNativeProps(this._component, props);\n        } else {\n          var _this$_component, _this$_component$setN;\n          (_this$_component = this._component) === null || _this$_component === void 0 || (_this$_component$setN = _this$_component.setNativeProps) === null || _this$_component$setN === void 0 || _this$_component$setN.call(_this$_component, props);\n        }\n      }\n    }, {\n      key: \"_getViewInfo\",\n      value: function _getViewInfo() {\n        var _this$_component2, _getAnimatableRef, _ref;\n        if (this._viewInfo !== undefined) {\n          return this._viewInfo;\n        }\n        var viewTag;\n        var viewName;\n        var shadowNodeWrapper = null;\n        var viewConfig;\n        var component = (_this$_component2 = this._component) !== null && _this$_component2 !== void 0 && _this$_component2.getAnimatableRef ? (_getAnimatableRef = (_ref = this._component).getAnimatableRef) === null || _getAnimatableRef === void 0 ? void 0 : _getAnimatableRef.call(_ref) : this;\n        if (IS_WEB) {\n          viewTag = this._component;\n          viewName = null;\n          shadowNodeWrapper = null;\n          viewConfig = null;\n        } else {\n          var hostInstance = _RNRenderer.RNRenderer.findHostInstance_DEPRECATED(component);\n          if (!hostInstance) {\n            throw new Error('[Reanimated] Cannot find host instance for this component. Maybe it renders nothing?');\n          }\n          var viewInfo = (0, _getViewInfo2.getViewInfo)(hostInstance);\n          viewTag = viewInfo.viewTag;\n          viewName = viewInfo.viewName;\n          viewConfig = viewInfo.viewConfig;\n          shadowNodeWrapper = (0, _PlatformChecker.isFabric)() ? (0, _fabricUtils.getShadowNodeWrapperFromRef)(this) : null;\n        }\n        this._viewInfo = {\n          viewTag: viewTag,\n          viewName: viewName,\n          shadowNodeWrapper: shadowNodeWrapper,\n          viewConfig: viewConfig\n        };\n        return this._viewInfo;\n      }\n    }, {\n      key: \"_attachAnimatedStyles\",\n      value: function _attachAnimatedStyles() {\n        var _this2 = this;\n        var _this$props$animatedP2, _this$props$animatedP3;\n        var styles = this.props.style ? onlyAnimatedStyles((0, _utils.flattenArray)(this.props.style)) : [];\n        var prevStyles = this._styles;\n        this._styles = styles;\n        var prevAnimatedProps = this._animatedProps;\n        this._animatedProps = this.props.animatedProps;\n        var _this$_getViewInfo = this._getViewInfo(),\n          viewTag = _this$_getViewInfo.viewTag,\n          viewName = _this$_getViewInfo.viewName,\n          shadowNodeWrapper = _this$_getViewInfo.shadowNodeWrapper,\n          viewConfig = _this$_getViewInfo.viewConfig;\n        var hasReanimated2Props = ((_this$props$animatedP2 = this.props.animatedProps) === null || _this$props$animatedP2 === void 0 ? void 0 : _this$props$animatedP2.viewDescriptors) || styles.length;\n        if (hasReanimated2Props && viewConfig) {\n          (0, _ConfigHelper.adaptViewConfig)(viewConfig);\n        }\n        this._componentViewTag = viewTag;\n        if (prevStyles) {\n          var hasOneSameStyle = styles.length === 1 && prevStyles.length === 1 && styles[0] === prevStyles[0];\n          if (!hasOneSameStyle) {\n            var _loop = function _loop(prevStyle) {\n              var isPresent = styles.some(function (style) {\n                return style === prevStyle;\n              });\n              if (!isPresent) {\n                prevStyle.viewDescriptors.remove(viewTag);\n              }\n            };\n            for (var prevStyle of prevStyles) {\n              _loop(prevStyle);\n            }\n          }\n        }\n        styles.forEach(function (style) {\n          style.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n          if ((0, _PlatformChecker.isJest)()) {\n            _this2.jestAnimatedStyle.value = Object.assign({}, _this2.jestAnimatedStyle.value, style.initial.value);\n            style.jestAnimatedStyle.current = _this2.jestAnimatedStyle;\n          }\n        });\n        if (prevAnimatedProps && prevAnimatedProps !== this.props.animatedProps) {\n          prevAnimatedProps.viewDescriptors.remove(viewTag);\n        }\n        if ((_this$props$animatedP3 = this.props.animatedProps) !== null && _this$props$animatedP3 !== void 0 && _this$props$animatedP3.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n        }\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps, _prevState, snapshot) {\n        var _this$_NativeEventsMa3;\n        var layout = this.props.layout;\n        var oldLayout = prevProps.layout;\n        if (layout !== oldLayout) {\n          this._configureLayoutTransition();\n        }\n        if (this.props.sharedTransitionTag !== undefined || prevProps.sharedTransitionTag !== undefined) {\n          this._configureSharedTransition();\n        }\n        (_this$_NativeEventsMa3 = this._NativeEventsManager) === null || _this$_NativeEventsMa3 === void 0 || _this$_NativeEventsMa3.updateEvents(prevProps);\n        this._attachAnimatedStyles();\n        this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n        if (IS_WEB && this.props.exiting) {\n          (0, _web.saveSnapshot)(this._component);\n        }\n        if (IS_WEB && snapshot !== null && this.props.layout && !(0, _web.getReducedMotionFromConfig)(this.props.layout)) {\n          (0, _web.tryActivateLayoutTransition)(this.props, this._component, snapshot);\n        }\n      }\n    }, {\n      key: \"_configureLayoutTransition\",\n      value: function _configureLayoutTransition() {\n        if (IS_WEB) {\n          return;\n        }\n        var layout = this.props.layout ? (0, _animationBuilder.maybeBuild)(this.props.layout, undefined, AnimatedComponent.displayName) : undefined;\n        (0, _UpdateLayoutAnimations.updateLayoutAnimations)(this._componentViewTag, _layoutReanimation.LayoutAnimationType.LAYOUT, layout);\n      }\n    }, {\n      key: \"_configureSharedTransition\",\n      value: function _configureSharedTransition() {\n        var _ref2, _this$props$sharedTra;\n        var isUnmounting = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        if (IS_WEB) {\n          return;\n        }\n        var sharedTransitionTag = this.props.sharedTransitionTag;\n        if (!sharedTransitionTag) {\n          var _this$_sharedElementT2;\n          (_this$_sharedElementT2 = this._sharedElementTransition) === null || _this$_sharedElementT2 === void 0 || _this$_sharedElementT2.unregisterTransition(this._componentViewTag, isUnmounting);\n          this._sharedElementTransition = null;\n          return;\n        }\n        var sharedElementTransition = (_ref2 = (_this$props$sharedTra = this.props.sharedTransitionStyle) != null ? _this$props$sharedTra : this._sharedElementTransition) != null ? _ref2 : new _layoutReanimation.SharedTransition();\n        sharedElementTransition.registerTransition(this._componentViewTag, sharedTransitionTag, isUnmounting);\n        this._sharedElementTransition = sharedElementTransition;\n      }\n    }, {\n      key: \"getSnapshotBeforeUpdate\",\n      value: function getSnapshotBeforeUpdate() {\n        var _this$_component3;\n        if (IS_WEB && ((_this$_component3 = this._component) === null || _this$_component3 === void 0 ? void 0 : _this$_component3.getBoundingClientRect) !== undefined) {\n          return this._component.getBoundingClientRect();\n        }\n        return null;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$context2;\n        var filteredProps = this._PropsFilter.filterNonAnimatedProps(this);\n        if ((0, _PlatformChecker.isJest)()) {\n          filteredProps.jestAnimatedStyle = this.jestAnimatedStyle;\n        }\n        if (this._isFirstRender && IS_WEB && filteredProps.entering && !(0, _web.getReducedMotionFromConfig)(filteredProps.entering)) {\n          var _filteredProps$style;\n          filteredProps.style = Object.assign({}, (_filteredProps$style = filteredProps.style) != null ? _filteredProps$style : {}, {\n            visibility: 'hidden'\n          });\n        }\n        var platformProps = _reactNative.Platform.select({\n          web: {},\n          default: {\n            collapsable: false\n          }\n        });\n        var skipEntering = (_this$context2 = this.context) === null || _this$context2 === void 0 ? void 0 : _this$context2.current;\n        var nativeID = skipEntering || !(0, _PlatformChecker.isFabric)() ? undefined : `${this.reanimatedID}`;\n        return _react.default.createElement(Component, _extends({\n          nativeID: nativeID\n        }, filteredProps, {\n          ref: this._setComponentRef\n        }, platformProps));\n      }\n    }]);\n  }(_react.default.Component);\n  _defineProperty(AnimatedComponent, \"displayName\", void 0);\n  _defineProperty(AnimatedComponent, \"contextType\", _LayoutAnimationConfig.SkipEnteringContext);\n  AnimatedComponent.displayName = `AnimatedComponent(${Component.displayName || Component.name || 'Component'})`;\n  return _react.default.forwardRef(function (props, ref) {\n    return _react.default.createElement(AnimatedComponent, _extends({}, props, ref === null ? null : {\n      forwardedRef: ref\n    }));\n  });\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","createAnimatedComponent","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_react","_reactNative","_invariant","_ConfigHelper","_RNRenderer","_core","_layoutReanimation","_fabricUtils","_PropsRegistry","_util","_animationBuilder","_LayoutAnimationConfig","_JSPropsUpdater","_utils","_setAndForwardRef","_PlatformChecker","_InlinePropManager","_PropsFilter","_web","_UpdateLayoutAnimations","_domUtils","_getViewInfo2","_NativeEventsManager","_callSuper","t","o","e","default","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","_extends","assign","bind","target","i","arguments","length","source","key","hasOwnProperty","_defineProperty","obj","_toPropertyKey","enumerable","configurable","writable","_toPrimitive","r","Symbol","toPrimitive","TypeError","String","Number","IS_WEB","isWeb","configureWebLayoutAnimations","onlyAnimatedStyles","styles","filter","style","viewDescriptors","id","Component","options","invariant","isReactComponent","name","AnimatedComponent","_React$Component","props","_this","JSPropsUpdater","InlinePropManager","PropsFilter","setAndForwardRef","getForwardedRef","forwardedRef","setLocalRef","ref","tag","findNodeHandle","_componentViewTag","_this$props5","layout","entering","exiting","sharedTransitionTag","_this$context","shouldBeUseWeb","enableLayoutAnimations","_configureSharedTransition","isFabric","reduceMotionInExiting","getReduceMotion","getReduceMotionFromConfig","_this$props","updateLayoutAnimations","LayoutAnimationType","EXITING","maybeBuild","displayName","skipEntering","context","current","_this$props2","ENTERING","_component","isJest","jestAnimatedStyle","_entering","_this$props3","reanimatedID","componentDidMount","_this$_NativeEventsMa","_getComponentViewTag","NativeEventsManager","attachEvents","_jsPropsUpdater","addOnJSPropsChangeListener","_attachAnimatedStyles","attachInlineProps","_getViewInfo","_configureLayoutTransition","saveSnapshot","getReducedMotionFromConfig","_isFirstRender","startWebLayoutAnimation","componentWillUnmount","_this$_NativeEventsMa2","_this$_sharedElementT","detachEvents","removeOnJSPropsChangeListener","_detachStyles","detachInlineProps","_sharedElementTransition","unregisterTransition","addHTMLMutationObserver","_this$props4","viewTag","_styles","_this$props$animatedP","remove","animatedProps","removeFromPropsRegistry","_updateFromNative","setNativeProps","_this$_component","_this$_component$setN","_this$_component2","_getAnimatableRef","_ref","_viewInfo","undefined","viewName","shadowNodeWrapper","viewConfig","component","getAnimatableRef","hostInstance","RNRenderer","findHostInstance_DEPRECATED","Error","viewInfo","getViewInfo","getShadowNodeWrapperFromRef","_this2","_this$props$animatedP2","_this$props$animatedP3","flattenArray","prevStyles","prevAnimatedProps","_animatedProps","_this$_getViewInfo","hasReanimated2Props","adaptViewConfig","hasOneSameStyle","_loop","prevStyle","isPresent","some","forEach","add","initial","componentDidUpdate","prevProps","_prevState","snapshot","_this$_NativeEventsMa3","oldLayout","updateEvents","tryActivateLayoutTransition","LAYOUT","_ref2","_this$props$sharedTra","isUnmounting","_this$_sharedElementT2","sharedElementTransition","sharedTransitionStyle","SharedTransition","registerTransition","getSnapshotBeforeUpdate","_this$_component3","getBoundingClientRect","render","_this$context2","filteredProps","filterNonAnimatedProps","_filteredProps$style","visibility","platformProps","Platform","select","web","collapsable","nativeID","React","createElement","_setComponentRef","SkipEnteringContext","forwardRef"],"sources":["F:\\node\\vision\\node_modules\\react-native-reanimated\\lib\\module\\createAnimatedComponent\\createAnimatedComponent.tsx"],"sourcesContent":["'use strict';\nimport type {\n  Component,\n  ComponentClass,\n  ComponentType,\n  FunctionComponent,\n  MutableRefObject,\n} from 'react';\nimport React from 'react';\nimport { findNodeHandle, Platform } from 'react-native';\nimport '../layoutReanimation/animationsManager';\nimport invariant from 'invariant';\nimport { adaptViewConfig } from '../ConfigHelper';\nimport { RNRenderer } from '../platform-specific/RNRenderer';\nimport { enableLayoutAnimations } from '../core';\nimport { SharedTransition, LayoutAnimationType } from '../layoutReanimation';\nimport type { StyleProps, ShadowNodeWrapper } from '../commonTypes';\nimport { getShadowNodeWrapperFromRef } from '../fabricUtils';\nimport { removeFromPropsRegistry } from '../PropsRegistry';\nimport { getReduceMotionFromConfig } from '../animation/util';\nimport { maybeBuild } from '../animationBuilder';\nimport { SkipEnteringContext } from '../component/LayoutAnimationConfig';\nimport type { AnimateProps } from '../helperTypes';\nimport JSPropsUpdater from './JSPropsUpdater';\nimport type {\n  AnimatedComponentProps,\n  AnimatedProps,\n  InitialComponentProps,\n  AnimatedComponentRef,\n  IAnimatedComponentInternal,\n  ViewInfo,\n  INativeEventsManager,\n} from './commonTypes';\nimport { flattenArray } from './utils';\nimport setAndForwardRef from './setAndForwardRef';\nimport { isFabric, isJest, isWeb, shouldBeUseWeb } from '../PlatformChecker';\nimport { InlinePropManager } from './InlinePropManager';\nimport { PropsFilter } from './PropsFilter';\nimport {\n  startWebLayoutAnimation,\n  tryActivateLayoutTransition,\n  configureWebLayoutAnimations,\n  getReducedMotionFromConfig,\n  saveSnapshot,\n} from '../layoutReanimation/web';\nimport { updateLayoutAnimations } from '../UpdateLayoutAnimations';\nimport type { CustomConfig } from '../layoutReanimation/web/config';\nimport type { FlatList, FlatListProps } from 'react-native';\nimport { addHTMLMutationObserver } from '../layoutReanimation/web/domUtils';\nimport { getViewInfo } from './getViewInfo';\nimport { NativeEventsManager } from './NativeEventsManager';\nimport type { ReanimatedHTMLElement } from '../js-reanimated';\n\nconst IS_WEB = isWeb();\n\nif (IS_WEB) {\n  configureWebLayoutAnimations();\n}\n\nfunction onlyAnimatedStyles(styles: StyleProps[]): StyleProps[] {\n  return styles.filter((style) => style?.viewDescriptors);\n}\n\ntype Options<P> = {\n  setNativeProps: (ref: AnimatedComponentRef, props: P) => void;\n};\n\n/**\n * Lets you create an Animated version of any React Native component.\n *\n * @param component - The component you want to make animatable.\n * @returns A component that Reanimated is capable of animating.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/createAnimatedComponent\n */\n\n// Don't change the order of overloads, since such a change breaks current behavior\nexport function createAnimatedComponent<P extends object>(\n  component: FunctionComponent<P>,\n  options?: Options<P>\n): FunctionComponent<AnimateProps<P>>;\n\nexport function createAnimatedComponent<P extends object>(\n  component: ComponentClass<P>,\n  options?: Options<P>\n): ComponentClass<AnimateProps<P>>;\n\nexport function createAnimatedComponent<P extends object>(\n  // Actually ComponentType<P = {}> = ComponentClass<P> | FunctionComponent<P> but we need this overload too\n  // since some external components (like FastImage) are typed just as ComponentType\n  component: ComponentType<P>,\n  options?: Options<P>\n): FunctionComponent<AnimateProps<P>> | ComponentClass<AnimateProps<P>>;\n\n/**\n * @deprecated Please use `Animated.FlatList` component instead of calling `Animated.createAnimatedComponent(FlatList)` manually.\n */\n// @ts-ignore This is required to create this overload, since type of createAnimatedComponent is incorrect and doesn't include typeof FlatList\nexport function createAnimatedComponent(\n  component: typeof FlatList<unknown>,\n  options?: Options<any>\n): ComponentClass<AnimateProps<FlatListProps<unknown>>>;\n\nlet id = 0;\n\nexport function createAnimatedComponent(\n  Component: ComponentType<InitialComponentProps>,\n  options?: Options<InitialComponentProps>\n): any {\n  invariant(\n    typeof Component !== 'function' ||\n      (Component.prototype && Component.prototype.isReactComponent),\n    `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`\n  );\n\n  class AnimatedComponent\n    extends React.Component<AnimatedComponentProps<InitialComponentProps>>\n    implements IAnimatedComponentInternal\n  {\n    _styles: StyleProps[] | null = null;\n    _animatedProps?: Partial<AnimatedComponentProps<AnimatedProps>>;\n    _componentViewTag = -1;\n    _isFirstRender = true;\n    jestAnimatedStyle: { value: StyleProps } = { value: {} };\n    _component: AnimatedComponentRef | HTMLElement | null = null;\n    _sharedElementTransition: SharedTransition | null = null;\n    _jsPropsUpdater = new JSPropsUpdater();\n    _InlinePropManager = new InlinePropManager();\n    _PropsFilter = new PropsFilter();\n    _NativeEventsManager?: INativeEventsManager;\n    _viewInfo?: ViewInfo;\n    static displayName: string;\n    static contextType = SkipEnteringContext;\n    context!: React.ContextType<typeof SkipEnteringContext>;\n    reanimatedID = id++;\n\n    constructor(props: AnimatedComponentProps<InitialComponentProps>) {\n      super(props);\n      if (isJest()) {\n        this.jestAnimatedStyle = { value: {} };\n      }\n      const entering = this.props.entering;\n      if (entering && isFabric()) {\n        updateLayoutAnimations(\n          this.reanimatedID,\n          LayoutAnimationType.ENTERING,\n          maybeBuild(entering, this.props?.style, AnimatedComponent.displayName)\n        );\n      }\n    }\n\n    componentDidMount() {\n      this._componentViewTag = this._getComponentViewTag();\n      if (!IS_WEB) {\n        // It exists only on native platforms. We initialize it here because the ref to the animated component is available only post-mount\n        this._NativeEventsManager = new NativeEventsManager(this, options);\n      }\n      this._NativeEventsManager?.attachEvents();\n      this._jsPropsUpdater.addOnJSPropsChangeListener(this);\n      this._attachAnimatedStyles();\n      this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n\n      const layout = this.props.layout;\n      if (layout) {\n        this._configureLayoutTransition();\n      }\n\n      if (IS_WEB) {\n        if (this.props.exiting) {\n          saveSnapshot(this._component as HTMLElement);\n        }\n\n        if (\n          !this.props.entering ||\n          getReducedMotionFromConfig(this.props.entering as CustomConfig)\n        ) {\n          this._isFirstRender = false;\n          return;\n        }\n\n        startWebLayoutAnimation(\n          this.props,\n          this._component as ReanimatedHTMLElement,\n          LayoutAnimationType.ENTERING\n        );\n      }\n\n      this._isFirstRender = false;\n    }\n\n    componentWillUnmount() {\n      this._NativeEventsManager?.detachEvents();\n      this._jsPropsUpdater.removeOnJSPropsChangeListener(this);\n      this._detachStyles();\n      this._InlinePropManager.detachInlineProps();\n      if (this.props.sharedTransitionTag) {\n        this._configureSharedTransition(true);\n      }\n      this._sharedElementTransition?.unregisterTransition(\n        this._componentViewTag,\n        true\n      );\n\n      const exiting = this.props.exiting;\n\n      if (\n        IS_WEB &&\n        this._component &&\n        exiting &&\n        !getReducedMotionFromConfig(exiting as CustomConfig)\n      ) {\n        addHTMLMutationObserver();\n\n        startWebLayoutAnimation(\n          this.props,\n          this._component as ReanimatedHTMLElement,\n          LayoutAnimationType.EXITING\n        );\n      } else if (exiting && !IS_WEB && !isFabric()) {\n        const reduceMotionInExiting =\n          'getReduceMotion' in exiting &&\n          typeof exiting.getReduceMotion === 'function'\n            ? getReduceMotionFromConfig(exiting.getReduceMotion())\n            : getReduceMotionFromConfig();\n        if (!reduceMotionInExiting) {\n          updateLayoutAnimations(\n            this._componentViewTag,\n            LayoutAnimationType.EXITING,\n            maybeBuild(\n              exiting,\n              this.props?.style,\n              AnimatedComponent.displayName\n            )\n          );\n        }\n      }\n    }\n\n    _getComponentViewTag() {\n      return this._getViewInfo().viewTag as number;\n    }\n\n    _detachStyles() {\n      if (this._componentViewTag !== -1 && this._styles !== null) {\n        for (const style of this._styles) {\n          style.viewDescriptors.remove(this._componentViewTag);\n        }\n        if (this.props.animatedProps?.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.remove(\n            this._componentViewTag\n          );\n        }\n        if (isFabric()) {\n          removeFromPropsRegistry(this._componentViewTag);\n        }\n      }\n    }\n\n    _updateFromNative(props: StyleProps) {\n      if (options?.setNativeProps) {\n        options.setNativeProps(this._component as AnimatedComponentRef, props);\n      } else {\n        (this._component as AnimatedComponentRef)?.setNativeProps?.(props);\n      }\n    }\n\n    _getViewInfo(): ViewInfo {\n      if (this._viewInfo !== undefined) {\n        return this._viewInfo;\n      }\n\n      let viewTag: number | HTMLElement | null;\n      let viewName: string | null;\n      let shadowNodeWrapper: ShadowNodeWrapper | null = null;\n      let viewConfig;\n      // Component can specify ref which should be animated when animated version of the component is created.\n      // Otherwise, we animate the component itself.\n      const component = (this._component as AnimatedComponentRef)\n        ?.getAnimatableRef\n        ? (this._component as AnimatedComponentRef).getAnimatableRef?.()\n        : this;\n\n      if (IS_WEB) {\n        // At this point I assume that `_setComponentRef` was already called and `_component` is set.\n        // `this._component` on web represents HTMLElement of our component, that's why we use casting\n        viewTag = this._component as HTMLElement;\n        viewName = null;\n        shadowNodeWrapper = null;\n        viewConfig = null;\n      } else {\n        // hostInstance can be null for a component that doesn't render anything (render function returns null). Example: svg Stop: https://github.com/react-native-svg/react-native-svg/blob/develop/src/elements/Stop.tsx\n        const hostInstance = RNRenderer.findHostInstance_DEPRECATED(component);\n        if (!hostInstance) {\n          throw new Error(\n            '[Reanimated] Cannot find host instance for this component. Maybe it renders nothing?'\n          );\n        }\n\n        const viewInfo = getViewInfo(hostInstance);\n        viewTag = viewInfo.viewTag;\n        viewName = viewInfo.viewName;\n        viewConfig = viewInfo.viewConfig;\n        shadowNodeWrapper = isFabric()\n          ? getShadowNodeWrapperFromRef(this)\n          : null;\n      }\n      this._viewInfo = { viewTag, viewName, shadowNodeWrapper, viewConfig };\n      return this._viewInfo;\n    }\n\n    _attachAnimatedStyles() {\n      const styles = this.props.style\n        ? onlyAnimatedStyles(flattenArray<StyleProps>(this.props.style))\n        : [];\n      const prevStyles = this._styles;\n      this._styles = styles;\n\n      const prevAnimatedProps = this._animatedProps;\n      this._animatedProps = this.props.animatedProps;\n\n      const { viewTag, viewName, shadowNodeWrapper, viewConfig } =\n        this._getViewInfo();\n\n      // update UI props whitelist for this view\n      const hasReanimated2Props =\n        this.props.animatedProps?.viewDescriptors || styles.length;\n      if (hasReanimated2Props && viewConfig) {\n        adaptViewConfig(viewConfig);\n      }\n\n      this._componentViewTag = viewTag as number;\n\n      // remove old styles\n      if (prevStyles) {\n        // in most of the cases, views have only a single animated style and it remains unchanged\n        const hasOneSameStyle =\n          styles.length === 1 &&\n          prevStyles.length === 1 &&\n          styles[0] === prevStyles[0];\n\n        if (!hasOneSameStyle) {\n          // otherwise, remove each style that is not present in new styles\n          for (const prevStyle of prevStyles) {\n            const isPresent = styles.some((style) => style === prevStyle);\n            if (!isPresent) {\n              prevStyle.viewDescriptors.remove(viewTag);\n            }\n          }\n        }\n      }\n\n      styles.forEach((style) => {\n        style.viewDescriptors.add({\n          tag: viewTag,\n          name: viewName,\n          shadowNodeWrapper,\n        });\n        if (isJest()) {\n          /**\n           * We need to connect Jest's TestObject instance whose contains just props object\n           * with the updateProps() function where we update the properties of the component.\n           * We can't update props object directly because TestObject contains a copy of props - look at render function:\n           * const props = this._filterNonAnimatedProps(this.props);\n           */\n          this.jestAnimatedStyle.value = {\n            ...this.jestAnimatedStyle.value,\n            ...style.initial.value,\n          };\n          style.jestAnimatedStyle.current = this.jestAnimatedStyle;\n        }\n      });\n\n      // detach old animatedProps\n      if (prevAnimatedProps && prevAnimatedProps !== this.props.animatedProps) {\n        prevAnimatedProps.viewDescriptors!.remove(viewTag as number);\n      }\n\n      // attach animatedProps property\n      if (this.props.animatedProps?.viewDescriptors) {\n        this.props.animatedProps.viewDescriptors.add({\n          tag: viewTag as number,\n          name: viewName!,\n          shadowNodeWrapper: shadowNodeWrapper!,\n        });\n      }\n    }\n\n    componentDidUpdate(\n      prevProps: AnimatedComponentProps<InitialComponentProps>,\n      _prevState: Readonly<unknown>,\n      // This type comes straight from React\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      snapshot: DOMRect | null\n    ) {\n      const layout = this.props.layout;\n      const oldLayout = prevProps.layout;\n      if (layout !== oldLayout) {\n        this._configureLayoutTransition();\n      }\n      if (\n        this.props.sharedTransitionTag !== undefined ||\n        prevProps.sharedTransitionTag !== undefined\n      ) {\n        this._configureSharedTransition();\n      }\n      this._NativeEventsManager?.updateEvents(prevProps);\n      this._attachAnimatedStyles();\n      this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n\n      if (IS_WEB && this.props.exiting) {\n        saveSnapshot(this._component as HTMLElement);\n      }\n\n      // Snapshot won't be undefined because it comes from getSnapshotBeforeUpdate method\n      if (\n        IS_WEB &&\n        snapshot !== null &&\n        this.props.layout &&\n        !getReducedMotionFromConfig(this.props.layout as CustomConfig)\n      ) {\n        tryActivateLayoutTransition(\n          this.props,\n          this._component as ReanimatedHTMLElement,\n          snapshot\n        );\n      }\n    }\n\n    _configureLayoutTransition() {\n      if (IS_WEB) {\n        return;\n      }\n\n      const layout = this.props.layout\n        ? maybeBuild(\n            this.props.layout,\n            undefined /* We don't have to warn user if style has common properties with animation for LAYOUT */,\n            AnimatedComponent.displayName\n          )\n        : undefined;\n      updateLayoutAnimations(\n        this._componentViewTag,\n        LayoutAnimationType.LAYOUT,\n        layout\n      );\n    }\n\n    _configureSharedTransition(isUnmounting = false) {\n      if (IS_WEB) {\n        return;\n      }\n\n      const { sharedTransitionTag } = this.props;\n      if (!sharedTransitionTag) {\n        this._sharedElementTransition?.unregisterTransition(\n          this._componentViewTag,\n          isUnmounting\n        );\n        this._sharedElementTransition = null;\n        return;\n      }\n      const sharedElementTransition =\n        this.props.sharedTransitionStyle ??\n        this._sharedElementTransition ??\n        new SharedTransition();\n      sharedElementTransition.registerTransition(\n        this._componentViewTag,\n        sharedTransitionTag,\n        isUnmounting\n      );\n      this._sharedElementTransition = sharedElementTransition;\n    }\n\n    _setComponentRef = setAndForwardRef<Component | HTMLElement>({\n      getForwardedRef: () =>\n        this.props.forwardedRef as MutableRefObject<\n          Component<Record<string, unknown>, Record<string, unknown>, unknown>\n        >,\n      setLocalRef: (ref) => {\n        // TODO update config\n\n        const tag = IS_WEB\n          ? (ref as HTMLElement)\n          : findNodeHandle(ref as Component);\n\n        this._componentViewTag = tag as number;\n\n        const { layout, entering, exiting, sharedTransitionTag } = this.props;\n        if (\n          (layout || entering || exiting || sharedTransitionTag) &&\n          tag != null\n        ) {\n          if (!shouldBeUseWeb()) {\n            enableLayoutAnimations(true, false);\n          }\n\n          if (sharedTransitionTag) {\n            this._configureSharedTransition();\n          }\n          if (exiting && isFabric()) {\n            const reduceMotionInExiting =\n              'getReduceMotion' in exiting &&\n              typeof exiting.getReduceMotion === 'function'\n                ? getReduceMotionFromConfig(exiting.getReduceMotion())\n                : getReduceMotionFromConfig();\n            if (!reduceMotionInExiting) {\n              updateLayoutAnimations(\n                tag as number,\n                LayoutAnimationType.EXITING,\n                maybeBuild(\n                  exiting,\n                  this.props?.style,\n                  AnimatedComponent.displayName\n                )\n              );\n            }\n          }\n\n          const skipEntering = this.context?.current;\n          if (entering && !skipEntering && !IS_WEB) {\n            updateLayoutAnimations(\n              tag as number,\n              LayoutAnimationType.ENTERING,\n              maybeBuild(\n                entering,\n                this.props?.style,\n                AnimatedComponent.displayName\n              )\n            );\n          }\n        }\n\n        if (ref !== this._component) {\n          this._component = ref;\n        }\n      },\n    });\n\n    // This is a component lifecycle method from React, therefore we are not calling it directly.\n    // It is called before the component gets rerendered. This way we can access components' position before it changed\n    // and later on, in componentDidUpdate, calculate translation for layout transition.\n    getSnapshotBeforeUpdate() {\n      if (\n        IS_WEB &&\n        (this._component as HTMLElement)?.getBoundingClientRect !== undefined\n      ) {\n        return (this._component as HTMLElement).getBoundingClientRect();\n      }\n\n      return null;\n    }\n\n    render() {\n      const filteredProps = this._PropsFilter.filterNonAnimatedProps(this);\n\n      if (isJest()) {\n        filteredProps.jestAnimatedStyle = this.jestAnimatedStyle;\n      }\n\n      // Layout animations on web are set inside `componentDidMount` method, which is called after first render.\n      // Because of that we can encounter a situation in which component is visible for a short amount of time, and later on animation triggers.\n      // I've tested that on various browsers and devices and it did not happen to me. To be sure that it won't happen to someone else,\n      // I've decided to hide component at first render. Its visibility is reset in `componentDidMount`.\n      if (\n        this._isFirstRender &&\n        IS_WEB &&\n        filteredProps.entering &&\n        !getReducedMotionFromConfig(filteredProps.entering as CustomConfig)\n      ) {\n        filteredProps.style = {\n          ...(filteredProps.style ?? {}),\n          visibility: 'hidden', // Hide component until `componentDidMount` triggers\n        };\n      }\n\n      const platformProps = Platform.select({\n        web: {},\n        default: { collapsable: false },\n      });\n\n      const skipEntering = this.context?.current;\n      const nativeID =\n        skipEntering || !isFabric() ? undefined : `${this.reanimatedID}`;\n\n      return (\n        <Component\n          nativeID={nativeID}\n          {...filteredProps}\n          // Casting is used here, because ref can be null - in that case it cannot be assigned to HTMLElement.\n          // After spending some time trying to figure out what to do with this problem, we decided to leave it this way\n          ref={this._setComponentRef as (ref: Component) => void}\n          {...platformProps}\n        />\n      );\n    }\n  }\n\n  AnimatedComponent.displayName = `AnimatedComponent(${\n    Component.displayName || Component.name || 'Component'\n  })`;\n\n  return React.forwardRef<Component>((props, ref) => {\n    return (\n      <AnimatedComponent\n        {...props}\n        {...(ref === null ? null : { forwardedRef: ref })}\n      />\n    );\n  });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}