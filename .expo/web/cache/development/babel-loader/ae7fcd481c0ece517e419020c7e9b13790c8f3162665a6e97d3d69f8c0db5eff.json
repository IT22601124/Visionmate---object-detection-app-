{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports._updatePropsJS = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _JSReanimated = _interopRequireDefault(require(\"./JSReanimated\"));\nvar _webUtils = require(\"./webUtils\");\nvar _propsAllowlists = require(\"../propsAllowlists\");\nvar reanimatedJS = new _JSReanimated.default();\nglobal._makeShareableClone = function () {\n  throw new Error('[Reanimated] _makeShareableClone should never be called in JSReanimated.');\n};\nglobal._scheduleOnJS = function () {\n  throw new Error('[Reanimated] _scheduleOnJS should never be called in JSReanimated.');\n};\nglobal._scheduleOnRuntime = function () {\n  throw new Error('[Reanimated] _scheduleOnRuntime should never be called in JSReanimated.');\n};\nvar _updatePropsJS = exports._updatePropsJS = function _updatePropsJS(updates, viewRef, isAnimatedProps) {\n  if (viewRef) {\n    var component = viewRef.getAnimatableRef ? viewRef.getAnimatableRef() : viewRef;\n    var _Object$keys$reduce = Object.keys(updates).reduce(function (acc, key) {\n        var value = updates[key];\n        var index = typeof value === 'function' ? 1 : 0;\n        acc[index][key] = value;\n        return acc;\n      }, [{}, {}]),\n      _Object$keys$reduce2 = (0, _slicedToArray2.default)(_Object$keys$reduce, 1),\n      rawStyles = _Object$keys$reduce2[0];\n    if (typeof component.setNativeProps === 'function') {\n      setNativeProps(component, rawStyles, isAnimatedProps);\n    } else if (_webUtils.createReactDOMStyle !== undefined && component.style !== undefined) {\n      updatePropsDOM(component, rawStyles, isAnimatedProps);\n    } else if (Object.keys(component.props).length > 0) {\n      Object.keys(component.props).forEach(function (key) {\n        if (!rawStyles[key]) {\n          return;\n        }\n        var dashedKey = key.replace(/[A-Z]/g, function (m) {\n          return '-' + m.toLowerCase();\n        });\n        component._touchableNode.setAttribute(dashedKey, rawStyles[key]);\n      });\n    } else {\n      var componentName = 'className' in component ? component === null || component === void 0 ? void 0 : component.className : '';\n      console.warn(`[Reanimated] It's not possible to manipulate the component ${componentName}`);\n    }\n  }\n};\nvar setNativeProps = function setNativeProps(component, newProps, isAnimatedProps) {\n  var _component$setNativeP2;\n  if (isAnimatedProps) {\n    var _component$setNativeP;\n    var uiProps = {};\n    for (var key in newProps) {\n      if (isNativeProp(key)) {\n        uiProps[key] = newProps[key];\n      }\n    }\n    (_component$setNativeP = component.setNativeProps) === null || _component$setNativeP === void 0 || _component$setNativeP.call(component, uiProps);\n  }\n  var previousStyle = component.previousStyle ? component.previousStyle : {};\n  var currentStyle = Object.assign({}, previousStyle, newProps);\n  component.previousStyle = currentStyle;\n  (_component$setNativeP2 = component.setNativeProps) === null || _component$setNativeP2 === void 0 || _component$setNativeP2.call(component, {\n    style: currentStyle\n  });\n};\nvar updatePropsDOM = function updatePropsDOM(component, style, isAnimatedProps) {\n  var previousStyle = component.previousStyle ? component.previousStyle : {};\n  var currentStyle = Object.assign({}, previousStyle, style);\n  component.previousStyle = currentStyle;\n  var domStyle = (0, _webUtils.createReactDOMStyle)(currentStyle);\n  if (Array.isArray(domStyle.transform) && _webUtils.createTransformValue !== undefined) {\n    domStyle.transform = (0, _webUtils.createTransformValue)(domStyle.transform);\n  }\n  if (_webUtils.createTextShadowValue !== undefined && (domStyle.textShadowColor || domStyle.textShadowRadius || domStyle.textShadowOffset)) {\n    domStyle.textShadow = (0, _webUtils.createTextShadowValue)({\n      textShadowColor: domStyle.textShadowColor,\n      textShadowOffset: domStyle.textShadowOffset,\n      textShadowRadius: domStyle.textShadowRadius\n    });\n  }\n  for (var key in domStyle) {\n    if (isAnimatedProps) {\n      component.setAttribute(key, domStyle[key]);\n    } else {\n      component.style[key] = domStyle[key];\n    }\n  }\n};\nfunction isNativeProp(propName) {\n  return !!_propsAllowlists.PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST[propName];\n}\nvar _default = exports.default = reanimatedJS;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_updatePropsJS","_slicedToArray2","_JSReanimated","_webUtils","_propsAllowlists","reanimatedJS","JSReanimated","global","_makeShareableClone","Error","_scheduleOnJS","_scheduleOnRuntime","updates","viewRef","isAnimatedProps","component","getAnimatableRef","_Object$keys$reduce","keys","reduce","acc","key","index","_Object$keys$reduce2","rawStyles","setNativeProps","createReactDOMStyle","undefined","style","updatePropsDOM","props","length","forEach","dashedKey","replace","m","toLowerCase","_touchableNode","setAttribute","componentName","className","console","warn","newProps","_component$setNativeP2","_component$setNativeP","uiProps","isNativeProp","call","previousStyle","currentStyle","assign","domStyle","Array","isArray","transform","createTransformValue","createTextShadowValue","textShadowColor","textShadowRadius","textShadowOffset","textShadow","propName","PropsAllowlists","NATIVE_THREAD_PROPS_WHITELIST","_default"],"sources":["F:\\node\\vision\\node_modules\\react-native-reanimated\\lib\\module\\js-reanimated\\index.ts"],"sourcesContent":["'use strict';\nimport JSReanimated from './JSReanimated';\nimport type { StyleProps, AnimatedStyle } from '../commonTypes';\nimport {\n  createReactDOMStyle,\n  createTransformValue,\n  createTextShadowValue,\n} from './webUtils';\nimport { PropsAllowlists } from '../propsAllowlists';\n\nconst reanimatedJS = new JSReanimated();\n\nglobal._makeShareableClone = () => {\n  throw new Error(\n    '[Reanimated] _makeShareableClone should never be called in JSReanimated.'\n  );\n};\n\nglobal._scheduleOnJS = () => {\n  throw new Error(\n    '[Reanimated] _scheduleOnJS should never be called in JSReanimated.'\n  );\n};\n\nglobal._scheduleOnRuntime = () => {\n  throw new Error(\n    '[Reanimated] _scheduleOnRuntime should never be called in JSReanimated.'\n  );\n};\n\ninterface JSReanimatedComponent {\n  previousStyle: StyleProps;\n  setNativeProps?: (style: StyleProps) => void;\n  style?: StyleProps;\n  props: Record<string, string | number>;\n  _touchableNode: {\n    setAttribute: (key: string, props: unknown) => void;\n  };\n}\n\nexport interface ReanimatedHTMLElement extends HTMLElement {\n  previousStyle: StyleProps;\n  setNativeProps?: (style: StyleProps) => void;\n  props: Record<string, string | number>;\n  _touchableNode: {\n    setAttribute: (key: string, props: unknown) => void;\n  };\n  reanimatedDummy?: boolean;\n  removedAfterAnimation?: boolean;\n}\n\nexport const _updatePropsJS = (\n  // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n  updates: StyleProps | AnimatedStyle<any>,\n  viewRef: (JSReanimatedComponent | ReanimatedHTMLElement) & {\n    getAnimatableRef?: () => JSReanimatedComponent | ReanimatedHTMLElement;\n  },\n  isAnimatedProps?: boolean\n): void => {\n  if (viewRef) {\n    const component = viewRef.getAnimatableRef\n      ? viewRef.getAnimatableRef()\n      : viewRef;\n    const [rawStyles] = Object.keys(updates).reduce(\n      (acc: [StyleProps, AnimatedStyle<any>], key) => {\n        const value = updates[key];\n        const index = typeof value === 'function' ? 1 : 0;\n        acc[index][key] = value;\n        return acc;\n      },\n      [{}, {}]\n    );\n\n    if (typeof component.setNativeProps === 'function') {\n      // This is the legacy way to update props on React Native Web <= 0.18.\n      // Also, some components (e.g. from react-native-svg) don't have styles\n      // and always provide setNativeProps function instead (even on React Native Web 0.19+).\n      setNativeProps(component, rawStyles, isAnimatedProps);\n    } else if (\n      createReactDOMStyle !== undefined &&\n      component.style !== undefined\n    ) {\n      // React Native Web 0.19+ no longer provides setNativeProps function,\n      // so we need to update DOM nodes directly.\n      updatePropsDOM(component, rawStyles, isAnimatedProps);\n    } else if (Object.keys(component.props).length > 0) {\n      Object.keys(component.props).forEach((key) => {\n        if (!rawStyles[key]) {\n          return;\n        }\n        const dashedKey = key.replace(/[A-Z]/g, (m) => '-' + m.toLowerCase());\n        component._touchableNode.setAttribute(dashedKey, rawStyles[key]);\n      });\n    } else {\n      const componentName =\n        'className' in component ? component?.className : '';\n      console.warn(\n        `[Reanimated] It's not possible to manipulate the component ${componentName}`\n      );\n    }\n  }\n};\n\nconst setNativeProps = (\n  component: JSReanimatedComponent | ReanimatedHTMLElement,\n  newProps: StyleProps,\n  isAnimatedProps?: boolean\n): void => {\n  if (isAnimatedProps) {\n    const uiProps: Record<string, unknown> = {};\n    for (const key in newProps) {\n      if (isNativeProp(key)) {\n        uiProps[key] = newProps[key];\n      }\n    }\n    // Only update UI props directly on the component,\n    // other props can be updated as standard style props.\n    component.setNativeProps?.(uiProps);\n  }\n\n  const previousStyle = component.previousStyle ? component.previousStyle : {};\n  const currentStyle = { ...previousStyle, ...newProps };\n  component.previousStyle = currentStyle;\n\n  component.setNativeProps?.({ style: currentStyle });\n};\n\nconst updatePropsDOM = (\n  component: JSReanimatedComponent | HTMLElement,\n  style: StyleProps,\n  isAnimatedProps?: boolean\n): void => {\n  const previousStyle = (component as JSReanimatedComponent).previousStyle\n    ? (component as JSReanimatedComponent).previousStyle\n    : {};\n  const currentStyle = { ...previousStyle, ...style };\n  (component as JSReanimatedComponent).previousStyle = currentStyle;\n\n  const domStyle = createReactDOMStyle(currentStyle);\n  if (Array.isArray(domStyle.transform) && createTransformValue !== undefined) {\n    domStyle.transform = createTransformValue(domStyle.transform);\n  }\n\n  if (\n    createTextShadowValue !== undefined &&\n    (domStyle.textShadowColor ||\n      domStyle.textShadowRadius ||\n      domStyle.textShadowOffset)\n  ) {\n    domStyle.textShadow = createTextShadowValue({\n      textShadowColor: domStyle.textShadowColor,\n      textShadowOffset: domStyle.textShadowOffset,\n      textShadowRadius: domStyle.textShadowRadius,\n    });\n  }\n\n  for (const key in domStyle) {\n    if (isAnimatedProps) {\n      (component as HTMLElement).setAttribute(key, domStyle[key]);\n    } else {\n      (component.style as StyleProps)[key] = domStyle[key];\n    }\n  }\n};\n\nfunction isNativeProp(propName: string): boolean {\n  return !!PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST[propName];\n}\n\nexport default reanimatedJS;\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,sBAAA,GAAAC,OAAA;AAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,OAAA,GAAAF,OAAA,CAAAG,cAAA;AAAA,IAAAC,eAAA,GAAAR,sBAAA,CAAAC,OAAA;AACZ,IAAAQ,aAAA,GAAAT,sBAAA,CAAAC,OAAA;AAEA,IAAAS,SAAA,GAAAT,OAAA;AAKA,IAAAU,gBAAA,GAAAV,OAAA;AAEA,IAAMW,YAAY,GAAG,IAAIC,qBAAY,CAAC,CAAC;AAEvCC,MAAM,CAACC,mBAAmB,GAAG,YAAM;EACjC,MAAM,IAAIC,KAAK,CACb,0EACF,CAAC;AACH,CAAC;AAEDF,MAAM,CAACG,aAAa,GAAG,YAAM;EAC3B,MAAM,IAAID,KAAK,CACb,oEACF,CAAC;AACH,CAAC;AAEDF,MAAM,CAACI,kBAAkB,GAAG,YAAM;EAChC,MAAM,IAAIF,KAAK,CACb,yEACF,CAAC;AACH,CAAC;AAuBM,IAAMT,cAAc,GAAAH,OAAA,CAAAG,cAAA,GAAG,SAAjBA,cAAcA,CAEzBY,OAAwC,EACxCC,OAEC,EACDC,eAAyB,EAChB;EACT,IAAID,OAAO,EAAE;IACX,IAAME,SAAS,GAAGF,OAAO,CAACG,gBAAgB,GACtCH,OAAO,CAACG,gBAAgB,CAAC,CAAC,GAC1BH,OAAO;IACX,IAAAI,mBAAA,GAAoBtB,MAAM,CAACuB,IAAI,CAACN,OAAO,CAAC,CAACO,MAAM,CAC7C,UAACC,GAAqC,EAAEC,GAAG,EAAK;QAC9C,IAAMvB,KAAK,GAAGc,OAAO,CAACS,GAAG,CAAC;QAC1B,IAAMC,KAAK,GAAG,OAAOxB,KAAK,KAAK,UAAU,GAAG,CAAC,GAAG,CAAC;QACjDsB,GAAG,CAACE,KAAK,CAAC,CAACD,GAAG,CAAC,GAAGvB,KAAK;QACvB,OAAOsB,GAAG;MACZ,CAAC,EACD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CACT,CAAC;MAAAG,oBAAA,OAAAtB,eAAA,CAAAF,OAAA,EAAAkB,mBAAA;MARMO,SAAS,GAAAD,oBAAA;IAUhB,IAAI,OAAOR,SAAS,CAACU,cAAc,KAAK,UAAU,EAAE;MAIlDA,cAAc,CAACV,SAAS,EAAES,SAAS,EAAEV,eAAe,CAAC;IACvD,CAAC,MAAM,IACLY,6BAAmB,KAAKC,SAAS,IACjCZ,SAAS,CAACa,KAAK,KAAKD,SAAS,EAC7B;MAGAE,cAAc,CAACd,SAAS,EAAES,SAAS,EAAEV,eAAe,CAAC;IACvD,CAAC,MAAM,IAAInB,MAAM,CAACuB,IAAI,CAACH,SAAS,CAACe,KAAK,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;MAClDpC,MAAM,CAACuB,IAAI,CAACH,SAAS,CAACe,KAAK,CAAC,CAACE,OAAO,CAAE,UAAAX,GAAG,EAAK;QAC5C,IAAI,CAACG,SAAS,CAACH,GAAG,CAAC,EAAE;UACnB;QACF;QACA,IAAMY,SAAS,GAAGZ,GAAG,CAACa,OAAO,CAAC,QAAQ,EAAG,UAAAC,CAAC;UAAA,OAAK,GAAG,GAAGA,CAAC,CAACC,WAAW,CAAC,CAAC;QAAA,EAAC;QACrErB,SAAS,CAACsB,cAAc,CAACC,YAAY,CAACL,SAAS,EAAET,SAAS,CAACH,GAAG,CAAC,CAAC;MAClE,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,IAAMkB,aAAa,GACjB,WAAW,IAAIxB,SAAS,GAAGA,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEyB,SAAS,GAAG,EAAE;MACtDC,OAAO,CAACC,IAAI,CACT,8DAA6DH,aAAc,EAC9E,CAAC;IACH;EACF;AACF,CAAC;AAED,IAAMd,cAAc,GAAG,SAAjBA,cAAcA,CAClBV,SAAwD,EACxD4B,QAAoB,EACpB7B,eAAyB,EAChB;EAAA,IAAA8B,sBAAA;EACT,IAAI9B,eAAe,EAAE;IAAA,IAAA+B,qBAAA;IACnB,IAAMC,OAAgC,GAAG,CAAC,CAAC;IAC3C,KAAK,IAAMzB,GAAG,IAAIsB,QAAQ,EAAE;MAC1B,IAAII,YAAY,CAAC1B,GAAG,CAAC,EAAE;QACrByB,OAAO,CAACzB,GAAG,CAAC,GAAGsB,QAAQ,CAACtB,GAAG,CAAC;MAC9B;IACF;IAGA,CAAAwB,qBAAA,GAAA9B,SAAS,CAACU,cAAc,cAAAoB,qBAAA,eAAxBA,qBAAA,CAAAG,IAAA,CAAAjC,SAAS,EAAkB+B,OAAO,CAAC;EACrC;EAEA,IAAMG,aAAa,GAAGlC,SAAS,CAACkC,aAAa,GAAGlC,SAAS,CAACkC,aAAa,GAAG,CAAC,CAAC;EAC5E,IAAMC,YAAY,GAAAvD,MAAA,CAAAwD,MAAA,KAAQF,aAAa,EAAKN,QAAA,CAAU;EACtD5B,SAAS,CAACkC,aAAa,GAAGC,YAAY;EAEtC,CAAAN,sBAAA,GAAA7B,SAAS,CAACU,cAAc,cAAAmB,sBAAA,eAAxBA,sBAAA,CAAAI,IAAA,CAAAjC,SAAS,EAAkB;IAAEa,KAAK,EAAEsB;EAAa,CAAC,CAAC;AACrD,CAAC;AAED,IAAMrB,cAAc,GAAG,SAAjBA,cAAcA,CAClBd,SAA8C,EAC9Ca,KAAiB,EACjBd,eAAyB,EAChB;EACT,IAAMmC,aAAa,GAAIlC,SAAS,CAA2BkC,aAAa,GACnElC,SAAS,CAA2BkC,aAAa,GAClD,CAAC,CAAC;EACN,IAAMC,YAAY,GAAAvD,MAAA,CAAAwD,MAAA,KAAQF,aAAa,EAAKrB,KAAA,CAAO;EAClDb,SAAS,CAA2BkC,aAAa,GAAGC,YAAY;EAEjE,IAAME,QAAQ,GAAG,IAAA1B,6BAAmB,EAACwB,YAAY,CAAC;EAClD,IAAIG,KAAK,CAACC,OAAO,CAACF,QAAQ,CAACG,SAAS,CAAC,IAAIC,8BAAoB,KAAK7B,SAAS,EAAE;IAC3EyB,QAAQ,CAACG,SAAS,GAAG,IAAAC,8BAAoB,EAACJ,QAAQ,CAACG,SAAS,CAAC;EAC/D;EAEA,IACEE,+BAAqB,KAAK9B,SAAS,KAClCyB,QAAQ,CAACM,eAAe,IACvBN,QAAQ,CAACO,gBAAgB,IACzBP,QAAQ,CAACQ,gBAAgB,CAAC,EAC5B;IACAR,QAAQ,CAACS,UAAU,GAAG,IAAAJ,+BAAqB,EAAC;MAC1CC,eAAe,EAAEN,QAAQ,CAACM,eAAe;MACzCE,gBAAgB,EAAER,QAAQ,CAACQ,gBAAgB;MAC3CD,gBAAgB,EAAEP,QAAQ,CAACO;IAC7B,CAAC,CAAC;EACJ;EAEA,KAAK,IAAMtC,GAAG,IAAI+B,QAAQ,EAAE;IAC1B,IAAItC,eAAe,EAAE;MAClBC,SAAS,CAAiBuB,YAAY,CAACjB,GAAG,EAAE+B,QAAQ,CAAC/B,GAAG,CAAC,CAAC;IAC7D,CAAC,MAAM;MACJN,SAAS,CAACa,KAAK,CAAgBP,GAAG,CAAC,GAAG+B,QAAQ,CAAC/B,GAAG,CAAC;IACtD;EACF;AACF,CAAC;AAED,SAAS0B,YAAYA,CAACe,QAAgB,EAAW;EAC/C,OAAO,CAAC,CAACC,gCAAe,CAACC,6BAA6B,CAACF,QAAQ,CAAC;AAClE;AAAA,IAAAG,QAAA,GAAApE,OAAA,CAAAE,OAAA,GAEeM,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}