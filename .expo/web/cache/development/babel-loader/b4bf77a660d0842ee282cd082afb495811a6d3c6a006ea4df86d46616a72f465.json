{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SensorContainer = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _Sensor = _interopRequireDefault(require(\"./Sensor\"));\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nvar SensorContainer = exports.SensorContainer = function () {\n  function SensorContainer() {\n    (0, _classCallCheck2.default)(this, SensorContainer);\n    _defineProperty(this, \"nativeSensors\", new Map());\n  }\n  return (0, _createClass2.default)(SensorContainer, [{\n    key: \"getSensorId\",\n    value: function getSensorId(sensorType, config) {\n      return sensorType * 100 + config.iosReferenceFrame * 10 + Number(config.adjustToInterfaceOrientation);\n    }\n  }, {\n    key: \"initializeSensor\",\n    value: function initializeSensor(sensorType, config) {\n      var sensorId = this.getSensorId(sensorType, config);\n      if (!this.nativeSensors.has(sensorId)) {\n        var newSensor = new _Sensor.default(sensorType, config);\n        this.nativeSensors.set(sensorId, newSensor);\n      }\n      var sensor = this.nativeSensors.get(sensorId);\n      return sensor.getSharedValue();\n    }\n  }, {\n    key: \"registerSensor\",\n    value: function registerSensor(sensorType, config, handler) {\n      var sensorId = this.getSensorId(sensorType, config);\n      if (!this.nativeSensors.has(sensorId)) {\n        return -1;\n      }\n      var sensor = this.nativeSensors.get(sensorId);\n      if (sensor && sensor.isAvailable() && (sensor.isRunning() || sensor.register(handler))) {\n        sensor.listenersNumber++;\n        return sensorId;\n      }\n      return -1;\n    }\n  }, {\n    key: \"unregisterSensor\",\n    value: function unregisterSensor(sensorId) {\n      if (this.nativeSensors.has(sensorId)) {\n        var sensor = this.nativeSensors.get(sensorId);\n        if (sensor && sensor.isRunning()) {\n          sensor.listenersNumber--;\n          if (sensor.listenersNumber === 0) {\n            sensor.unregister();\n          }\n        }\n      }\n    }\n  }]);\n}();","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","SensorContainer","_classCallCheck2","_createClass2","_Sensor","_defineProperty","obj","key","_toPropertyKey","enumerable","configurable","writable","t","i","_toPrimitive","r","e","Symbol","toPrimitive","call","TypeError","String","Number","default","Map","getSensorId","sensorType","config","iosReferenceFrame","adjustToInterfaceOrientation","initializeSensor","sensorId","nativeSensors","has","newSensor","Sensor","set","sensor","get","getSharedValue","registerSensor","handler","isAvailable","isRunning","register","listenersNumber","unregisterSensor","unregister"],"sources":["F:\\node\\vision\\node_modules\\react-native-reanimated\\lib\\module\\SensorContainer.ts"],"sourcesContent":["'use strict';\nimport type {\n  SensorType,\n  SensorConfig,\n  Value3D,\n  ValueRotation,\n  ShareableRef,\n  SharedValue,\n} from './commonTypes';\nimport Sensor from './Sensor';\n\nexport class SensorContainer {\n  private nativeSensors: Map<number, Sensor> = new Map();\n\n  getSensorId(sensorType: SensorType, config: SensorConfig) {\n    return (\n      sensorType * 100 +\n      config.iosReferenceFrame * 10 +\n      Number(config.adjustToInterfaceOrientation)\n    );\n  }\n\n  initializeSensor(\n    sensorType: SensorType,\n    config: SensorConfig\n  ): SharedValue<Value3D | ValueRotation> {\n    const sensorId = this.getSensorId(sensorType, config);\n\n    if (!this.nativeSensors.has(sensorId)) {\n      const newSensor = new Sensor(sensorType, config);\n      this.nativeSensors.set(sensorId, newSensor);\n    }\n\n    const sensor = this.nativeSensors.get(sensorId);\n    return sensor!.getSharedValue();\n  }\n\n  registerSensor(\n    sensorType: SensorType,\n    config: SensorConfig,\n    handler: ShareableRef<(data: Value3D | ValueRotation) => void>\n  ): number {\n    const sensorId = this.getSensorId(sensorType, config);\n\n    if (!this.nativeSensors.has(sensorId)) {\n      return -1;\n    }\n\n    const sensor = this.nativeSensors.get(sensorId);\n    if (\n      sensor &&\n      sensor.isAvailable() &&\n      (sensor.isRunning() || sensor.register(handler))\n    ) {\n      sensor.listenersNumber++;\n      return sensorId;\n    }\n    return -1;\n  }\n\n  unregisterSensor(sensorId: number) {\n    if (this.nativeSensors.has(sensorId)) {\n      const sensor = this.nativeSensors.get(sensorId);\n      if (sensor && sensor.isRunning()) {\n        sensor.listenersNumber--;\n        if (sensor.listenersNumber === 0) {\n          sensor.unregister();\n        }\n      }\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}