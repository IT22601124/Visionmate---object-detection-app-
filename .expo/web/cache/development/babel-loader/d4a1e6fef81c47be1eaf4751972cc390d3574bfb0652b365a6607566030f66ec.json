{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _expoModulesCore = require(\"expo-modules-core\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _ExpoCamera = _interopRequireDefault(require(\"./ExpoCamera\"));\nvar _ExpoCameraManager = _interopRequireDefault(require(\"./ExpoCameraManager\"));\nvar _props = require(\"./utils/props\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"F:\\\\node\\\\vision\\\\node_modules\\\\expo-camera\\\\build\\\\CameraView.js\";\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nvar emitter = new _expoModulesCore.EventEmitter(_ExpoCameraManager.default);\nvar EventThrottleMs = 500;\nvar _PICTURE_SAVED_CALLBACKS = {};\nvar _GLOBAL_PICTURE_ID = 1;\nfunction ensurePictureOptions(options) {\n  if (!options || typeof options !== 'object') {\n    return {};\n  }\n  if (!options.quality) {\n    options.quality = 1;\n  }\n  if (options.mirror) {\n    console.warn('The `mirror` option is deprecated. Please use the `mirror` prop on the `CameraView` instead.');\n  }\n  if (options.onPictureSaved) {\n    var id = _GLOBAL_PICTURE_ID++;\n    _PICTURE_SAVED_CALLBACKS[id] = options.onPictureSaved;\n    options.id = id;\n    options.fastMode = true;\n  }\n  return options;\n}\nfunction ensureRecordingOptions(options) {\n  if (!options || typeof options !== 'object') {\n    return {};\n  }\n  if (options.mirror) {\n    console.warn('The `mirror` option is deprecated. Please use the `mirror` prop on the `CameraView` instead.');\n  }\n  return options;\n}\nfunction _onPictureSaved(_ref) {\n  var nativeEvent = _ref.nativeEvent;\n  var id = nativeEvent.id,\n    data = nativeEvent.data;\n  var callback = _PICTURE_SAVED_CALLBACKS[id];\n  if (callback) {\n    callback(data);\n    delete _PICTURE_SAVED_CALLBACKS[id];\n  }\n}\nvar CameraView = exports.default = function (_React$Component) {\n  function CameraView() {\n    var _this;\n    (0, _classCallCheck2.default)(this, CameraView);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, CameraView, [].concat(args));\n    _this._cameraRef = React.createRef();\n    _this._lastEvents = {};\n    _this._lastEventsTimes = {};\n    _this._onCameraReady = function () {\n      if (_this.props.onCameraReady) {\n        _this.props.onCameraReady();\n      }\n    };\n    _this._onMountError = function (_ref2) {\n      var nativeEvent = _ref2.nativeEvent;\n      if (_this.props.onMountError) {\n        _this.props.onMountError(nativeEvent);\n      }\n    };\n    _this._onResponsiveOrientationChanged = function (_ref3) {\n      var nativeEvent = _ref3.nativeEvent;\n      if (_this.props.onResponsiveOrientationChanged) {\n        _this.props.onResponsiveOrientationChanged(nativeEvent);\n      }\n    };\n    _this._onObjectDetected = function (callback) {\n      return function (_ref4) {\n        var nativeEvent = _ref4.nativeEvent;\n        var type = nativeEvent.type;\n        if (_this._lastEvents[type] && _this._lastEventsTimes[type] && JSON.stringify(nativeEvent) === _this._lastEvents[type] && new Date().getTime() - _this._lastEventsTimes[type].getTime() < EventThrottleMs) {\n          return;\n        }\n        if (callback) {\n          callback(nativeEvent);\n          _this._lastEventsTimes[type] = new Date();\n          _this._lastEvents[type] = JSON.stringify(nativeEvent);\n        }\n      };\n    };\n    _this._setReference = function (ref) {\n      if (ref) {\n        if (_expoModulesCore.Platform.OS === 'web') {\n          _this._cameraHandle = ref;\n        }\n      }\n    };\n    return _this;\n  }\n  (0, _inherits2.default)(CameraView, _React$Component);\n  return (0, _createClass2.default)(CameraView, [{\n    key: \"getAvailablePictureSizesAsync\",\n    value: (function () {\n      var _getAvailablePictureSizesAsync = (0, _asyncToGenerator2.default)(function* () {\n        var _yield$this$_cameraRe, _this$_cameraRef$curr;\n        return (_yield$this$_cameraRe = yield (_this$_cameraRef$curr = this._cameraRef.current) == null ? void 0 : _this$_cameraRef$curr.getAvailablePictureSizes()) != null ? _yield$this$_cameraRe : [];\n      });\n      function getAvailablePictureSizesAsync() {\n        return _getAvailablePictureSizesAsync.apply(this, arguments);\n      }\n      return getAvailablePictureSizesAsync;\n    }())\n  }, {\n    key: \"resumePreview\",\n    value: (function () {\n      var _resumePreview = (0, _asyncToGenerator2.default)(function* () {\n        var _this$_cameraRef$curr2;\n        return (_this$_cameraRef$curr2 = this._cameraRef.current) == null ? void 0 : _this$_cameraRef$curr2.resumePreview();\n      });\n      function resumePreview() {\n        return _resumePreview.apply(this, arguments);\n      }\n      return resumePreview;\n    }())\n  }, {\n    key: \"pausePreview\",\n    value: (function () {\n      var _pausePreview = (0, _asyncToGenerator2.default)(function* () {\n        var _this$_cameraRef$curr3;\n        return (_this$_cameraRef$curr3 = this._cameraRef.current) == null ? void 0 : _this$_cameraRef$curr3.pausePreview();\n      });\n      function pausePreview() {\n        return _pausePreview.apply(this, arguments);\n      }\n      return pausePreview;\n    }())\n  }, {\n    key: \"takePictureAsync\",\n    value: function () {\n      var _takePictureAsync = (0, _asyncToGenerator2.default)(function* (options) {\n        var _this$_cameraRef$curr4;\n        var pictureOptions = ensurePictureOptions(options);\n        return yield (_this$_cameraRef$curr4 = this._cameraRef.current) == null ? void 0 : _this$_cameraRef$curr4.takePicture(pictureOptions);\n      });\n      function takePictureAsync(_x) {\n        return _takePictureAsync.apply(this, arguments);\n      }\n      return takePictureAsync;\n    }()\n  }, {\n    key: \"recordAsync\",\n    value: (function () {\n      var _recordAsync = (0, _asyncToGenerator2.default)(function* (options) {\n        var _this$_cameraRef$curr5;\n        var recordingOptions = ensureRecordingOptions(options);\n        return yield (_this$_cameraRef$curr5 = this._cameraRef.current) == null ? void 0 : _this$_cameraRef$curr5.record(recordingOptions);\n      });\n      function recordAsync(_x2) {\n        return _recordAsync.apply(this, arguments);\n      }\n      return recordAsync;\n    }())\n  }, {\n    key: \"stopRecording\",\n    value: function stopRecording() {\n      var _this$_cameraRef$curr6;\n      (_this$_cameraRef$curr6 = this._cameraRef.current) == null || _this$_cameraRef$curr6.stopRecording();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var nativeProps = (0, _props.ensureNativeProps)(this.props);\n      var onBarcodeScanned = this.props.onBarcodeScanned ? this._onObjectDetected(this.props.onBarcodeScanned) : undefined;\n      return (0, _jsxRuntime.jsx)(_ExpoCamera.default, Object.assign({}, nativeProps, {\n        ref: this._cameraRef,\n        onCameraReady: this._onCameraReady,\n        onMountError: this._onMountError,\n        onBarcodeScanned: onBarcodeScanned,\n        onPictureSaved: _onPictureSaved,\n        onResponsiveOrientationChanged: this._onResponsiveOrientationChanged\n      }));\n    }\n  }], [{\n    key: \"isAvailableAsync\",\n    value: (function () {\n      var _isAvailableAsync = (0, _asyncToGenerator2.default)(function* () {\n        if (!_ExpoCameraManager.default.isAvailableAsync) {\n          throw new _expoModulesCore.UnavailabilityError('expo-camera', 'isAvailableAsync');\n        }\n        return yield _ExpoCameraManager.default.isAvailableAsync();\n      });\n      function isAvailableAsync() {\n        return _isAvailableAsync.apply(this, arguments);\n      }\n      return isAvailableAsync;\n    }())\n  }, {\n    key: \"getAvailableVideoCodecsAsync\",\n    value: function () {\n      var _getAvailableVideoCodecsAsync = (0, _asyncToGenerator2.default)(function* () {\n        if (!_ExpoCameraManager.default.getAvailableVideoCodecsAsync) {\n          throw new _expoModulesCore.UnavailabilityError('Camera', 'getAvailableVideoCodecsAsync');\n        }\n        return yield _ExpoCameraManager.default.getAvailableVideoCodecsAsync();\n      });\n      function getAvailableVideoCodecsAsync() {\n        return _getAvailableVideoCodecsAsync.apply(this, arguments);\n      }\n      return getAvailableVideoCodecsAsync;\n    }()\n  }, {\n    key: \"launchScanner\",\n    value: (function () {\n      var _launchScanner = (0, _asyncToGenerator2.default)(function* (options) {\n        if (!options) {\n          options = {\n            barcodeTypes: []\n          };\n        }\n        if (_expoModulesCore.Platform.OS === 'ios' && CameraView.isModernBarcodeScannerAvailable) {\n          yield _ExpoCameraManager.default.launchScanner(options);\n        }\n      });\n      function launchScanner(_x3) {\n        return _launchScanner.apply(this, arguments);\n      }\n      return launchScanner;\n    }())\n  }, {\n    key: \"dismissScanner\",\n    value: (function () {\n      var _dismissScanner = (0, _asyncToGenerator2.default)(function* () {\n        if (_expoModulesCore.Platform.OS === 'ios' && CameraView.isModernBarcodeScannerAvailable) {\n          yield _ExpoCameraManager.default.dismissScanner();\n        }\n      });\n      function dismissScanner() {\n        return _dismissScanner.apply(this, arguments);\n      }\n      return dismissScanner;\n    }())\n  }, {\n    key: \"onModernBarcodeScanned\",\n    value: function onModernBarcodeScanned(listener) {\n      return emitter.addListener('onModernBarcodeScanned', listener);\n    }\n  }]);\n}(React.Component);\nCameraView.isModernBarcodeScannerAvailable = _ExpoCameraManager.default.isModernBarcodeScannerAvailable;\nCameraView.ConversionTables = _props.ConversionTables;\nCameraView.defaultProps = {\n  zoom: 0,\n  facing: 'back',\n  enableTorch: false,\n  mode: 'picture',\n  flash: 'off'\n};","map":{"version":3,"names":["_expoModulesCore","require","React","_interopRequireWildcard","_ExpoCamera","_interopRequireDefault","_ExpoCameraManager","_props","_jsxRuntime","_jsxFileName","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_callSuper","o","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","emitter","EventEmitter","CameraManager","EventThrottleMs","_PICTURE_SAVED_CALLBACKS","_GLOBAL_PICTURE_ID","ensurePictureOptions","options","quality","mirror","console","warn","onPictureSaved","id","fastMode","ensureRecordingOptions","_onPictureSaved","_ref","nativeEvent","data","callback","CameraView","exports","_React$Component","_this","_classCallCheck2","_len","arguments","length","args","Array","_key","concat","_cameraRef","createRef","_lastEvents","_lastEventsTimes","_onCameraReady","props","onCameraReady","_onMountError","_ref2","onMountError","_onResponsiveOrientationChanged","_ref3","onResponsiveOrientationChanged","_onObjectDetected","_ref4","type","JSON","stringify","Date","getTime","_setReference","ref","Platform","OS","_cameraHandle","_inherits2","_createClass2","key","value","_getAvailablePictureSizesAsync","_asyncToGenerator2","_yield$this$_cameraRe","_this$_cameraRef$curr","current","getAvailablePictureSizes","getAvailablePictureSizesAsync","_resumePreview","_this$_cameraRef$curr2","resumePreview","_pausePreview","_this$_cameraRef$curr3","pausePreview","_takePictureAsync","_this$_cameraRef$curr4","pictureOptions","takePicture","takePictureAsync","_x","_recordAsync","_this$_cameraRef$curr5","recordingOptions","record","recordAsync","_x2","stopRecording","_this$_cameraRef$curr6","render","nativeProps","ensureNativeProps","onBarcodeScanned","undefined","jsx","assign","_isAvailableAsync","isAvailableAsync","UnavailabilityError","_getAvailableVideoCodecsAsync","getAvailableVideoCodecsAsync","_launchScanner","barcodeTypes","isModernBarcodeScannerAvailable","launchScanner","_x3","_dismissScanner","dismissScanner","onModernBarcodeScanned","listener","addListener","Component","ConversionTables","defaultProps","zoom","facing","enableTorch","mode","flash"],"sources":["F:\\node\\vision\\node_modules\\expo-camera\\src\\CameraView.tsx"],"sourcesContent":["import { Platform, UnavailabilityError, EventEmitter, Subscription } from 'expo-modules-core';\nimport * as React from 'react';\nimport { Ref } from 'react';\n\nimport {\n  CameraCapturedPicture,\n  CameraOrientation,\n  CameraPictureOptions,\n  CameraProps,\n  CameraRecordingOptions,\n  CameraViewRef,\n  ScanningOptions,\n  ScanningResult,\n  VideoCodec,\n} from './Camera.types';\nimport ExpoCamera from './ExpoCamera';\nimport CameraManager from './ExpoCameraManager';\nimport { ConversionTables, ensureNativeProps } from './utils/props';\n\nconst emitter = new EventEmitter(CameraManager);\n\nconst EventThrottleMs = 500;\n\nconst _PICTURE_SAVED_CALLBACKS = {};\n\nlet _GLOBAL_PICTURE_ID = 1;\n\nfunction ensurePictureOptions(options?: CameraPictureOptions): CameraPictureOptions {\n  if (!options || typeof options !== 'object') {\n    return {};\n  }\n\n  if (!options.quality) {\n    options.quality = 1;\n  }\n\n  if (options.mirror) {\n    console.warn(\n      'The `mirror` option is deprecated. Please use the `mirror` prop on the `CameraView` instead.'\n    );\n  }\n\n  if (options.onPictureSaved) {\n    const id = _GLOBAL_PICTURE_ID++;\n    _PICTURE_SAVED_CALLBACKS[id] = options.onPictureSaved;\n    options.id = id;\n    options.fastMode = true;\n  }\n\n  return options;\n}\n\nfunction ensureRecordingOptions(options?: CameraRecordingOptions): CameraRecordingOptions {\n  if (!options || typeof options !== 'object') {\n    return {};\n  }\n\n  if (options.mirror) {\n    console.warn(\n      'The `mirror` option is deprecated. Please use the `mirror` prop on the `CameraView` instead.'\n    );\n  }\n\n  return options;\n}\n\nfunction _onPictureSaved({\n  nativeEvent,\n}: {\n  nativeEvent: { data: CameraCapturedPicture; id: number };\n}) {\n  const { id, data } = nativeEvent;\n  const callback = _PICTURE_SAVED_CALLBACKS[id];\n  if (callback) {\n    callback(data);\n    delete _PICTURE_SAVED_CALLBACKS[id];\n  }\n}\n\nexport default class CameraView extends React.Component<CameraProps> {\n  /**\n   * Property that determines if the current device has the ability to use `DataScannerViewController` (iOS 16+).\n   */\n  static isModernBarcodeScannerAvailable: boolean = CameraManager.isModernBarcodeScannerAvailable;\n  /**\n   * Check whether the current device has a camera. This is useful for web and simulators cases.\n   * This isn't influenced by the Permissions API (all platforms), or HTTP usage (in the browser).\n   * You will still need to check if the native permission has been accepted.\n   * @platform web\n   */\n  static async isAvailableAsync(): Promise<boolean> {\n    if (!CameraManager.isAvailableAsync) {\n      throw new UnavailabilityError('expo-camera', 'isAvailableAsync');\n    }\n\n    return await CameraManager.isAvailableAsync();\n  }\n\n  // @needsAudit\n  /**\n   * Queries the device for the available video codecs that can be used in video recording.\n   * @return A promise that resolves to a list of strings that represents available codecs.\n   * @platform ios\n   */\n  static async getAvailableVideoCodecsAsync(): Promise<VideoCodec[]> {\n    if (!CameraManager.getAvailableVideoCodecsAsync) {\n      throw new UnavailabilityError('Camera', 'getAvailableVideoCodecsAsync');\n    }\n\n    return await CameraManager.getAvailableVideoCodecsAsync();\n  }\n\n  /**\n   * Get picture sizes that are supported by the device.\n   * @return Returns a Promise that resolves to an array of strings representing picture sizes that can be passed to `pictureSize` prop.\n   * The list varies across Android devices but is the same for every iOS.\n   */\n  async getAvailablePictureSizesAsync(): Promise<string[]> {\n    return (await this._cameraRef.current?.getAvailablePictureSizes()) ?? [];\n  }\n\n  /**\n   * Resumes the camera preview.\n   */\n  async resumePreview(): Promise<void> {\n    return this._cameraRef.current?.resumePreview();\n  }\n\n  /**\n   * Pauses the camera preview. It is not recommended to use `takePictureAsync` when preview is paused.\n   */\n  async pausePreview(): Promise<void> {\n    return this._cameraRef.current?.pausePreview();\n  }\n\n  // Values under keys from this object will be transformed to native options\n  static ConversionTables = ConversionTables;\n\n  static defaultProps: CameraProps = {\n    zoom: 0,\n    facing: 'back',\n    enableTorch: false,\n    mode: 'picture',\n    flash: 'off',\n  };\n\n  _cameraHandle?: number | null;\n  _cameraRef = React.createRef<CameraViewRef>();\n  _lastEvents: { [eventName: string]: string } = {};\n  _lastEventsTimes: { [eventName: string]: Date } = {};\n\n  // @needsAudit\n  /**\n   * Takes a picture and saves it to app's cache directory. Photos are rotated to match device's orientation\n   * (if `options.skipProcessing` flag is not enabled) and scaled to match the preview. Anyway on Android it is essential\n   * to set ratio prop to get a picture with correct dimensions.\n   * > **Note**: Make sure to wait for the [`onCameraReady`](#oncameraready) callback before calling this method.\n   * @param options An object in form of `CameraPictureOptions` type.\n   * @return Returns a Promise that resolves to `CameraCapturedPicture` object, where `uri` is a URI to the local image file on iOS,\n   * Android, and a base64 string on web (usable as the source for an `Image` element). The `width` and `height` properties specify\n   * the dimensions of the image. `base64` is included if the `base64` option was truthy, and is a string containing the JPEG data\n   * of the image in Base64--prepend that with `'data:image/jpg;base64,'` to get a data URI, which you can use as the source\n   * for an `Image` element for example. `exif` is included if the `exif` option was truthy, and is an object containing EXIF\n   * data for the image--the names of its properties are EXIF tags and their values are the values for those tags.\n   *\n   * > On native platforms, the local image URI is temporary. Use [`FileSystem.copyAsync`](filesystem/#filesystemcopyasyncoptions)\n   * > to make a permanent copy of the image.\n   *\n   * **Note** Avoid calling this method while the preview is paused. On iOS, this will take a picture of the last frame that is currently on screen, on Android, this will throw an error.\n   */\n  async takePictureAsync(\n    options?: CameraPictureOptions\n  ): Promise<CameraCapturedPicture | undefined> {\n    const pictureOptions = ensurePictureOptions(options);\n\n    return await this._cameraRef.current?.takePicture(pictureOptions);\n  }\n\n  /**\n   * Presents a modal view controller that uses the [`DataScannerViewController`](https://developer.apple.com/documentation/visionkit/scanning_data_with_the_camera) available on iOS 16+.\n   * @platform ios\n   */\n  static async launchScanner(options?: ScanningOptions): Promise<void> {\n    if (!options) {\n      options = { barcodeTypes: [] };\n    }\n    if (Platform.OS === 'ios' && CameraView.isModernBarcodeScannerAvailable) {\n      await CameraManager.launchScanner(options);\n    }\n  }\n\n  /**\n   * Dimiss the scanner presented by `launchScanner`.\n   * @platform ios\n   */\n  static async dismissScanner(): Promise<void> {\n    if (Platform.OS === 'ios' && CameraView.isModernBarcodeScannerAvailable) {\n      await CameraManager.dismissScanner();\n    }\n  }\n\n  /**\n   * Invokes the `listener` function when a bar code has been successfully scanned. The callback is provided with\n   * an object of the `ScanningResult` shape, where the `type` refers to the bar code type that was scanned and the `data` is the information encoded in the bar code\n   * (in this case of QR codes, this is often a URL). See [`BarcodeType`](#barcodetype) for supported values.\n   * @param listener Invoked with the [ScanningResult](#scanningresult) when a bar code has been successfully scanned.\n   *\n   * @platform ios\n   */\n  static onModernBarcodeScanned(listener: (event: ScanningResult) => void): Subscription {\n    return emitter.addListener<ScanningResult>('onModernBarcodeScanned', listener);\n  }\n\n  /**\n   * Starts recording a video that will be saved to cache directory. Videos are rotated to match device's orientation.\n   * Flipping camera during a recording results in stopping it.\n   * @param options A map of `CameraRecordingOptions` type.\n   * @return Returns a Promise that resolves to an object containing video file `uri` property and a `codec` property on iOS.\n   * The Promise is returned if `stopRecording` was invoked, one of `maxDuration` and `maxFileSize` is reached or camera preview is stopped.\n   * @platform android\n   * @platform ios\n   */\n  async recordAsync(options?: CameraRecordingOptions): Promise<{ uri: string } | undefined> {\n    const recordingOptions = ensureRecordingOptions(options);\n    return await this._cameraRef.current?.record(recordingOptions);\n  }\n\n  /**\n   * Stops recording if any is in progress.\n   */\n  stopRecording() {\n    this._cameraRef.current?.stopRecording();\n  }\n\n  _onCameraReady = () => {\n    if (this.props.onCameraReady) {\n      this.props.onCameraReady();\n    }\n  };\n\n  _onMountError = ({ nativeEvent }: { nativeEvent: { message: string } }) => {\n    if (this.props.onMountError) {\n      this.props.onMountError(nativeEvent);\n    }\n  };\n\n  _onResponsiveOrientationChanged = ({\n    nativeEvent,\n  }: {\n    nativeEvent: { orientation: CameraOrientation };\n  }) => {\n    if (this.props.onResponsiveOrientationChanged) {\n      this.props.onResponsiveOrientationChanged(nativeEvent);\n    }\n  };\n\n  _onObjectDetected =\n    (callback?: Function) =>\n    ({ nativeEvent }: { nativeEvent: any }) => {\n      const { type } = nativeEvent;\n      if (\n        this._lastEvents[type] &&\n        this._lastEventsTimes[type] &&\n        JSON.stringify(nativeEvent) === this._lastEvents[type] &&\n        new Date().getTime() - this._lastEventsTimes[type].getTime() < EventThrottleMs\n      ) {\n        return;\n      }\n\n      if (callback) {\n        callback(nativeEvent);\n        this._lastEventsTimes[type] = new Date();\n        this._lastEvents[type] = JSON.stringify(nativeEvent);\n      }\n    };\n\n  _setReference = (ref: Ref<CameraViewRef>) => {\n    if (ref) {\n      // TODO(Bacon): Unify these - perhaps with hooks?\n      if (Platform.OS === 'web') {\n        this._cameraHandle = ref as any;\n      }\n    }\n  };\n\n  render() {\n    const nativeProps = ensureNativeProps(this.props);\n    const onBarcodeScanned = this.props.onBarcodeScanned\n      ? this._onObjectDetected(this.props.onBarcodeScanned)\n      : undefined;\n\n    return (\n      <ExpoCamera\n        {...nativeProps}\n        ref={this._cameraRef}\n        onCameraReady={this._onCameraReady}\n        onMountError={this._onMountError}\n        onBarcodeScanned={onBarcodeScanned}\n        onPictureSaved={_onPictureSaved}\n        onResponsiveOrientationChanged={this._onResponsiveOrientationChanged}\n      />\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}