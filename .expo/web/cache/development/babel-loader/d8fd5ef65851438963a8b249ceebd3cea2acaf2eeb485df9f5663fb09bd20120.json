{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ensureNativeModulesAreInstalled = ensureNativeModulesAreInstalled;\nvar _reactNative = require(\"react-native\");\nfunction ensureNativeModulesAreInstalled() {\n  if (globalThis.expo) {\n    return;\n  }\n  try {\n    if (_reactNative.Platform.OS === 'web') {\n      require('./web');\n    } else {\n      var _NativeModules$ExpoMo;\n      (_NativeModules$ExpoMo = _reactNative.NativeModules.ExpoModulesCore) == null || _NativeModules$ExpoMo.installModules();\n    }\n  } catch (error) {\n    console.error(`Unable to install Expo modules: ${error}`);\n  }\n}","map":{"version":3,"names":["_reactNative","require","ensureNativeModulesAreInstalled","globalThis","expo","Platform","OS","_NativeModules$ExpoMo","NativeModules","ExpoModulesCore","installModules","error","console"],"sources":["F:\\node\\vision\\node_modules\\expo-modules-core\\src\\ensureNativeModulesAreInstalled.ts"],"sourcesContent":["import { NativeModules, Platform } from 'react-native';\n\n/**\n * Ensures that the native modules are installed in the current runtime.\n * Otherwise, it synchronously calls a native function that installs them.\n */\nexport function ensureNativeModulesAreInstalled(): void {\n  if (globalThis.expo) {\n    return;\n  }\n  try {\n    if (Platform.OS === 'web') {\n      // Requiring web folder sets up the `globalThis.expo` object.\n      require('./web');\n    } else {\n      // TODO: ExpoModulesCore shouldn't be optional here,\n      // but to keep backwards compatibility let's just ignore it in SDK 50.\n      // In most cases the modules were already installed from the native side.\n      NativeModules.ExpoModulesCore?.installModules();\n    }\n  } catch (error) {\n    console.error(`Unable to install Expo modules: ${error}`);\n  }\n}\n"],"mappings":";;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAMM,SAAUC,+BAA+BA,CAAA;EAC7C,IAAIC,UAAU,CAACC,IAAI,EAAE;IACnB;;EAEF,IAAI;IACF,IAAIC,qBAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;MAEzBL,OAAO,CAAC,OAAO,CAAC;KACjB,MAAM;MAAA,IAAAM,qBAAA;MAIL,CAAAA,qBAAA,GAAAC,0BAAa,CAACC,eAAe,aAA7BF,qBAAA,CAA+BG,cAAc,EAAE;;GAElD,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmCA,KAAK,EAAE,CAAC;;AAE7D","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}