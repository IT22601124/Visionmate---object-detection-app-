{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useDerivedValue = useDerivedValue;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _react = require(\"react\");\nvar _animation = require(\"../animation\");\nvar _core = require(\"../core\");\nvar _PlatformChecker = require(\"../PlatformChecker\");\nvar _worklet_6792802823485_init_data = {\n  code: \"function useDerivedValueJs1(){const{sharedValue,updater}=this.__closure;sharedValue.value=updater();}\",\n  location: \"F:\\\\node\\\\vision\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\hook\\\\useDerivedValue.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"useDerivedValueJs1\\\",\\\"sharedValue\\\",\\\"updater\\\",\\\"__closure\\\",\\\"value\\\"],\\\"sources\\\":[\\\"F:/node/vision/node_modules/react-native-reanimated/lib/module/hook/useDerivedValue.js\\\"],\\\"mappings\\\":\\\"AAuCgB,SAAAA,kBAAMA,CAAA,QAAAC,WAAA,CAAAC,OAAA,OAAAC,SAAA,CAGhBF,WAAW,CAACG,KAAK,CAAGF,OAAO,CAAC,CAAC,CAC/B\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.15.1\"\n};\nfunction useDerivedValue(updater, dependencies) {\n  var _updater$__closure;\n  var initRef = (0, _react.useRef)(null);\n  var inputs = Object.values((_updater$__closure = updater.__closure) != null ? _updater$__closure : {});\n  if ((0, _PlatformChecker.shouldBeUseWeb)()) {\n    var _dependencies;\n    if (!inputs.length && (_dependencies = dependencies) !== null && _dependencies !== void 0 && _dependencies.length) {\n      inputs = dependencies;\n    }\n  }\n  if (dependencies === undefined) {\n    dependencies = [].concat((0, _toConsumableArray2.default)(inputs), [updater.__workletHash]);\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n  if (initRef.current === null) {\n    initRef.current = (0, _core.makeMutable)((0, _animation.initialUpdaterRun)(updater));\n  }\n  var sharedValue = initRef.current;\n  (0, _react.useEffect)(function () {\n    var fun = function () {\n      var _e = [new global.Error(), -3, -27];\n      var useDerivedValueJs1 = function useDerivedValueJs1() {\n        sharedValue.value = updater();\n      };\n      useDerivedValueJs1.__closure = {\n        sharedValue: sharedValue,\n        updater: updater\n      };\n      useDerivedValueJs1.__workletHash = 6792802823485;\n      useDerivedValueJs1.__initData = _worklet_6792802823485_init_data;\n      useDerivedValueJs1.__stackDetails = _e;\n      return useDerivedValueJs1;\n    }();\n    var mapperId = (0, _core.startMapper)(fun, inputs, [sharedValue]);\n    return function () {\n      (0, _core.stopMapper)(mapperId);\n    };\n  }, dependencies);\n  (0, _react.useEffect)(function () {\n    return function () {\n      initRef.current = null;\n    };\n  }, []);\n  return sharedValue;\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","useDerivedValue","_toConsumableArray2","_react","_animation","_core","_PlatformChecker","_worklet_6792802823485_init_data","code","location","sourceMap","version","updater","dependencies","_updater$__closure","initRef","useRef","inputs","values","__closure","shouldBeUseWeb","_dependencies","length","undefined","concat","default","__workletHash","push","current","makeMutable","initialUpdaterRun","sharedValue","useEffect","fun","_e","global","Error","useDerivedValueJs1","__initData","__stackDetails","mapperId","startMapper","stopMapper"],"sources":["F:\\node\\vision\\node_modules\\react-native-reanimated\\lib\\module\\hook\\useDerivedValue.ts"],"sourcesContent":["'use strict';\nimport { useEffect, useRef } from 'react';\nimport { initialUpdaterRun } from '../animation';\nimport type { SharedValue, WorkletFunction } from '../commonTypes';\nimport { makeMutable, startMapper, stopMapper } from '../core';\nimport type { DependencyList } from './commonTypes';\nimport { shouldBeUseWeb } from '../PlatformChecker';\n\nexport type DerivedValue<Value> = Readonly<SharedValue<Value>>;\n\n/**\n * Lets you create new shared values based on existing ones while keeping them reactive.\n *\n * @param updater - A function called whenever at least one of the shared values or state used in the function body changes.\n * @param dependencies - An optional array of dependencies. Only relevant when using Reanimated without the Babel plugin on the Web.\n * @returns A new readonly shared value based on a value returned from the updater function\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/useDerivedValue\n */\n// @ts-expect-error This overload is required by our API.\nexport function useDerivedValue<Value>(\n  updater: () => Value,\n  dependencies?: DependencyList\n): DerivedValue<Value>;\n\nexport function useDerivedValue<Value>(\n  updater: WorkletFunction<[], Value>,\n  dependencies?: DependencyList\n): DerivedValue<Value> {\n  const initRef = useRef<SharedValue<Value> | null>(null);\n  let inputs = Object.values(updater.__closure ?? {});\n  if (shouldBeUseWeb()) {\n    if (!inputs.length && dependencies?.length) {\n      // let web work without a Babel/SWC plugin\n      inputs = dependencies;\n    }\n  }\n\n  // build dependencies\n  if (dependencies === undefined) {\n    dependencies = [...inputs, updater.__workletHash];\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n\n  if (initRef.current === null) {\n    initRef.current = makeMutable(initialUpdaterRun(updater));\n  }\n\n  const sharedValue: SharedValue<Value> = initRef.current;\n\n  useEffect(() => {\n    const fun = () => {\n      'worklet';\n      sharedValue.value = updater();\n    };\n    const mapperId = startMapper(fun, inputs, [sharedValue]);\n    return () => {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n\n  useEffect(() => {\n    return () => {\n      initRef.current = null;\n    };\n  }, []);\n\n  return sharedValue;\n}\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,sBAAA,GAAAC,OAAA;AAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,eAAA,GAAAA,eAAA;AAAA,IAAAC,mBAAA,GAAAP,sBAAA,CAAAC,OAAA;AACZ,IAAAO,MAAA,GAAAP,OAAA;AACA,IAAAQ,UAAA,GAAAR,OAAA;AAEA,IAAAS,KAAA,GAAAT,OAAA;AAEA,IAAAU,gBAAA,GAAAV,OAAA;AAAmD,IAAAW,gCAAA;EAAAC,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAkB5C,SAASV,eAAeA,CAC7BW,OAAmC,EACnCC,YAA6B,EACR;EAAA,IAAAC,kBAAA;EACrB,IAAMC,OAAO,GAAG,IAAAC,aAAM,EAA4B,IAAI,CAAC;EACvD,IAAIC,MAAM,GAAGpB,MAAM,CAACqB,MAAM,EAAAJ,kBAAA,GAACF,OAAO,CAACO,SAAS,YAAAL,kBAAA,GAAI,CAAC,CAAC,CAAC;EACnD,IAAI,IAAAM,+BAAc,EAAC,CAAC,EAAE;IAAA,IAAAC,aAAA;IACpB,IAAI,CAACJ,MAAM,CAACK,MAAM,KAAAD,aAAA,GAAIR,YAAY,cAAAQ,aAAA,eAAZA,aAAA,CAAcC,MAAM,EAAE;MAE1CL,MAAM,GAAGJ,YAAY;IACvB;EACF;EAGA,IAAIA,YAAY,KAAKU,SAAS,EAAE;IAC9BV,YAAY,MAAAW,MAAA,KAAAtB,mBAAA,CAAAuB,OAAA,EAAOR,MAAM,IAAEL,OAAO,CAACc,aAAa,EAAC;EACnD,CAAC,MAAM;IACLb,YAAY,CAACc,IAAI,CAACf,OAAO,CAACc,aAAa,CAAC;EAC1C;EAEA,IAAIX,OAAO,CAACa,OAAO,KAAK,IAAI,EAAE;IAC5Bb,OAAO,CAACa,OAAO,GAAG,IAAAC,iBAAW,EAAC,IAAAC,4BAAiB,EAAClB,OAAO,CAAC,CAAC;EAC3D;EAEA,IAAMmB,WAA+B,GAAGhB,OAAO,CAACa,OAAO;EAEvD,IAAAI,gBAAS,EAAC,YAAM;IACd,IAAMC,GAAG,GAAG;MAAA,IAAAC,EAAA,QAAAC,MAAA,CAAAC,KAAA;MAAA,IAAAC,kBAAA,YAAAA,mBAAA,EAAM;QAEhBN,WAAW,CAAC/B,KAAK,GAAGY,OAAO,CAAC,CAAC;MAC/B,CAAC;MAAAyB,kBAAA,CAAAlB,SAAA;QAAAY,WAAA,EADCA,WAAW;QAAAnB,OAAA,EAASA;MAAO;MAAAyB,kBAAA,CAAAX,aAAA;MAAAW,kBAAA,CAAAC,UAAA,GAAA/B,gCAAA;MAAA8B,kBAAA,CAAAE,cAAA,GAAAL,EAAA;MAAA,OAAAG,kBAAA;IAAA,CAFjB,EAGX;IACD,IAAMG,QAAQ,GAAG,IAAAC,iBAAW,EAACR,GAAG,EAAEhB,MAAM,EAAE,CAACc,WAAW,CAAC,CAAC;IACxD,OAAO,YAAM;MACX,IAAAW,gBAAU,EAACF,QAAQ,CAAC;IACtB,CAAC;EACH,CAAC,EAAE3B,YAAY,CAAC;EAEhB,IAAAmB,gBAAS,EAAC,YAAM;IACd,OAAO,YAAM;MACXjB,OAAO,CAACa,OAAO,GAAG,IAAI;IACxB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOG,WAAW;AACpB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}