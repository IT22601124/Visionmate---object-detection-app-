{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registerWorkletStackDetails = registerWorkletStackDetails;\nexports.reportFatalErrorOnJS = reportFatalErrorOnJS;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _workletStackDetails = new Map();\nfunction registerWorkletStackDetails(hash, stackDetails) {\n  _workletStackDetails.set(hash, stackDetails);\n}\nfunction getBundleOffset(error) {\n  var _error$stack;\n  var frame = (_error$stack = error.stack) === null || _error$stack === void 0 || (_error$stack = _error$stack.split('\\n')) === null || _error$stack === void 0 ? void 0 : _error$stack[0];\n  if (frame) {\n    var parsedFrame = /@([^@]+):(\\d+):(\\d+)/.exec(frame);\n    if (parsedFrame) {\n      var _parsedFrame = (0, _slicedToArray2.default)(parsedFrame, 4),\n        file = _parsedFrame[1],\n        line = _parsedFrame[2],\n        col = _parsedFrame[3];\n      return [file, Number(line), Number(col)];\n    }\n  }\n  return ['unknown', 0, 0];\n}\nfunction processStack(stack) {\n  var workletStackEntries = stack.match(/worklet_(\\d+):(\\d+):(\\d+)/g);\n  var result = stack;\n  workletStackEntries === null || workletStackEntries === void 0 || workletStackEntries.forEach(function (match) {\n    var _match$split$map = match.split(/:|_/).map(Number),\n      _match$split$map2 = (0, _slicedToArray2.default)(_match$split$map, 4),\n      hash = _match$split$map2[1],\n      origLine = _match$split$map2[2],\n      origCol = _match$split$map2[3];\n    var errorDetails = _workletStackDetails.get(hash);\n    if (!errorDetails) {\n      return;\n    }\n    var _errorDetails = (0, _slicedToArray2.default)(errorDetails, 3),\n      error = _errorDetails[0],\n      lineOffset = _errorDetails[1],\n      colOffset = _errorDetails[2];\n    var _getBundleOffset = getBundleOffset(error),\n      _getBundleOffset2 = (0, _slicedToArray2.default)(_getBundleOffset, 3),\n      bundleFile = _getBundleOffset2[0],\n      bundleLine = _getBundleOffset2[1],\n      bundleCol = _getBundleOffset2[2];\n    var line = origLine + bundleLine + lineOffset;\n    var col = origCol + bundleCol + colOffset;\n    result = result.replace(match, `${bundleFile}:${line}:${col}`);\n  });\n  return result;\n}\nfunction reportFatalErrorOnJS(_ref) {\n  var message = _ref.message,\n    stack = _ref.stack;\n  var error = new Error();\n  error.message = message;\n  error.stack = stack ? processStack(stack) : undefined;\n  error.name = 'ReanimatedError';\n  error.jsEngine = 'reanimated';\n  global.ErrorUtils.reportFatalError(error);\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","registerWorkletStackDetails","reportFatalErrorOnJS","_slicedToArray2","_workletStackDetails","Map","hash","stackDetails","set","getBundleOffset","error","_error$stack","frame","stack","split","parsedFrame","exec","_parsedFrame","default","file","line","col","Number","processStack","workletStackEntries","match","result","forEach","_match$split$map","map","_match$split$map2","origLine","origCol","errorDetails","get","_errorDetails","lineOffset","colOffset","_getBundleOffset","_getBundleOffset2","bundleFile","bundleLine","bundleCol","replace","_ref","message","Error","undefined","name","jsEngine","global","ErrorUtils","reportFatalError"],"sources":["F:\\node\\vision\\node_modules\\react-native-reanimated\\lib\\module\\errors.ts"],"sourcesContent":["'use strict';\nimport type { WorkletStackDetails } from './commonTypes';\n\nconst _workletStackDetails = new Map<number, WorkletStackDetails>();\n\nexport function registerWorkletStackDetails(\n  hash: number,\n  stackDetails: WorkletStackDetails\n) {\n  _workletStackDetails.set(hash, stackDetails);\n}\n\nfunction getBundleOffset(error: Error): [string, number, number] {\n  const frame = error.stack?.split('\\n')?.[0];\n  if (frame) {\n    const parsedFrame = /@([^@]+):(\\d+):(\\d+)/.exec(frame);\n    if (parsedFrame) {\n      const [, file, line, col] = parsedFrame;\n      return [file, Number(line), Number(col)];\n    }\n  }\n  return ['unknown', 0, 0];\n}\n\nfunction processStack(stack: string): string {\n  const workletStackEntries = stack.match(/worklet_(\\d+):(\\d+):(\\d+)/g);\n  let result = stack;\n  workletStackEntries?.forEach((match) => {\n    const [, hash, origLine, origCol] = match.split(/:|_/).map(Number);\n    const errorDetails = _workletStackDetails.get(hash);\n    if (!errorDetails) {\n      return;\n    }\n    const [error, lineOffset, colOffset] = errorDetails;\n    const [bundleFile, bundleLine, bundleCol] = getBundleOffset(error);\n    const line = origLine + bundleLine + lineOffset;\n    const col = origCol + bundleCol + colOffset;\n\n    result = result.replace(match, `${bundleFile}:${line}:${col}`);\n  });\n  return result;\n}\n\nexport function reportFatalErrorOnJS({\n  message,\n  stack,\n}: {\n  message: string;\n  stack?: string;\n}) {\n  const error = new Error();\n  error.message = message;\n  error.stack = stack ? processStack(stack) : undefined;\n  error.name = 'ReanimatedError';\n  // @ts-ignore React Native's ErrorUtils implementation extends the Error type with jsEngine field\n  error.jsEngine = 'reanimated';\n  // @ts-ignore the reportFatalError method is an internal method of ErrorUtils not exposed in the type definitions\n  global.ErrorUtils.reportFatalError(error);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}