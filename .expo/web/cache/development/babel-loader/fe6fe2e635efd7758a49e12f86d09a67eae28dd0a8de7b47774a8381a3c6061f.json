{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.adaptViewConfig = adaptViewConfig;\nexports.addWhitelistedNativeProps = addWhitelistedNativeProps;\nexports.addWhitelistedUIProps = addWhitelistedUIProps;\nexports.configureProps = configureProps;\nvar _propsAllowlists = require(\"./propsAllowlists\");\nvar _core = require(\"./core\");\nfunction assertNoOverlapInLists() {\n  for (var key in _propsAllowlists.PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST) {\n    if (key in _propsAllowlists.PropsAllowlists.UI_THREAD_PROPS_WHITELIST) {\n      throw new Error(`[Reanimated] Property \\`${key}\\` was whitelisted both as UI and native prop. Please remove it from one of the lists.`);\n    }\n  }\n}\nfunction configureProps() {\n  assertNoOverlapInLists();\n  (0, _core.jsiConfigureProps)(Object.keys(_propsAllowlists.PropsAllowlists.UI_THREAD_PROPS_WHITELIST), Object.keys(_propsAllowlists.PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST));\n}\nfunction addWhitelistedNativeProps(props) {\n  var oldSize = Object.keys(_propsAllowlists.PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST).length;\n  _propsAllowlists.PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST = Object.assign({}, _propsAllowlists.PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST, props);\n  if (oldSize !== Object.keys(_propsAllowlists.PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST).length) {\n    configureProps();\n  }\n}\nfunction addWhitelistedUIProps(props) {\n  var oldSize = Object.keys(_propsAllowlists.PropsAllowlists.UI_THREAD_PROPS_WHITELIST).length;\n  _propsAllowlists.PropsAllowlists.UI_THREAD_PROPS_WHITELIST = Object.assign({}, _propsAllowlists.PropsAllowlists.UI_THREAD_PROPS_WHITELIST, props);\n  if (oldSize !== Object.keys(_propsAllowlists.PropsAllowlists.UI_THREAD_PROPS_WHITELIST).length) {\n    configureProps();\n  }\n}\nvar PROCESSED_VIEW_NAMES = new Set();\nfunction adaptViewConfig(viewConfig) {\n  var viewName = viewConfig.uiViewClassName;\n  var props = viewConfig.validAttributes;\n  if (!PROCESSED_VIEW_NAMES.has(viewName)) {\n    var propsToAdd = {};\n    Object.keys(props).forEach(function (key) {\n      if (!(key in _propsAllowlists.PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST) && !(key in _propsAllowlists.PropsAllowlists.UI_THREAD_PROPS_WHITELIST)) {\n        propsToAdd[key] = true;\n      }\n    });\n    addWhitelistedUIProps(propsToAdd);\n    PROCESSED_VIEW_NAMES.add(viewName);\n  }\n}\nconfigureProps();","map":{"version":3,"names":["Object","defineProperty","exports","value","adaptViewConfig","addWhitelistedNativeProps","addWhitelistedUIProps","configureProps","_propsAllowlists","require","_core","assertNoOverlapInLists","key","PropsAllowlists","NATIVE_THREAD_PROPS_WHITELIST","UI_THREAD_PROPS_WHITELIST","Error","jsiConfigureProps","keys","props","oldSize","length","assign","PROCESSED_VIEW_NAMES","Set","viewConfig","viewName","uiViewClassName","validAttributes","has","propsToAdd","forEach","add"],"sources":["F:\\node\\vision\\node_modules\\react-native-reanimated\\lib\\module\\ConfigHelper.ts"],"sourcesContent":["'use strict';\nimport { PropsAllowlists } from './propsAllowlists';\nimport { jsiConfigureProps } from './core';\nfunction assertNoOverlapInLists() {\n  for (const key in PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST) {\n    if (key in PropsAllowlists.UI_THREAD_PROPS_WHITELIST) {\n      throw new Error(\n        `[Reanimated] Property \\`${key}\\` was whitelisted both as UI and native prop. Please remove it from one of the lists.`\n      );\n    }\n  }\n}\n\nexport function configureProps(): void {\n  assertNoOverlapInLists();\n  jsiConfigureProps(\n    Object.keys(PropsAllowlists.UI_THREAD_PROPS_WHITELIST),\n    Object.keys(PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST)\n  );\n}\n\nexport function addWhitelistedNativeProps(\n  props: Record<string, boolean>\n): void {\n  const oldSize = Object.keys(\n    PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST\n  ).length;\n  PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST = {\n    ...PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST,\n    ...props,\n  };\n  if (\n    oldSize !==\n    Object.keys(PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST).length\n  ) {\n    configureProps();\n  }\n}\n\nexport function addWhitelistedUIProps(props: Record<string, boolean>): void {\n  const oldSize = Object.keys(PropsAllowlists.UI_THREAD_PROPS_WHITELIST).length;\n  PropsAllowlists.UI_THREAD_PROPS_WHITELIST = {\n    ...PropsAllowlists.UI_THREAD_PROPS_WHITELIST,\n    ...props,\n  };\n  if (\n    oldSize !== Object.keys(PropsAllowlists.UI_THREAD_PROPS_WHITELIST).length\n  ) {\n    configureProps();\n  }\n}\n\nconst PROCESSED_VIEW_NAMES = new Set();\n\nexport interface ViewConfig {\n  uiViewClassName: string;\n  validAttributes: Record<string, unknown>;\n}\n/**\n * updates UI props whitelist for given view host instance\n * this will work just once for every view name\n */\n\nexport function adaptViewConfig(viewConfig: ViewConfig): void {\n  const viewName = viewConfig.uiViewClassName;\n  const props = viewConfig.validAttributes;\n\n  // update whitelist of UI props for this view name only once\n  if (!PROCESSED_VIEW_NAMES.has(viewName)) {\n    const propsToAdd: Record<string, boolean> = {};\n    Object.keys(props).forEach((key) => {\n      // we don't want to add native props as they affect layout\n      // we also skip props which repeat here\n      if (\n        !(key in PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST) &&\n        !(key in PropsAllowlists.UI_THREAD_PROPS_WHITELIST)\n      ) {\n        propsToAdd[key] = true;\n      }\n    });\n    addWhitelistedUIProps(propsToAdd);\n\n    PROCESSED_VIEW_NAMES.add(viewName);\n  }\n}\n\nconfigureProps();\n"],"mappings":"AAAA,YAAY;;AAAAA,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,eAAA,GAAAA,eAAA;AAAAF,OAAA,CAAAG,yBAAA,GAAAA,yBAAA;AAAAH,OAAA,CAAAI,qBAAA,GAAAA,qBAAA;AAAAJ,OAAA,CAAAK,cAAA,GAAAA,cAAA;AACZ,IAAAC,gBAAA,GAAAC,OAAA;AACA,IAAAC,KAAA,GAAAD,OAAA;AACA,SAASE,sBAAsBA,CAAA,EAAG;EAChC,KAAK,IAAMC,GAAG,IAAIC,gCAAe,CAACC,6BAA6B,EAAE;IAC/D,IAAIF,GAAG,IAAIC,gCAAe,CAACE,yBAAyB,EAAE;MACpD,MAAM,IAAIC,KAAK,CACZ,2BAA0BJ,GAAI,wFACjC,CAAC;IACH;EACF;AACF;AAEO,SAASL,cAAcA,CAAA,EAAS;EACrCI,sBAAsB,CAAC,CAAC;EACxB,IAAAM,uBAAiB,EACfjB,MAAM,CAACkB,IAAI,CAACL,gCAAe,CAACE,yBAAyB,CAAC,EACtDf,MAAM,CAACkB,IAAI,CAACL,gCAAe,CAACC,6BAA6B,CAC3D,CAAC;AACH;AAEO,SAAST,yBAAyBA,CACvCc,KAA8B,EACxB;EACN,IAAMC,OAAO,GAAGpB,MAAM,CAACkB,IAAI,CACzBL,gCAAe,CAACC,6BAClB,CAAC,CAACO,MAAM;EACRR,gCAAe,CAACC,6BAA6B,GAAAd,MAAA,CAAAsB,MAAA,KACxCT,gCAAe,CAACC,6BAA6B,EAC7CK,KAAA,CACJ;EACD,IACEC,OAAO,KACPpB,MAAM,CAACkB,IAAI,CAACL,gCAAe,CAACC,6BAA6B,CAAC,CAACO,MAAM,EACjE;IACAd,cAAc,CAAC,CAAC;EAClB;AACF;AAEO,SAASD,qBAAqBA,CAACa,KAA8B,EAAQ;EAC1E,IAAMC,OAAO,GAAGpB,MAAM,CAACkB,IAAI,CAACL,gCAAe,CAACE,yBAAyB,CAAC,CAACM,MAAM;EAC7ER,gCAAe,CAACE,yBAAyB,GAAAf,MAAA,CAAAsB,MAAA,KACpCT,gCAAe,CAACE,yBAAyB,EACzCI,KAAA,CACJ;EACD,IACEC,OAAO,KAAKpB,MAAM,CAACkB,IAAI,CAACL,gCAAe,CAACE,yBAAyB,CAAC,CAACM,MAAM,EACzE;IACAd,cAAc,CAAC,CAAC;EAClB;AACF;AAEA,IAAMgB,oBAAoB,GAAG,IAAIC,GAAG,CAAC,CAAC;AAW/B,SAASpB,eAAeA,CAACqB,UAAsB,EAAQ;EAC5D,IAAMC,QAAQ,GAAGD,UAAU,CAACE,eAAe;EAC3C,IAAMR,KAAK,GAAGM,UAAU,CAACG,eAAe;EAGxC,IAAI,CAACL,oBAAoB,CAACM,GAAG,CAACH,QAAQ,CAAC,EAAE;IACvC,IAAMI,UAAmC,GAAG,CAAC,CAAC;IAC9C9B,MAAM,CAACkB,IAAI,CAACC,KAAK,CAAC,CAACY,OAAO,CAAE,UAAAnB,GAAG,EAAK;MAGlC,IACE,EAAEA,GAAG,IAAIC,gCAAe,CAACC,6BAA6B,CAAC,IACvD,EAAEF,GAAG,IAAIC,gCAAe,CAACE,yBAAyB,CAAC,EACnD;QACAe,UAAU,CAAClB,GAAG,CAAC,GAAG,IAAI;MACxB;IACF,CAAC,CAAC;IACFN,qBAAqB,CAACwB,UAAU,CAAC;IAEjCP,oBAAoB,CAACS,GAAG,CAACN,QAAQ,CAAC;EACpC;AACF;AAEAnB,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}